# DO NOT EDIT
# This file was automatically generated using json-schema-to-nickel
let js2n
  = import "../lib/main.ncl"
  in
let rec refs
    = {}
    in
  {
      dashboard
        | {
          annotations
            | std.contract.any_of
              [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
            | doc "annotations metadata"
            | optional,
          editable
            | Bool
            | doc "whether a dashboard is editable or not"
            | optional,
          graphTooltip
            | js2n.number.Maximum 2
            | js2n.number.Minimum 0
            | doc "0 for no shared crosshair or tooltip (default), 1 for shared crosshair, 2 for shared crosshair AND shared tooltip"
            | optional,
          hideControls | Bool | optional,
          id
            | js2n.Nullable Number
            | doc "unique numeric identifier for the dashboard. (generated by the db)"
            | optional,
          links | js2n.Always | optional,
          panels
            | Array
              {
                content | String | optional,
                gridPos
                  | {
                    h
                      | Number
                      | doc "In grid height units, each represents 30 pixels."
                      | optional,
                    w
                      | js2n.number.Maximum 24
                      | js2n.number.Minimum 1
                      | doc "1-24 (the width of the dashboard is divided into 24 columns)"
                      | optional,
                    x
                      | Number
                      | doc "The x position, in same unit as w."
                      | optional,
                    y
                      | Number
                      | doc "The y position, in same unit as h."
                      | optional,
                    ..
                  }
                  | doc "The gridPos property describes the panel size and position in grid coordinates."
                  | optional,
                id | Number | optional,
                mode | String | optional,
                title | String | optional,
                type | String | optional,
                ..
              }
            | doc "Panels are the building blocks of a dashboard. It consists of data source queries, type of graphs, aliases, etc. Panel JSON consists of an array of JSON objects, each representing a different panel. Most of the fields are common for all panels but some fields depend on the panel type."
            | optional,
          refresh
            | std.contract.any_of
              [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
            | doc "auto-refresh interval"
            | optional,
          schemaVersion
            | Number
            | doc "version of the JSON schema (integer), incremented each time a Grafana update brings changes to said schema"
            | optional,
          style
            | String
            | doc "theme of dashboard, i.e. dark or light"
            | optional,
          tags
            | Array String
            | doc "tags associated with dashboard, an array of strings"
            | optional,
          templating
            | {
              enable
                | Bool
                | doc "whether templating is enabled or not"
                | optional,
              list
                | Array
                  {
                    allFormat
                      | String
                      | doc "format to use while fetching all values from data source, eg: wildcard, glob, regex, pipe, etc."
                      | optional,
                    current
                      | {
                        tags | Array String | optional,
                        text | String | optional,
                        value | String | optional,
                        ..
                      }
                      | doc "shows current selected variable text/value on the dashboard"
                      | optional,
                    datasource
                      | js2n.Nullable String
                      | doc "shows data source for the variables"
                      | optional,
                    includeAll
                      | Bool
                      | doc "whether all value option is available or not"
                      | optional,
                    multi
                      | Bool
                      | doc "whether multiple values can be selected or not from variable value list"
                      | optional,
                    multiFormat
                      | String
                      | doc "format to use while fetching timeseries from data source"
                      | optional,
                    name | String | doc "name of variable" | optional,
                    options
                      | Array
                        {
                          selected | Bool | optional,
                          text | String | optional,
                          value | String | optional,
                          ..
                        }
                      | doc "array of variable text/value pairs available for selection on dashboard"
                      | optional,
                    query
                      | String
                      | doc "data source query used to fetch values for a variable"
                      | optional,
                    refresh | Bool | optional,
                    regex | String | optional,
                    type
                      | String
                      | doc "type of variable, i.e. custom, query or interval"
                      | optional,
                    ..
                  }
                | doc "an array of objects each representing one template variable"
                | optional,
              ..
            }
            | doc "templating metadata"
            | optional,
          time
            | std.contract.any_of
              [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
            | doc "time range for dashboard, i.e. last 6 hours, last 7 days, etc"
            | optional,
          timepicker
            | {
              collapse
                | Bool
                | doc "whether timepicker is collapsed or not"
                | optional,
              enable
                | Bool
                | doc "whether timepicker is enabled or not"
                | optional,
              notice | Bool | optional,
              now | Bool | optional,
              refresh_intervals | Array String | optional,
              status | String | optional,
              type | String | optional,
              ..
            }
            | doc "timepicker metadata"
            | optional,
          timezone
            | String
            | doc "timezone of dashboard, i.e. utc or browser"
            | optional,
          title | String | doc "current title of dashboard" | optional,
          uid
            | js2n.string.MaxLength 40
            | js2n.string.MinLength 8
            | doc "unique dashboard identifier that can be generated by anyone. string (8-40)"
            | optional,
          version
            | js2n.number.Minimum 1
            | doc "version of the dashboard (integer), incremented each time the dashboard is updated"
            | optional,
          ..
        }
        | optional,
      meta | { isStarred | Bool | optional, .. } | optional,
      overwrite | Bool | optional,
      ..
    }