# DO NOT EDIT
# This file was automatically generated using json-schema-to-nickel
let js2n
  = import "../lib/main.ncl"
  in
let rec refs
    = {
      "definitions.schema" =
        {
            chat
              | {
                auto_reply
                  | Bool
                  | doc "Enable the bot to reply automatically without requiring the user to tag it."
                  | optional,
                integrations
                  | {
                    jira
                      | {
                        usage
                          | std.enum.TagOrString
                          | [| 'disabled, 'enabled, 'auto |]
                          | doc "Jira | Enable the Jira integration for opening issues, etc. 'auto' disables the integration for public repositories."
                          | optional,
                      }
                      | optional,
                    linear
                      | {
                        usage
                          | std.enum.TagOrString
                          | [| 'disabled, 'enabled, 'auto |]
                          | doc "Linear | Enable the Linear integration for opening issues, etc. 'auto' disables the integration for public repositories."
                          | optional,
                      }
                      | optional,
                  }
                  | optional,
              }
              | optional,
            code_generation
              | {
                docstrings
                  | {
                    language
                      | std.enum.TagOrString
                      | [|
                        'bg,
                        'bg-BG,
                        'fr-FR,
                        'de-LU,
                        'sv-SE,
                        'fa-IR,
                        'it-IT,
                        'es-ES,
                        'de-DE-x-simple-language-DE,
                        'nl-NL,
                        'no,
                        'nb,
                        'cs,
                        'cs-CZ,
                        'crh,
                        'crh-UA,
                        'zh,
                        'zh-CN,
                        'uk,
                        'uk-UA,
                        'tr,
                        'tl,
                        'tl-PH,
                        'ta,
                        'ta-IN,
                        'sv,
                        'sl,
                        'sl-SI,
                        'sk,
                        'sk-SK,
                        'ru,
                        'ru-RU,
                        'ro,
                        'ro-RO,
                        'pl,
                        'pl-PL,
                        'ko,
                        'ko-KR,
                        'km,
                        'km-KH,
                        'ja,
                        'ja-JP,
                        'it,
                        'gl,
                        'gl-ES,
                        'ga,
                        'ga-IE,
                        'fa,
                        'eo,
                        'el,
                        'el-GR,
                        'de-DE-x-simple-language,
                        'da,
                        'da-DK,
                        'ca-ES-balear,
                        'ca-ES-valencia,
                        'ca,
                        'ca-ES,
                        'br,
                        'br-FR,
                        'be,
                        'be-BY,
                        'ast,
                        'ast-ES,
                        'ar,
                        'pt-PT,
                        'pt-MZ,
                        'pt-BR,
                        'pt,
                        'pt-AO,
                        'nl-BE,
                        'nl,
                        'fr-BE,
                        'fr-CH,
                        'fr-CA,
                        'fr,
                        'es-AR,
                        'es,
                        'en-ZA,
                        'en-NZ,
                        'en-CA,
                        'en-GB,
                        'en-AU,
                        'en-US,
                        'en,
                        'de-CH,
                        'de-AT,
                        'de-DE,
                        'de
                      |]
                      | doc "Set the language for docstrings by using the corresponding ISO language code."
                      | optional,
                    path_instructions
                      | Array
                        {
                          instructions
                            | js2n.string.MaxLength 20000
                            | doc "Provides additional guidelines for docstring generation based on file paths.",
                          path
                            | String
                            | doc "File path glob pattern. Example: **/*.js",
                        }
                      | doc "Path Instructions | Provide additional guidelines for docstring generation based on file paths."
                      | optional,
                  }
                  | doc "Settings related to the generation of docstrings."
                  | optional,
                unit_tests
                  | {
                    path_instructions
                      | Array
                        {
                          instructions
                            | js2n.string.MaxLength 20000
                            | doc "Provides additional guidelines for unit test generation based on file paths.",
                          path
                            | String
                            | doc "File path glob pattern. Example: **/*.js",
                        }
                      | doc "Unit Test Generation | Provide additional guidelines for unit test generation based on file paths."
                      | optional,
                  }
                  | doc "Settings related to the generation of unit tests."
                  | optional,
              }
              | optional,
            early_access
              | Bool
              | doc "Enable early-access features."
              | optional,
            enable_free_tier
              | Bool
              | doc "Enable free tier features for users not on a paid plan."
              | optional,
            knowledge_base
              | {
                issues
                  | {
                    scope
                      | std.enum.TagOrString
                      | [| 'auto, 'global, 'local |]
                      | doc "Issues | Specify the scope of git platform (GitHub/GitLab) issues to use for the knowledge base. 'local' uses the repository's issues, 'global' uses the organization's issues, and 'auto' uses repository's issues for public repositories and organization's issues for private repositories."
                      | optional,
                  }
                  | optional,
                jira
                  | {
                    project_keys
                      | Array String
                      | doc "Jira Project Keys | Specify the Jira project keys to use for the knowledge base."
                      | optional,
                    usage
                      | std.enum.TagOrString
                      | [| 'disabled, 'enabled, 'auto |]
                      | doc "Jira | Enable the Jira knowledge base integration. 'auto' disables the integration for public repositories."
                      | optional,
                  }
                  | optional,
                learnings
                  | {
                    scope
                      | std.enum.TagOrString
                      | [| 'auto, 'global, 'local |]
                      | doc "Learnings | Specify the scope of learnings to use for the knowledge base. 'local' uses the repository's learnings, 'global' uses the organization's learnings, and 'auto' uses repository's learnings for public repositories and organization's learnings for private repositories."
                      | optional,
                  }
                  | optional,
                linear
                  | {
                    team_keys
                      | Array String
                      | doc "Linear Team Keys | Specify the Linear team keys (identifiers) to use for the knowledge base. E.g. 'ENG'"
                      | optional,
                    usage
                      | std.enum.TagOrString
                      | [| 'disabled, 'enabled, 'auto |]
                      | doc "Linear | Enable the Linear knowledge base integration. 'auto' disables the integration for public repositories."
                      | optional,
                  }
                  | optional,
                opt_out
                  | Bool
                  | doc "Opt Out | Disable all knowledge base features that require data retention. If you opt out after opting in, all of your existing knowledge base data will be removed from the system."
                  | optional,
                pull_requests
                  | {
                    scope
                      | std.enum.TagOrString
                      | [| 'auto, 'global, 'local |]
                      | doc "Pull Requests | Specify the scope of pull requests to use for the knowledge base. 'local' uses the repository's pull requests, 'global' uses the organization's pull requests, and 'auto' uses repository's pull requests for public repositories and organization's pull requests for private repositories."
                      | optional,
                  }
                  | optional,
                web_search
                  | {
                    enabled
                      | Bool
                      | doc "Web Search | Enable the web search integration."
                      | optional,
                  }
                  | optional,
              }
              | optional,
            language
              | std.enum.TagOrString
              | [|
                'bg,
                'bg-BG,
                'fr-FR,
                'de-LU,
                'sv-SE,
                'fa-IR,
                'it-IT,
                'es-ES,
                'de-DE-x-simple-language-DE,
                'nl-NL,
                'no,
                'nb,
                'cs,
                'cs-CZ,
                'crh,
                'crh-UA,
                'zh,
                'zh-CN,
                'uk,
                'uk-UA,
                'tr,
                'tl,
                'tl-PH,
                'ta,
                'ta-IN,
                'sv,
                'sl,
                'sl-SI,
                'sk,
                'sk-SK,
                'ru,
                'ru-RU,
                'ro,
                'ro-RO,
                'pl,
                'pl-PL,
                'ko,
                'ko-KR,
                'km,
                'km-KH,
                'ja,
                'ja-JP,
                'it,
                'gl,
                'gl-ES,
                'ga,
                'ga-IE,
                'fa,
                'eo,
                'el,
                'el-GR,
                'de-DE-x-simple-language,
                'da,
                'da-DK,
                'ca-ES-balear,
                'ca-ES-valencia,
                'ca,
                'ca-ES,
                'br,
                'br-FR,
                'be,
                'be-BY,
                'ast,
                'ast-ES,
                'ar,
                'pt-PT,
                'pt-MZ,
                'pt-BR,
                'pt,
                'pt-AO,
                'nl-BE,
                'nl,
                'fr-BE,
                'fr-CH,
                'fr-CA,
                'fr,
                'es-AR,
                'es,
                'en-ZA,
                'en-NZ,
                'en-CA,
                'en-GB,
                'en-AU,
                'en-US,
                'en,
                'de-CH,
                'de-AT,
                'de-DE,
                'de
              |]
              | doc "Set the language for reviews by using the corresponding ISO language code."
              | optional,
            reviews
              | {
                abort_on_close
                  | Bool
                  | doc "Abort the in-progress review if the pull request is closed or merged."
                  | optional,
                assess_linked_issues
                  | Bool
                  | doc "Generate an assessment of how well the changes address the linked issues in the walkthrough."
                  | optional,
                auto_apply_labels
                  | Bool
                  | doc "Automatically apply the suggested labels to the PR/MR."
                  | optional,
                auto_assign_reviewers
                  | Bool
                  | doc "Automatically assign suggested reviewers to the pull request"
                  | optional,
                auto_review
                  | {
                    auto_incremental_review
                      | Bool
                      | doc "Automatic Incremental Review | Automatic incremental code review on each push"
                      | optional,
                    base_branches
                      | Array String
                      | doc "Base branches (other than the default branch) to review. Accepts regex patterns."
                      | optional,
                    drafts | Bool | doc "Review draft PRs/MRs." | optional,
                    enabled
                      | Bool
                      | doc "Automatic Review | Automatic code review"
                      | optional,
                    ignore_title_keywords
                      | Array String
                      | doc "Ignore reviewing if the title of the pull request contains any of these keywords (case-insensitive)."
                      | optional,
                    labels
                      | Array String
                      | doc "Restrict automatic reviews to only those pull requests that match one of the specified labels."
                      | optional,
                  }
                  | optional,
                auto_title_instructions
                  | String
                  | doc "Auto Title Instructions | Custom instructions for auto-generating the PR/MR title."
                  | optional,
                auto_title_placeholder
                  | String
                  | doc "Add this keyword in the PR/MR title to auto-generate the title."
                  | optional,
                changed_files_summary
                  | Bool
                  | doc "Generate a summary of the changed files in the walkthrough."
                  | optional,
                collapse_walkthrough
                  | Bool
                  | doc "Generate walkthrough in a markdown collapsible section."
                  | optional,
                commit_status
                  | Bool
                  | doc "Set the commit status to 'pending' when the review is in progress and 'success' when it is complete."
                  | optional,
                disable_cache
                  | Bool
                  | doc "Disable caching of code and dependencies. This will force CodeRabbit to download the code and dependencies fresh from the repository each time."
                  | optional,
                fail_commit_status
                  | Bool
                  | doc "Set the commit status to 'failure' when the PR cannot be reviewed by CodeRabbit for any reason."
                  | optional,
                finishing_touches
                  | {
                    docstrings
                      | {
                        enabled
                          | Bool
                          | doc "Docstrings | Allow CodeRabbit to generate docstrings for PRs/MRs."
                          | optional,
                      }
                      | doc "Docstrings | Options for generating Docstrings for your PRs/MRs."
                      | optional,
                    unit_tests
                      | {
                        enabled
                          | Bool
                          | doc "Unit Tests | Allow CodeRabbit to generate unit tests for PRs/MRs."
                          | optional,
                      }
                      | doc "Unit Tests | Options for generating unit tests for your PRs/MRs."
                      | optional,
                  }
                  | optional,
                high_level_summary
                  | Bool
                  | doc "Generate a high level summary of the changes in the PR/MR description."
                  | optional,
                high_level_summary_in_walkthrough
                  | Bool
                  | doc "Include the high level summary in the walkthrough comment."
                  | optional,
                high_level_summary_placeholder
                  | String
                  | doc "Placeholder in the PR/MR description that gets replaced with the high level summary."
                  | optional,
                labeling_instructions
                  | Array
                    {
                      instructions
                        | js2n.string.MaxLength 3000
                        | doc "Instructions for the label. Example: Apply when the PR/MR contains changes to the react components.",
                      label
                        | String
                        | doc "Label to suggest for the PR/MR. Example: frontend",
                    }
                  | doc "Labeling Instructions | Provide guidelines for suggesting labels for the PR/MR. When specific labels or instructions are provided, only those labels are considered, though previous examples are still used to inform the suggestions. If no such labels are provided, suggestions are based solely on previous PR/MRs."
                  | optional,
                path_filters
                  | Array String
                  | doc "Specify file patterns to include or exclude in a review using glob patterns (e.g., !dist/**, src/**). These patterns also apply to 'git sparse-checkout', including specified patterns and ignoring excluded ones (starting with '!') when cloning the repository."
                  | optional,
                path_instructions
                  | Array
                    {
                      instructions
                        | js2n.string.MaxLength 20000
                        | doc "Provides specific additional guidelines for code review based on file paths.",
                      path
                        | String
                        | doc "File path glob pattern. Example: **/*.js",
                    }
                  | doc "Path Instructions | Provide specific additional guidelines for code review based on file paths."
                  | optional,
                poem
                  | Bool
                  | doc "Generate a poem in the walkthrough comment."
                  | optional,
                profile
                  | std.enum.TagOrString
                  | [| 'assertive, 'chill |]
                  | doc "Set the profile for reviews. Assertive profile yields more feedback, that may be considered nitpicky."
                  | optional,
                related_issues
                  | Bool
                  | doc "Include possibly related issues in the walkthrough."
                  | optional,
                related_prs
                  | Bool
                  | doc "Related PRs | Include possibly related pull requests in the walkthrough."
                  | optional,
                request_changes_workflow
                  | Bool
                  | doc "Approve the review once CodeRabbit's comments are resolved. Note: In GitLab, all discussions must be resolved."
                  | optional,
                review_status
                  | Bool
                  | doc "Post review details on each review. Additionally, post a review status when a review is skipped in certain cases."
                  | optional,
                sequence_diagrams
                  | Bool
                  | doc "Generate sequence diagrams in the walkthrough."
                  | optional,
                suggested_labels
                  | Bool
                  | doc "Suggest labels based on the changes in the pull request in the walkthrough."
                  | optional,
                suggested_reviewers
                  | Bool
                  | doc "Suggest reviewers based on the changes in the pull request in the walkthrough."
                  | optional,
                tools
                  | {
                    actionlint
                      | {
                        enabled
                          | Bool
                          | doc "Enable actionlint | is a static checker for GitHub Actions workflow files. | v1.7.7"
                          | optional,
                      }
                      | doc "actionlint is a static checker for GitHub Actions workflow files."
                      | optional,
                    ast-grep
                      | {
                        essential_rules
                          | Bool
                          | doc "Use ast-grep essentials package."
                          | optional,
                        packages
                          | Array String
                          | doc "Predefined packages to be used."
                          | optional,
                        rule_dirs
                          | Array String
                          | doc "List of rules directories."
                          | optional,
                        util_dirs
                          | Array String
                          | doc "List of utils directories."
                          | optional,
                      }
                      | doc "Enable ast-grep | ast-grep is a code analysis tool that helps you to find patterns in your codebase using abstract syntax trees patterns. | v0.38.1"
                      | optional,
                    biome
                      | {
                        enabled
                          | Bool
                          | doc "Enable Biome | Biome is a fast formatter, linter, and analyzer for web projects. | Enable Biome integration. | v1.9.4"
                          | optional,
                      }
                      | doc "Biome is a fast formatter, linter, and analyzer for web projects."
                      | optional,
                    brakeman
                      | {
                        enabled
                          | Bool
                          | doc "Enable Brakeman | Brakeman is a static analysis security vulnerability scanner for Ruby on Rails applications. | v7.0.2"
                          | optional,
                      }
                      | doc "Brakeman is a static analysis security vulnerability scanner for Ruby on Rails applications. | v7.0.2"
                      | optional,
                    buf
                      | {
                        enabled
                          | Bool
                          | doc "Enable Buf | Buf offers linting for Protobuf files. | v1.54.0"
                          | optional,
                      }
                      | doc "Buf offers linting for Protobuf files."
                      | optional,
                    checkov
                      | {
                        enabled
                          | Bool
                          | doc "Enable Checkov | Checkov is a static code analysis tool for infrastructure-as-code files. | v3.2.334"
                          | optional,
                      }
                      | doc "Checkov is a static code analysis tool for infrastructure-as-code files."
                      | optional,
                    circleci
                      | {
                        enabled
                          | Bool
                          | doc "Enable CircleCI | CircleCI tool is a static checker for CircleCI config files. | v0.1.31687"
                          | optional,
                      }
                      | doc "CircleCI tool is a static checker for CircleCI config files."
                      | optional,
                    clippy
                      | {
                        enabled
                          | Bool
                          | doc "Enable Clippy | Clippy is a collection of lints to catch common mistakes and improve your Rust code. | Enable Clippy integration."
                          | optional,
                      }
                      | doc "Clippy is a collection of lints to catch common mistakes and improve your Rust code."
                      | optional,
                    cppcheck
                      | {
                        enabled
                          | Bool
                          | doc "Enable Cppcheck | Cppcheck is a static code analysis tool for the C and C++ programming languages. | v2.17.1"
                          | optional,
                      }
                      | doc "Cppcheck is a static code analysis tool for the C and C++ programming languages."
                      | optional,
                    detekt
                      | {
                        config_file
                          | String
                          | doc "Optional path to the detekt configuration file relative to the repository."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable detekt | detekt is a static code analysis tool for Kotlin files. | v1.23.8"
                          | optional,
                      }
                      | doc "Detekt is a static code analysis tool for Kotlin files."
                      | optional,
                    dotenvLint
                      | {
                        enabled
                          | Bool
                          | doc "Enable dotenv-linter | dotenv-linter is a tool for checking and fixing .env files for problems and best practices | v3.3.0"
                          | optional,
                      }
                      | doc "dotenv-linter is a tool for checking and fixing .env files for problems and best practices"
                      | optional,
                    eslint
                      | {
                        enabled
                          | Bool
                          | doc "Enable ESLint | ESLint is a static code analysis tool for JavaScript files."
                          | optional,
                      }
                      | doc "ESLint is a static code analysis tool for JavaScript files."
                      | optional,
                    github-checks
                      | {
                        enabled
                          | Bool
                          | doc m%"
                            Enable GitHub Checks
                            			| Enable integration, defaults to true
                            			| Enable GitHub Checks integration.
                          "%
                          | optional,
                        timeout_ms
                          | js2n.number.Maximum 900000
                          | js2n.number.Minimum 0
                          | doc "Time in milliseconds to wait for all GitHub Checks to conclude."
                          | optional,
                      }
                      | doc "GitHub Checks integration configuration."
                      | optional,
                    gitleaks
                      | {
                        enabled
                          | Bool
                          | doc "Enable Gitleaks | Gitleaks is a secret scanner. | Enable Gitleaks integration. | v8.26.0"
                          | optional,
                      }
                      | doc "Gitleaks is a secret scanner."
                      | optional,
                    golangci-lint
                      | {
                        config_file
                          | String
                          | doc "Optional path to the golangci-lint configuration file relative to the repository. Useful when the configuration file is named differently than the default '.golangci.yml', '.golangci.yaml', '.golangci.toml', '.golangci.json'."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable golangci-lint | golangci-lint is a fast linters runner for Go. | Enable golangci-lint integration. | v1.64.8"
                          | optional,
                      }
                      | doc "golangci-lint is a fast linters runner for Go."
                      | optional,
                    hadolint
                      | {
                        enabled
                          | Bool
                          | doc "Enable Hadolint | Hadolint is a Dockerfile linter. | Enable Hadolint integration. | v2.12.0"
                          | optional,
                      }
                      | doc "Hadolint is a Dockerfile linter."
                      | optional,
                    languagetool
                      | {
                        disabled_categories
                          | Array String
                          | doc "IDs of categories to be disabled. Note: TYPOS, TYPOGRAPHY, and CASING are always disabled."
                          | optional,
                        disabled_rules
                          | Array String
                          | doc "IDs of rules to be disabled. Note: EN_UNPAIRED_BRACKETS, and EN_UNPAIRED_QUOTES are always disabled."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable LanguageTool | Enable LanguageTool integration."
                          | optional,
                        enabled_categories
                          | Array String
                          | doc "IDs of categories to be enabled."
                          | optional,
                        enabled_only
                          | Bool
                          | doc "Only the rules and categories whose IDs are specified with 'enabledRules' or 'enabledCategories' are enabled."
                          | optional,
                        enabled_rules
                          | Array String
                          | doc "IDs of rules to be enabled. The rule won't run unless 'level' is set to a level that activates the rule."
                          | optional,
                        level
                          | std.enum.TagOrString
                          | [| 'picky, '"default" |]
                          | doc "If set to 'picky', additional rules will be activated, i.e. rules that you might only find useful when checking formal text."
                          | optional,
                      }
                      | doc "LanguageTool is a style and grammar checker for 30+ languages."
                      | optional,
                    luacheck
                      | {
                        enabled
                          | Bool
                          | doc "Enable Lua code linting | Luacheck helps maintain consistent and error-free Lua code | v1.2.0"
                          | optional,
                      }
                      | doc "Configuration for Lua code linting to ensure code quality"
                      | optional,
                    markdownlint
                      | {
                        enabled
                          | Bool
                          | doc "Enable markdownlint | markdownlint-cli2 is a static analysis tool to enforce standards and consistency for Markdown files. | Enable markdownlint integration. | v0.17.2"
                          | optional,
                      }
                      | doc "markdownlint-cli2 is a static analysis tool to enforce standards and consistency for Markdown files."
                      | optional,
                    oxc
                      | {
                        enabled
                          | Bool
                          | doc "Enable OXC | OXC is a JavaScript/TypeScript linter written in Rust. | v0.16.10"
                          | optional,
                      }
                      | doc "OXC is a JavaScript/TypeScript linter written in Rust."
                      | optional,
                    phpstan
                      | {
                        enabled
                          | Bool
                          | doc "Enable PHPStan | PHPStan requires [config file](https://phpstan.org/config-reference#config-file) in your repository root. Please ensure that this file contains the `paths:` parameter. | v2.1.15"
                          | optional,
                        level
                          | std.enum.TagOrString
                          | [|
                            'max,
                            '"9",
                            '"8",
                            '"7",
                            '"6",
                            '"5",
                            '"4",
                            '"3",
                            '"2",
                            '"1",
                            '"0",
                            '"default"
                          |]
                          | doc "Level | Specify the [rule level](https://phpstan.org/user-guide/rule-levels) to run. This setting is ignored if your configuration file already has a `level:` parameter."
                          | optional,
                      }
                      | doc "PHPStan is a tool to analyze PHP code."
                      | optional,
                    pmd
                      | {
                        config_file
                          | String
                          | doc "Optional path to the PMD configuration file relative to the repository."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable PMD | PMD is an extensible multilanguage static code analyzer. It’s mainly concerned with Java. | v7.13.0"
                          | optional,
                      }
                      | doc "PMD is an extensible multilanguage static code analyzer. It’s mainly concerned with Java."
                      | optional,
                    prismaLint
                      | {
                        enabled
                          | Bool
                          | doc "Enable Prisma Schema linting | Prisma Schema linting helps maintain consistent and error-free schema files | v0.10.1"
                          | optional,
                      }
                      | doc "Configuration for Prisma Schema linting to ensure schema file quality"
                      | optional,
                    pylint
                      | {
                        enabled
                          | Bool
                          | doc "Enable Pylint | Pylint is a Python static code analysis tool. | v3.3.7"
                          | optional,
                      }
                      | doc "Pylint is a Python static code analysis tool."
                      | optional,
                    regal
                      | {
                        enabled
                          | Bool
                          | doc "Enable Regal | Regal is a linter and language server for Rego. | v0.33.1"
                          | optional,
                      }
                      | doc "Regal is a linter and language server for Rego."
                      | optional,
                    rubocop
                      | {
                        enabled
                          | Bool
                          | doc "Enable RuboCop | RuboCop is a Ruby static code analyzer (a.k.a. linter ) and code formatter. | v1.75.5"
                          | optional,
                      }
                      | doc "RuboCop is a Ruby static code analyzer (a.k.a. linter ) and code formatter."
                      | optional,
                    ruff
                      | {
                        enabled
                          | Bool
                          | doc "Enable Ruff | Ruff is a Python linter and code formatter. |  Enable Ruff integration. | v0.11.9"
                          | optional,
                      }
                      | doc "Ruff is a Python linter and code formatter."
                      | optional,
                    semgrep
                      | {
                        config_file
                          | String
                          | doc "Optional path to the Semgrep configuration file relative to the repository."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable Semgrep | Semgrep is a static analysis tool designed to scan code for security vulnerabilities and code quality issues. | Enable Semgrep integration. | v1.122.0"
                          | optional,
                      }
                      | doc "Semgrep is a static analysis tool designed to scan code for security vulnerabilities and code quality issues."
                      | optional,
                    shellcheck
                      | {
                        enabled
                          | Bool
                          | doc "Enable ShellCheck | ShellCheck is a static analysis tool that finds bugs in your shell. | Enable ShellCheck integration. | v0.10.0"
                          | optional,
                      }
                      | doc "ShellCheck is a static analysis tool that finds bugs in your shell scripts."
                      | optional,
                    shopifyThemeCheck
                      | {
                        enabled
                          | Bool
                          | doc "Enable Shopify Theme Check | A linter for Shopify themes that helps you follow Shopify theme & Liquid best practices | cli 3.77.1 | theme 3.58.2"
                          | optional,
                      }
                      | doc "Configuration for Shopify Theme Check to ensure theme quality and best practices"
                      | optional,
                    sqlfluff
                      | {
                        enabled
                          | Bool
                          | doc "Enable SQLFluff | SQLFluff is an open source, dialect-flexible and configurable SQL linter. | v3.4.0"
                          | optional,
                      }
                      | doc "SQLFluff is an open source, dialect-flexible and configurable SQL linter."
                      | optional,
                    swiftlint
                      | {
                        config_file
                          | String
                          | doc "Optional path to the SwiftLint configuration file relative to the repository. This is useful when the configuration file is named differently than the default '.swiftlint.yml' or '.swiftlint.yaml'."
                          | optional,
                        enabled
                          | Bool
                          | doc "Enable SwiftLint | SwiftLint is a Swift linter. | Enable SwiftLint integration. | v0.57.0"
                          | optional,
                      }
                      | doc "SwiftLint integration configuration object."
                      | optional,
                    yamllint
                      | {
                        enabled
                          | Bool
                          | doc "Enable YAMLlint | YAMLlint is a linter for YAML files. | Enable YAMLlint integration. | v1.37.1"
                          | optional,
                      }
                      | doc "YAMLlint is a linter for YAML files."
                      | optional,
                  }
                  | doc "Tools that provide additional context to code reviews."
                  | optional,
              }
              | doc "Settings related to reviews."
              | optional,
            tone_instructions
              | js2n.string.MaxLength 250
              | doc "Set the tone of reviews and chat. Example: 'You must use talk like Mr. T. I pity the fool who doesn't!'"
              | optional,
            ..
          },
    }
    in
  refs."definitions.schema"