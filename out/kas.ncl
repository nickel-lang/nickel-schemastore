# DO NOT EDIT
# This file was automatically generated using json-schema-to-nickel
let js2n
  = import "../lib/main.ncl"
  in
let rec refs
    = {}
    in
  {
      _source_dir
        | String
        | doc "Path to the top repo at time of invoking the plugin (auto-generated by the menu plugin). It must not be set manually and might only be defined in the top-level ``.config.yaml`` file."
        | optional,
      _source_dir_host
        | String
        | doc "Source directory of the config file on the host (auto-generated by kas menu plugin, when using kas-container)."
        | optional,
      artifacts
        | { _ | String }
        | doc "Artifacts which are expected to be present after executing the build (id / path pairs)."
        | optional,
      bblayers_conf_header
        | { _ | String }
        | doc "Header to prepend to the ``bblayers.conf`` before any layers are included."
        | optional,
      build_system
        | std.enum.TagOrString
        | [| 'isar, 'oe, 'openembedded |]
        | doc "Defines the bitbake-based build system."
        | optional,
      defaults
        | {
          repos
            | {
              branch
                | String
                | doc "Default ``branch`` property applied to all repositories that do not override this."
                | optional,
              patches
                | { repo | String | optional, }
                | doc "Default patches to apply to all repositories."
                | optional,
              refspec
                | String
                | doc "Deprecated: Use 'branch' / 'tag' instead."
                | optional,
              tag
                | String
                | doc "Default ``tag`` property applied to all repositories that do not override this."
                | optional,
            }
            | doc "Default values for some repository properties."
            | optional,
        }
        | doc "Default values applied to all configuration nodes."
        | optional,
      distro
        | String
        | doc "Value of the ``DISTRO`` variable that is written into the ``local.conf``. Can be overwritten by the ``KAS_DISTRO`` environment variable."
        | optional,
      env
        | { _ | js2n.Nullable String }
        | doc "Environment variables to forward and their default values (set to nulltype to only forward if set). These variables are made available to bitbake via ``BB_ENV_PASSTHROUGH_ADDITIONS`` (``BB_ENV_EXTRAWHITE`` in older Bitbake versions) and can be overwritten by the variables of the environment in which kas is started."
        | optional,
      header
        | {
          includes
            | Array (
              std.contract.any_of
                [
                  String,
                  {
                    file
                      | String
                      | doc "Path to the configuration file relative to the repository.",
                    repo
                      | String
                      | doc "Repository ``key`` the configuration file is located in.",
                  }
                ]
            )
            | doc "List of configuration files to include (parsed depth-first). They are merged in order they are stated. So a latter one could overwrite settings from previous files. The current file can overwrite settings from every included file."
            | optional,
          version
            | std.contract.any_of
              [
                std.contract.Sequence [ std.enum.TagOrString, [| '"0.10" |] ],
                std.contract.Sequence
                  [
                    std.number.Integer,
                    js2n.number.Maximum 19,
                    js2n.number.Minimum 1
                  ]
              ]
            | doc "Version of the configuration file format.",
        }
        | doc "Header of every kas configuration file. It contains information about the context of the file.",
      local_conf_header
        | { _ | String }
        | doc "Header to prepend to the ``local.conf``."
        | optional,
      machine
        | String
        | doc "Value of the ``MACHINE`` variable that is written into the ``local.conf``. Can be overwritten by the ``KAS_MACHINE`` environment variable."
        | optional,
      menu_configuration
        | { _ | std.contract.any_of [ Bool, String, std.number.Integer ] }
        | doc "Menu configuration, auto-generated by menu plugin."
        | optional,
      overrides
        | { repos | { _ | { commit | String | optional, } } | optional, }
        | doc "Overrides for specific configuration nodes. By that, only items that already exist are overridden. Note, that all entries below this key are reserved for auto-generation using kas plugins. Do not manually add entries."
        | optional,
      proxy_config
        | {
          ftp_proxy | String | optional,
          http_proxy | String | optional,
          https_proxy | String | optional,
          no_proxy | String | optional,
        }
        | doc "Deprecated. Proxy variables are automatically forwarded."
        | optional,
      repos
        | {
          _ | js2n.Nullable
            {
              allowed_signers
                | Array String
                | doc "List of signer-ids to verify the signature against. Must be non-empty if 'signed=true'. Git only."
                | optional,
              branch
                | js2n.Nullable String
                | doc "Upstream branch that should be tracked. If ``commit`` was specified, kas checks that the branch contains the commit. If no ``commit`` was specified, the head of the upstream branch is checked out. The nothing (``null``) value is used to remove a possible default value."
                | optional,
              commit
                | String
                | doc "Full-length commit ID (all-lowercase, no branch names, no symbolic refs, no tags) that should be used. If ``url`` was specified but no ``commit``, ``branch`` or ``tag``, the revision you get depends on the defaults of the version control system used."
                | optional,
              layers
                | {
                  _ | std.contract.any_of
                    [ js2n.Null, std.number.Integer, Bool, String ]
                }
                | doc "List of layers to append to the ``bblayers.conf``. If this is missing or ``None`` or an empty dictionary, the path to the repo itself is added as a layer. Additionally, ``.`` is a valid value if the repo itself should be added as a layer."
                | optional,
              name
                | String
                | doc "Defines under which name the repository is stored. If its missing the ``<repo-id>`` will be used."
                | optional,
              patches
                | {
                  _ | js2n.Nullable { path | String, repo | String | optional, }
                }
                | doc "Patches to apply to the repository."
                | optional,
              path
                | js2n.Nullable String
                | doc "Path where the repository is stored."
                | optional,
              refspec
                | String
                | doc "Deprecated. Use 'commit' / 'branch' / 'tag' instead."
                | optional,
              signed
                | Bool
                | doc "Whether the commit / tag must be signed. If enabled, 'allowed_signers' must be defined. If both tag and commit are specified, only the signature of the tag is checked. Git only."
                | optional,
              tag
                | js2n.Nullable String
                | doc "Tag that should be checked out. If a ``commit`` was specified, kas checks that the tag points to this commit. This must not be combined with ``branch``. The nothing (``null``) value is used to remove a possible default value."
                | optional,
              type
                | std.enum.TagOrString
                | [| 'hg, 'git |]
                | doc "Type of version control repository."
                | optional,
              url
                | js2n.Nullable String
                | doc "Url of the repository. If this is missing, no version control operations are performed."
                | optional,
            }
        }
        | doc "Definitions of all available repos and layers. The layers are appended to the ``bblayers.conf`` sorted by the repository name first and then by the layer name."
        | optional,
      signers
        | {
          _ | {
            fingerprint
              | std.contract.any_of
                [
                  std.contract.Sequence
                    [ js2n.string.MaxLength 40, js2n.string.MinLength 40 ],
                  std.contract.Sequence
                    [ js2n.string.MaxLength 50, js2n.string.MinLength 50 ]
                ]
              | doc "Fingerprint of the key or certificate (gpg: long-form, 40 hex digits, ssh: SHA256:...). If not provided, it is read from the file."
              | optional,
            gpg_keyserver
              | String
              | doc "GnuPG keyserver to use for key retrieval (if no local path is provided). The 'fingerprint' must be provided. GPG only."
              | optional,
            path
              | String
              | doc "Path to the public key or certificate file, relative to the repo. Must be used together with 'repo'."
              | optional,
            repo
              | std.contract.any_of
                [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
              | doc "Repo <repo-id> which provides the public key or certificate file."
              | optional,
            type
              | std.enum.TagOrString
              | [| 'ssh, 'gpg |]
              | doc "Type of the cryptographic material."
              | optional,
          }
        }
        | doc "Specification of the repository signature verification."
        | optional,
      target
        | std.contract.any_of [ String, Array String ]
        | doc "Single target or a list of targets to build by bitbake. Can be overwritten by the ``KAS_TARGET`` environment variable.  Space is used as a delimiter if multiple targets should be specified via the environment variable. For targets prefixed with ``multiconfig:`` or ``mc:``, corresponding entries are added to the ``BBMULTICONFIG`` in ``local.conf``."
        | optional,
      task
        | String
        | doc "Task to build by bitbake. Can be overwritten by the ``KAS_TASK`` environment variable."
        | optional,
    }