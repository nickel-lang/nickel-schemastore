# DO NOT EDIT
# This file was automatically generated using json-schema-to-nickel
let js2n
  = import "../lib/main.ncl"
  in
let rec refs
    = {
      "definitions.diff" =
        {
            comparePatches
              | Array
                {
                  apiVersion
                    | String
                    | doc "The apiVersion of the resource to compare"
                    | optional,
                  jsonPointers
                    | Array String
                    | doc "An array of custom JSONPointers. See ref: https://jsonpatch.com/#json-pointer"
                    | optional,
                  kind
                    | String
                    | doc "The kind of the resource to compare"
                    | optional,
                  name
                    | String
                    | doc "The name of the resource to compare"
                    | optional,
                  namespace
                    | String
                    | doc "The namespace of the resource to compare"
                    | optional,
                  operations
                    | Array
                      {
                        op
                          | String
                          | doc "The operation to perform. See ref: https://jsonpatch.com/#operations"
                          | optional,
                        path
                          | String
                          | doc "The path to the field to compare. See ref: https://jsonpatch.com/#json-pointer"
                          | optional,
                        value
                          | String
                          | doc "The value to add or replace"
                          | optional,
                        ..
                      }
                    | doc "An array of operations to consider when comparing the current state of the resource to the desired one. See example: https://fleet.rancher.io/next/bundle-diffs#combining-it-all-together"
                    | optional,
                  ..
                }
              | doc "An array of compare patches; how the diff should be calculated and eventually ignored. See ref: https://fleet.rancher.io/next/ref-crds#comparepatch"
              | optional,
            ..
          },
      "definitions.helm" =
        js2n.Nullable
            {
              atomic
                | Bool
                | doc "Set the Helm --atomic flag when upgrading. Default: false"
                | optional,
              chart
                | String
                | doc "Use a custom location for the Helm chart. This can refer to any go-getter URL, OCI registry based helm chart URL e.g. \"oci://ghcr.io/fleetrepoci/guestbook\" or a local/remote tgz file. This allows one to download charts from most any location.  Also know that go-getter URL supports adding a digest to validate the download. If repo is set below this field is the name of the chart to lookup"
                | optional,
              disablePreProcess
                | Bool
                | doc "Disable go template pre-processing on the fleet values. Default: false"
                | optional,
              "force"
                | Bool
                | doc "Set the Helm --force flag when upgrading. This could be dangerous (sic). Default: false"
                | optional,
              maxHistory
                | std.number.Integer
                | doc "Set the Helm --max-history flag when upgrading"
                | optional,
              releaseName
                | js2n.string.MaxLength 53
                | js2n.string.Matches
                  "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                | doc "A custom release name to deploy the chart as. If not specified a release name will be generated by combining the invoking GitRepo.name + GitRepo.path"
                | optional,
              repo
                | String
                | doc "A https URL to a Helm repo to download the chart from. If repo is used the value of `chart` will be used as the chart name to lookup in the Helm repository"
                | optional,
              takeOwnership
                | Bool
                | doc "Makes helm skip the check for its own annotations. Default: false"
                | optional,
              timeoutSeconds
                | std.number.Integer
                | doc "Set the Helm --timeout flag when upgrading."
                | optional,
              values
                | { _ | Dyn }
                | doc "Any values that should be placed in the `values.yaml` and passed to helm during install. Cluster labels can also be used here, see https://fleet.rancher.io/next/gitrepo-structure#reference for more info"
                | optional,
              valuesFiles
                | Array String
                | doc "Path to any values files that need to be passed to helm during install"
                | optional,
              valuesFrom
                | Array
                  {
                    configMapKeyRef
                      | {
                        key
                          | String
                          | doc "The key to get from the configmap"
                          | optional,
                        name
                          | String
                          | doc "The name of the configmap"
                          | optional,
                        namespace
                          | String
                          | doc "The namespace of the configmap"
                          | optional,
                        ..
                      }
                      | doc "A reference to a configmap key"
                      | optional,
                    secretKeyRef
                      | {
                        key
                          | String
                          | doc "The key to get from the secret"
                          | optional,
                        name | String | doc "The name of the secret" | optional,
                        namespace
                          | String
                          | doc "The namespace of the secret"
                          | optional,
                        ..
                      }
                      | doc "A reference to a secret key"
                      | optional,
                    ..
                  }
                | doc "An array of of configmap or secrets references defined in the downstream clusters to get values for the chart."
                | optional,
              version
                | String
                | doc "The version of the chart or semver constraint of the chart to find. If a constraint is specified it is evaluated each time git changes. The version also determines which chart to download from OCI registries"
                | optional,
              waitForJobs
                | Bool
                | doc "Wait for all jobs to complete before marking the GitRepo as ready. A timeoutSeconds duration must be set when using. Default: true"
                | optional,
              ..
            },
      "definitions.kustomize" =
        js2n.Nullable
            {
              dir
                | String
                | doc "Custom folder for kustomize resources. This folder must contain a kustomization.yaml file. Path is relative to repository root"
                | optional,
              ..
            },
      "definitions.selector" =
        js2n.Nullable
            {
              matchExpressions
                | Array
                  {
                    key
                      | String
                      | doc "key is the label key that the selector applies to"
                      | optional,
                    operator
                      | String
                      | doc "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist"
                      | optional,
                    values
                      | Array String
                      | doc "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty"
                      | optional,
                    ..
                  }
                | doc "matchExpressions is An array of label selector requirements. The requirements are ANDed"
                | optional,
              matchLabels
                | { _ | String }
                | doc "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed"
                | optional,
              ..
            },
    }
    in
  {
      defaultNamespace
        | js2n.Nullable String
        | doc "The default namespace to be applied to resources. This field is not used to enforce or lock down the deployment to a specific namespace, but instead provide the default value of the namespace field if one is not specified in the manifests. Default: default"
        | optional,
      dependsOn
        | js2n.Nullable
          (Array
            {
              name
                | String
                | doc "Format: <GITREPO-NAME>-<BUNDLE_PATH> with all path separators replaced by \"-\". Example: A Gitrepo named \"one\", with a Bundle path \"/multi-cluster/hello-world\" => \"one-multi-cluster-hello-world\""
                | optional,
              selector | refs."definitions.selector" | optional,
              ..
            })
        | doc "An array of dependencies to other Bundles."
        | optional,
      diff | refs."definitions.diff" | optional,
      helm
        | refs."definitions.helm"
        | doc "Helm overrides for the bundle. When changes are applied to the values.yaml from multiple sources at the same time, the values will update in the following order: helm.values -> helm.valuesFiles -> helm.valuesFrom"
        | optional,
      ignore
        | {
          conditions | Array Dyn | doc "Conditions to be ignored" | optional,
          ..
        }
        | doc "Ignore options when monitoring a Bundle. This can be used when Fleet thinks some conditions in Custom Resources makes the Bundle to be in an error state when it shouldn't."
        | optional,
      imageScans
        | js2n.Nullable
          (Array
            {
              image | String | doc "The image to scan for" | optional,
              interval | String | doc "The scan interval" | optional,
              policy
                | {
                  alphabetical
                    | {
                      order
                        | String
                        | doc "The order of the images to use. Can be ascending or descending"
                        | optional,
                      ..
                    }
                    | doc "The alphabetical policy specifics"
                    | optional,
                  semver
                    | {
                      range
                        | String
                        | doc "Semver string to evaluate latest image. For more details on how to use semver, see https://github.com/Masterminds/semver"
                        | optional,
                      ..
                    }
                    | doc "The semver policy specifics"
                    | optional,
                  ..
                }
                | doc "An array of policies on how to retrieve the latest image. Can be semver or alphabetical"
                | optional,
              secretRef
                | {
                  name
                    | String
                    | doc "The name of the secret. It must be located in the same namespace as the GitRepo"
                    | optional,
                  ..
                }
                | doc "The secret reference to use for the image repository"
                | optional,
              tagName
                | String
                | doc "The tag name used in the manifest files, to be replaced with the latest image. Must be unique per Bundle"
                | optional,
              ..
            })
        | doc "ImageScans is An array of images repositories to scan for, so the corresponding repositories may be automatically updated with the specified image"
        | optional,
      kustomize
        | refs."definitions.kustomize"
        | doc "Kustomize options for the bundle."
        | optional,
      labels
        | js2n.Nullable ({ _ | Dyn })
        | doc "Labels to apply to the bundle. These labels can be used to select bundles by using the dependsOn keyword"
        | optional,
      namespace
        | js2n.Nullable String
        | doc "All resources will be assigned to this namespace and if any cluster scoped resource exists the deployment will fail. Default: \"\""
        | optional,
      namespaceAnnotations
        | { _ | Dyn }
        | doc "Annotations to apply to the namespace created by Fleet"
        | optional,
      namespaceLabels
        | { _ | Dyn }
        | doc "Labels to apply to the namespace created by Fleet"
        | optional,
      overrideTargets
        | Array refs."definitions.selector"
        | doc "Override targets defined in the GitRepo. The Bundle will not have any targets from the GitRepo if overrideTargets is provided."
        | optional,
      paused
        | js2n.Nullable Bool
        | doc " A paused bundle will not update downstream clusters but instead mark the bundle as OutOfSync. One can then manually confirm that a bundle should be deployed to the downstream clusters. Default: false"
        | optional,
      rolloutStrategy
        | js2n.Nullable
          {
            autoPartitionSize
              | String
              | doc "A number of percentage of how to automatically partition clusters if not specific partitioning strategy is configured. Default: 25%"
              | optional,
            maxUnavailable
              | String
              | doc "A number or percentage of clusters that can be unavailable during an update of a bundle. This follows the same basic approach as a deployment rollout strategy. Once the number of clusters meets unavailable state update will be  paused. Default value is 100% which doesn't take effect on update. Default: 100%"
              | optional,
            maxUnavailablePartitions
              | String
              | doc "A number or percentage of cluster partitions that can be unavailable during an update of a bundle. Default: 0"
              | optional,
            partitions
              | Array
                {
                  clusterGroup
                    | String
                    | doc "A cluster group name to include in this partition"
                    | optional,
                  clusterGroupSelector
                    | refs."definitions.selector"
                    | doc "Selector matching cluster group labels to include in this partition"
                    | optional,
                  clusterName
                    | String
                    | doc "A cluster name to include in this partition"
                    | optional,
                  clusterSelector
                    | refs."definitions.selector"
                    | doc "Selector matching cluster labels to include in this partition"
                    | optional,
                  maxUnavailable
                    | String
                    | doc "A number or percentage of clusters that can be unavailable in this partition before this partition is treated as done.Default: 10%"
                    | optional,
                  name
                    | String
                    | doc "A user friend name given to the partition used for Display (optional). Default: \"\""
                    | optional,
                  ..
                }
              | doc "An array of definitions of partitions. If any target clusters do not match the configuration they are added to partitions at the end following the autoPartitionSize"
              | optional,
            ..
          }
        | optional,
      serviceAccount
        | js2n.Nullable String
        | doc "The Service account which will be used for the BundleDeployments. Default: \"\""
        | optional,
      targetCustomizations
        | js2n.Nullable
          (Array
            {
              clusterGroup
                | String
                | doc "A cluster group name to select"
                | optional,
              clusterGroupSelector
                | refs."definitions.selector"
                | doc "Selector matching cluster group labels to select"
                | optional,
              clusterSelector
                | refs."definitions.selector"
                | doc "Selector matching cluster labels to select"
                | optional,
              defaultNamespace
                | String
                | doc "Custom defaultNamespace value overriding the value at the root"
                | optional,
              diff | refs."definitions.diff" | optional,
              doNotDeploy
                | Bool
                | doc "Resources will not be deployed in the matched clusters if doNotDeploy is true. Default: false"
                | optional,
              helm
                | refs."definitions.helm"
                | doc "Custom helm options overriding the options at the root"
                | optional,
              kustomize
                | refs."definitions.kustomize"
                | doc "Custom kustomize options overriding the options at the root"
                | optional,
              name
                | String
                | doc "The name of target. If not specified a default name of the format \"target000\" will be used. This value is mostly for display"
                | optional,
              namespace
                | String
                | doc "Custom namespace value overriding the value at the root"
                | optional,
              serviceAccount
                | String
                | doc "Custom serviceAccount value overriding the value at the root"
                | optional,
              yaml
                | {
                  overlays
                    | Array String
                    | doc "An array of overlays to apply to the resource. The overlays are applied in the order they are listed"
                    | optional,
                  ..
                }
                | doc "If using raw YAML these are names that map to overlays/{name} that will be used to replace or patch a resource. If you wish to customize the file ./subdir/resource.yaml then a file ./overlays/myoverlay/subdir/resource.yaml will replace the base file. A file named ./overlays/myoverlay/subdir/resource_patch.yaml will patch the base file. A patch can in JSON Patch or JSON Merge format or a strategic merge patch for builtin Kubernetes types. Refer to \"Raw YAML Resource Customization\" (https://fleet.rancher.io/next/gitrepo-structure#raw-yaml-resource-customization) for more information"
                | optional,
              ..
            })
        | doc "Target customization are used to determine how resources should be modified per target. Targets are evaluated in order and the first one to match a cluster is used for that cluster"
        | optional,
    }