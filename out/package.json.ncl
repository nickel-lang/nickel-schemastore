# DO NOT EDIT
# This file was automatically generated using json-schema-to-nickel
let js2n
  = import "../lib/main.ncl"
  in
let rec refs
    = {
      "definitions.dependency" = { _ | String },
      "definitions.devDependency" = { _ | String },
      "definitions.devEngineDependency" =
        {
            name
              | String
              | doc "The name of the dependency, with allowed values depending on the parent field",
            onFail
              | std.enum.TagOrString
              | [| 'download, 'error, 'warn, 'ignore |]
              | doc "What action to take if validation fails"
              | optional,
            version
              | String
              | doc "The version range for the dependency"
              | optional,
            ..
          },
      "definitions.fundingUrl" = String,
      "definitions.fundingWay" =
        {
            type
              | String
              | doc "The type of funding or the platform through which funding can be provided, e.g. patreon, opencollective, tidelift or github."
              | optional,
            url | refs."definitions.fundingUrl" | String,
          },
      "definitions.license" =
        std.contract.any_of
            [
              String,
              std.contract.Sequence
                [
                  std.enum.TagOrString,
                  [|
                    'UNLICENSED,
                    'MS-PL,
                    '"MPL-2.0",
                    'MIT,
                    '"LGPL-3.0-or-later",
                    '"LGPL-3.0-only",
                    '"LGPL-2.1-or-later",
                    '"LGPL-2.1-only",
                    '"LGPL-2.0-only",
                    'ISC,
                    '"GPL-3.0-only",
                    '"GPL-2.0-only",
                    '"EPL-2.0",
                    '"EPL-1.0",
                    '"CDDL-1.1",
                    '"CDDL-1.0",
                    '"CC0-1.0",
                    '"BSL-1.0",
                    'BSD-3-Clause,
                    'BSD-2-Clause,
                    '"Apache-2.0",
                    '"AGPL-3.0-only"
                  |]
                ]
            ],
      "definitions.optionalDependency" = { _ | String },
      "definitions.packageExportsEntry" =
        js2n.OneOf
            [
              std.contract.Sequence
                [
                  refs."definitions.packageExportsEntryPath",
                  js2n.Nullable String
                ],
              std.contract.Sequence
                [ refs."definitions.packageExportsEntryObject", { _ | Dyn } ]
            ],
      "definitions.packageExportsEntryObject" =
        js2n.record.Record
            {
              additional = 'None,
              patterns =
                {
                    "^[^.0-9]+$" =
                      refs."definitions.packageExportsEntryOrFallback",
                    "^types@.+$" =
                      refs."definitions.packageExportsEntryOrFallback",
                  },
              properties =
                {
                    "default" =
                      refs."definitions.packageExportsEntryOrFallback",
                    "import" = refs."definitions.packageExportsEntryOrFallback",
                    node = refs."definitions.packageExportsEntryOrFallback",
                    require = refs."definitions.packageExportsEntryOrFallback",
                    types = refs."definitions.packageExportsEntryOrFallback",
                  },
              required = {},
            },
      "definitions.packageExportsEntryOrFallback" =
        js2n.OneOf
            [
              refs."definitions.packageExportsEntry",
              std.contract.Sequence
                [ refs."definitions.packageExportsFallback", Array Dyn ]
            ],
      "definitions.packageExportsEntryPath" =
        js2n.Nullable (js2n.string.Matches "^\\./"),
      "definitions.packageExportsFallback" =
        Array refs."definitions.packageExportsEntry",
      "definitions.packageImportsEntry" =
        js2n.OneOf
            [
              std.contract.Sequence
                [
                  refs."definitions.packageImportsEntryPath",
                  js2n.Nullable String
                ],
              std.contract.Sequence
                [ refs."definitions.packageImportsEntryObject", { _ | Dyn } ]
            ],
      "definitions.packageImportsEntryObject" =
        js2n.record.Record
            {
              additional = 'None,
              patterns =
                {
                    "^[^.0-9]+$" =
                      refs."definitions.packageImportsEntryOrFallback",
                    "^types@.+$" =
                      refs."definitions.packageImportsEntryOrFallback",
                  },
              properties =
                {
                    "default" =
                      refs."definitions.packageImportsEntryOrFallback",
                    "import" = refs."definitions.packageImportsEntryOrFallback",
                    node = refs."definitions.packageImportsEntryOrFallback",
                    require = refs."definitions.packageImportsEntryOrFallback",
                    types = refs."definitions.packageImportsEntryOrFallback",
                  },
              required = {},
            },
      "definitions.packageImportsEntryOrFallback" =
        js2n.OneOf
            [
              refs."definitions.packageImportsEntry",
              std.contract.Sequence
                [ refs."definitions.packageImportsFallback", Array Dyn ]
            ],
      "definitions.packageImportsEntryPath" = js2n.Nullable String,
      "definitions.packageImportsFallback" =
        Array refs."definitions.packageImportsEntry",
      "definitions.peerDependency" = { _ | String },
      "definitions.peerDependencyMeta" =
        {
            _ | {
              "optional"
                | Bool
                | doc "Specifies that this peer dependency is optional and should not be installed automatically."
                | optional,
              ..
            }
          },
      "definitions.person" =
        std.contract.any_of
            [
              String,
              {
                email | String | optional,
                name | String,
                url | String | optional,
                ..
              }
            ],
      "definitions.scriptsInstallAfter" = String,
      "definitions.scriptsPublishAfter" = String,
      "definitions.scriptsRestart" = String,
      "definitions.scriptsStart" = String,
      "definitions.scriptsStop" = String,
      "definitions.scriptsTest" = String,
      "definitions.scriptsUninstallBefore" = String,
      "definitions.scriptsVersionBefore" = String,
      "properties.ava.definitions.array-of-paths" =
        Array (
            std.contract.Sequence
              [ refs."properties.ava.definitions.path", String ]
          ),
      "properties.ava.definitions.array-of-strings" = Array String,
      "properties.ava.definitions.path" = js2n.string.MinLength 1,
      "properties.eslintConfig.definitions.bestPractices" =
        {
            accessor-pairs
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce getter and setter pairs in objects"
              | optional,
            array-callback-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce return statements in callbacks of array methods"
              | optional,
            block-scoped-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the use of variables within the scope they are defined"
              | optional,
            class-methods-use-this
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce that class methods utilize this"
              | optional,
            complexity
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum cyclomatic complexity allowed in a program"
              | optional,
            consistent-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require return statements to either always or never specify values"
              | optional,
            curly
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent brace style for all control statements"
              | optional,
            default-case
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require default cases in switch statements"
              | optional,
            dot-location
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent newlines before and after dots"
              | optional,
            dot-notation
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce dot notation whenever possible"
              | optional,
            eqeqeq
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require the use of === and !=="
              | optional,
            guard-for-in
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require for-in loops to include an if statement"
              | optional,
            no-alert
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of alert, confirm, and prompt"
              | optional,
            no-caller
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of arguments.caller or arguments.callee"
              | optional,
            no-case-declarations
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow lexical declarations in case clauses"
              | optional,
            no-div-regex
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow division operators explicitly at the beginning of regular expressions"
              | optional,
            no-else-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow else blocks after return statements in if statements"
              | optional,
            no-empty-function
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow empty functions"
              | optional,
            no-empty-pattern
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow empty destructuring patterns"
              | optional,
            no-eq-null
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow null comparisons without type-checking operators"
              | optional,
            no-eval
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of eval()"
              | optional,
            no-extend-native
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow extending native types"
              | optional,
            no-extra-bind
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary calls to .bind()"
              | optional,
            no-extra-label
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary labels"
              | optional,
            no-fallthrough
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow fallthrough of case statements"
              | optional,
            no-floating-decimal
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow leading or trailing decimal points in numeric literals"
              | optional,
            no-global-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow assignments to native objects or read-only global variables"
              | optional,
            no-implicit-coercion
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow shorthand type conversions"
              | optional,
            no-implicit-globals
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow var and named function declarations in the global scope"
              | optional,
            no-implied-eval
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of eval()-like methods"
              | optional,
            no-invalid-this
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow this keywords outside of classes or class-like objects"
              | optional,
            no-iterator
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of the __iterator__ property"
              | optional,
            no-labels
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow labeled statements"
              | optional,
            no-lone-blocks
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary nested blocks"
              | optional,
            no-loop-func
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow function declarations and expressions inside loop statements"
              | optional,
            no-magic-numbers
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow magic numbers"
              | optional,
            no-multi-spaces
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow multiple spaces"
              | optional,
            no-multi-str
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow multiline strings"
              | optional,
            no-native-reassign
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            no-new
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow new operators outside of assignments or comparisons"
              | optional,
            no-new-func
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow new operators with the Function object"
              | optional,
            no-new-wrappers
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow new operators with the String, Number, and Boolean objects"
              | optional,
            no-octal
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow octal literals"
              | optional,
            no-octal-escape
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow octal escape sequences in string literals"
              | optional,
            no-param-reassign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow reassigning function parameters"
              | optional,
            no-proto
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of the __proto__ property"
              | optional,
            no-redeclare
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow var redeclaration"
              | optional,
            no-restricted-properties
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow certain properties on certain objects"
              | optional,
            no-return-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow assignment operators in return statements"
              | optional,
            no-return-await
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary return await"
              | optional,
            no-script-url
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow javascript: urls"
              | optional,
            no-self-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow assignments where both sides are exactly the same"
              | optional,
            no-self-compare
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow comparisons where both sides are exactly the same"
              | optional,
            no-sequences
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow comma operators"
              | optional,
            no-throw-literal
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow throwing literals as exceptions"
              | optional,
            no-unmodified-loop-condition
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unmodified loop conditions"
              | optional,
            no-unused-expressions
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unused expressions"
              | optional,
            no-unused-labels
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unused labels"
              | optional,
            no-useless-call
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary calls to .call() and .apply()"
              | optional,
            no-useless-concat
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary concatenation of literals or template literals"
              | optional,
            no-useless-escape
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary escape characters"
              | optional,
            no-useless-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow redundant return statements"
              | optional,
            no-void
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow void operators"
              | optional,
            no-warning-comments
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified warning terms in comments"
              | optional,
            no-with
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow with statements"
              | optional,
            prefer-promise-reject-errors
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require using Error objects as Promise rejection reasons"
              | optional,
            radix
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the consistent use of the radix argument when using parseInt()"
              | optional,
            require-await
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow async functions which have no await expression"
              | optional,
            vars-on-top
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require var declarations be placed at the top of their containing scope"
              | optional,
            wrap-iife
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require parentheses around immediate function invocations"
              | optional,
            yoda
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or Disallow \"Yoda\" conditions"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.ecmaScript6" =
        {
            arrow-body-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require braces around arrow function bodies"
              | optional,
            arrow-parens
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require parentheses around arrow function arguments"
              | optional,
            arrow-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before and after the arrow in arrow functions"
              | optional,
            constructor-super
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require super() calls in constructors"
              | optional,
            generator-star-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing around * operators in generator functions"
              | optional,
            no-class-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow reassigning class members"
              | optional,
            no-confusing-arrow
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow arrow functions where they could be confused with comparisons"
              | optional,
            no-const-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow reassigning const variables"
              | optional,
            no-dupe-class-members
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow duplicate class members"
              | optional,
            no-duplicate-imports
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow duplicate module imports"
              | optional,
            no-new-symbol
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow new operators with the Symbol object"
              | optional,
            no-restricted-imports
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified modules when loaded by import"
              | optional,
            no-this-before-super
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow this/super before calling super() in constructors"
              | optional,
            no-useless-computed-key
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary computed property keys in object literals"
              | optional,
            no-useless-constructor
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary constructors"
              | optional,
            no-useless-rename
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow renaming import, export, and destructured assignments to the same name"
              | optional,
            no-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require let or const instead of var"
              | optional,
            object-shorthand
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow method and property shorthand syntax for object literals"
              | optional,
            prefer-arrow-callback
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require arrow functions as callbacks"
              | optional,
            prefer-const
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require const declarations for variables that are never reassigned after declared"
              | optional,
            prefer-destructuring
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require destructuring from arrays and/or objects"
              | optional,
            prefer-numeric-literals
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow parseInt() in favor of binary, octal, and hexadecimal literals"
              | optional,
            prefer-reflect
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require Reflect methods where applicable"
              | optional,
            prefer-rest-params
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require rest parameters instead of arguments"
              | optional,
            prefer-spread
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require spread operators instead of .apply()"
              | optional,
            prefer-template
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require template literals instead of string concatenation"
              | optional,
            require-yield
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require generator functions to contain yield"
              | optional,
            rest-spread-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce spacing between rest and spread operators and their expressions"
              | optional,
            sort-imports
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce sorted import declarations within modules"
              | optional,
            symbol-description
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require symbol descriptions"
              | optional,
            template-curly-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow spacing around embedded expressions of template strings"
              | optional,
            yield-star-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow spacing around the * in yield* expressions"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.legacy" =
        {
            max-depth
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            max-len
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            max-params
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            max-statements
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            no-bitwise
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            no-plusplus
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.nodeAndCommonJs" =
        {
            callback-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require return statements after callbacks"
              | optional,
            global-require
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require require() calls to be placed at top-level module scope"
              | optional,
            handle-callback-err
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require error handling in callbacks"
              | optional,
            no-buffer-constructor
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow use of the Buffer() constructor"
              | optional,
            no-mixed-requires
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow require calls to be mixed with regular var declarations"
              | optional,
            no-new-require
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow new operators with calls to require"
              | optional,
            no-path-concat
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow string concatenation with __dirname and __filename"
              | optional,
            no-process-env
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of process.env"
              | optional,
            no-process-exit
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of process.exit()"
              | optional,
            no-restricted-modules
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified modules when loaded by require"
              | optional,
            no-sync
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow synchronous methods"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.possibleErrors" =
        {
            comma-dangle
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow trailing commas"
              | optional,
            for-direction
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce \"for\" loop update clause moving the counter in the right direction"
              | optional,
            getter-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce return statements in getters"
              | optional,
            no-await-in-loop
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow await inside of loops"
              | optional,
            no-compare-neg-zero
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow comparing against -0"
              | optional,
            no-cond-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow assignment operators in conditional expressions"
              | optional,
            no-console
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of console"
              | optional,
            no-constant-condition
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow constant expressions in conditions"
              | optional,
            no-control-regex
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow control characters in regular expressions"
              | optional,
            no-debugger
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of debugger"
              | optional,
            no-dupe-args
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow duplicate arguments in function definitions"
              | optional,
            no-dupe-keys
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow duplicate keys in object literals"
              | optional,
            no-duplicate-case
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow duplicate case labels"
              | optional,
            no-empty
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow empty block statements"
              | optional,
            no-empty-character-class
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow empty character classes in regular expressions"
              | optional,
            no-ex-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow reassigning exceptions in catch clauses"
              | optional,
            no-extra-boolean-cast
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary boolean casts"
              | optional,
            no-extra-parens
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary parentheses"
              | optional,
            no-extra-semi
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unnecessary semicolons"
              | optional,
            no-func-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow reassigning function declarations"
              | optional,
            no-inner-declarations
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow function or var declarations in nested blocks"
              | optional,
            no-invalid-regexp
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow invalid regular expression strings in RegExp constructors"
              | optional,
            no-irregular-whitespace
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow irregular whitespace outside of strings and comments"
              | optional,
            no-negated-in-lhs
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow negating the left operand in in expressions (deprecated)"
              | optional,
            no-obj-calls
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow calling global object properties as functions"
              | optional,
            no-prototype-builtins
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow calling some Object.prototype methods directly on objects"
              | optional,
            no-regex-spaces
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow multiple spaces in regular expressions"
              | optional,
            no-sparse-arrays
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow sparse arrays"
              | optional,
            no-template-curly-in-string
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow template literal placeholder syntax in regular strings"
              | optional,
            no-unexpected-multiline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow confusing multiline expressions"
              | optional,
            no-unreachable
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unreachable code after return, throw, continue, and break statements"
              | optional,
            no-unsafe-finally
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow control flow statements in finally blocks"
              | optional,
            no-unsafe-negation
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow negating the left operand of relational operators"
              | optional,
            use-isnan
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require calls to isNaN() when checking for NaN"
              | optional,
            valid-jsdoc
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce valid JSDoc comments"
              | optional,
            valid-typeof
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce comparing typeof expressions against valid strings"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.rule" =
        std.contract.any_of
            [
              std.contract.Sequence
                [
                  std.number.Integer,
                  js2n.number.Maximum 2,
                  js2n.number.Minimum 0
                ],
              std.contract.Sequence
                [ std.enum.TagOrString, [| 'error, 'warn, 'off |] ],
              Array Dyn
            ],
      "properties.eslintConfig.definitions.strictMode" =
        {
            strict
              | refs."properties.eslintConfig.definitions.rule"
              | doc "require or disallow strict mode directives"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.stringOrStringArray" =
        std.contract.any_of [ String, Array String ],
      "properties.eslintConfig.definitions.stylisticIssues" =
        {
            array-bracket-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce line breaks after opening and before closing array brackets"
              | optional,
            array-bracket-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing inside array brackets"
              | optional,
            array-element-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce line breaks after each array element"
              | optional,
            block-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing inside single-line blocks"
              | optional,
            brace-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent brace style for blocks"
              | optional,
            camelcase
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce camelcase naming convention"
              | optional,
            capitalized-comments
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce or disallow capitalization of the first letter of a comment"
              | optional,
            comma-dangle
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow trailing commas"
              | optional,
            comma-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before and after commas"
              | optional,
            comma-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent comma style"
              | optional,
            computed-property-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing inside computed property brackets"
              | optional,
            consistent-this
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent naming when capturing the current execution context"
              | optional,
            eol-last
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce at least one newline at the end of files"
              | optional,
            func-call-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow spacing between function identifiers and their invocations"
              | optional,
            func-name-matching
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require function names to match the name of the variable or property to which they are assigned"
              | optional,
            func-names
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow named function expressions"
              | optional,
            func-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the consistent use of either function declarations or expressions"
              | optional,
            function-call-argument-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce line breaks between arguments of a function call"
              | optional,
            function-paren-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent line breaks inside function parentheses"
              | optional,
            id-blacklist
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified identifiers"
              | optional,
            id-length
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce minimum and maximum identifier lengths"
              | optional,
            id-match
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require identifiers to match a specified regular expression"
              | optional,
            implicit-arrow-linebreak
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the location of arrow function bodies"
              | optional,
            indent
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent indentation"
              | optional,
            indent-legacy
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent indentation (legacy, deprecated)"
              | optional,
            jsx-quotes
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the consistent use of either double or single quotes in JSX attributes"
              | optional,
            key-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing between keys and values in object literal properties"
              | optional,
            keyword-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before and after keywords"
              | optional,
            line-comment-position
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce position of line comments"
              | optional,
            linebreak-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent linebreak style"
              | optional,
            lines-around-comment
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require empty lines around comments"
              | optional,
            lines-around-directive
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow newlines around directives"
              | optional,
            lines-between-class-members
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow an empty line between class members"
              | optional,
            max-depth
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum depth that blocks can be nested"
              | optional,
            max-len
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum line length"
              | optional,
            max-lines
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum number of lines per file"
              | optional,
            max-nested-callbacks
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum depth that callbacks can be nested"
              | optional,
            max-params
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum number of parameters in function definitions"
              | optional,
            max-statements
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum number of statements allowed in function blocks"
              | optional,
            max-statements-per-line
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a maximum number of statements allowed per line"
              | optional,
            multiline-comment-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce a particular style for multiline comments"
              | optional,
            multiline-ternary
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce newlines between operands of ternary expressions"
              | optional,
            new-cap
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require constructor function names to begin with a capital letter"
              | optional,
            new-parens
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require parentheses when invoking a constructor with no arguments"
              | optional,
            newline-after-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow an empty line after var declarations"
              | optional,
            newline-before-return
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require an empty line before return statements"
              | optional,
            newline-per-chained-call
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require a newline after each call in a method chain"
              | optional,
            no-array-constructor
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow Array constructors"
              | optional,
            no-bitwise
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow bitwise operators"
              | optional,
            no-continue
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow continue statements"
              | optional,
            no-inline-comments
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow inline comments after code"
              | optional,
            no-lonely-if
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow if statements as the only statement in else blocks"
              | optional,
            no-mixed-operators
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow mixed binary operators"
              | optional,
            no-mixed-spaces-and-tabs
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow mixed spaces and tabs for indentation"
              | optional,
            no-multi-assign
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow use of chained assignment expressions"
              | optional,
            no-multiple-empty-lines
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow multiple empty lines"
              | optional,
            no-negated-condition
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow negated conditions"
              | optional,
            no-nested-ternary
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow nested ternary expressions"
              | optional,
            no-new-object
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow Object constructors"
              | optional,
            no-plusplus
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the unary operators ++ and --"
              | optional,
            no-restricted-syntax
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified syntax"
              | optional,
            no-spaced-func
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            no-tabs
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow tabs in file"
              | optional,
            no-ternary
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow ternary operators"
              | optional,
            no-trailing-spaces
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow trailing whitespace at the end of lines"
              | optional,
            no-underscore-dangle
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow dangling underscores in identifiers"
              | optional,
            no-unneeded-ternary
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow ternary operators when simpler alternatives exist"
              | optional,
            no-whitespace-before-property
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow whitespace before properties"
              | optional,
            nonblock-statement-body-position
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the location of single-line statements"
              | optional,
            object-curly-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent line breaks inside braces"
              | optional,
            object-curly-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing inside braces"
              | optional,
            object-property-newline
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce placing object properties on separate lines"
              | optional,
            object-shorthand
              | refs."properties.eslintConfig.definitions.rule"
              | optional,
            one-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce variables to be declared either together or separately in functions"
              | optional,
            one-var-declaration-per-line
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow newlines around var declarations"
              | optional,
            operator-assignment
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow assignment operator shorthand where possible"
              | optional,
            operator-linebreak
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent linebreak style for operators"
              | optional,
            padded-blocks
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow padding within blocks"
              | optional,
            padding-line-between-statements
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow padding lines between statements"
              | optional,
            quote-props
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require quotes around object literal property names"
              | optional,
            quotes
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce the consistent use of either backticks, double, or single quotes"
              | optional,
            require-jsdoc
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require JSDoc comments"
              | optional,
            semi
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow semicolons instead of ASI"
              | optional,
            semi-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before and after semicolons"
              | optional,
            semi-style
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce location of semicolons"
              | optional,
            sort-keys
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Requires object keys to be sorted"
              | optional,
            sort-vars
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require variables within the same declaration block to be sorted"
              | optional,
            space-before-blocks
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before blocks"
              | optional,
            space-before-function-paren
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before function definition opening parenthesis"
              | optional,
            space-in-parens
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing inside parentheses"
              | optional,
            space-infix-ops
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require spacing around operators"
              | optional,
            space-unary-ops
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing before or after unary operators"
              | optional,
            spaced-comment
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce consistent spacing after the // or /* in a comment"
              | optional,
            switch-colon-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Enforce spacing around colons of switch statements"
              | optional,
            template-tag-spacing
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow spacing between template tags and their literals"
              | optional,
            unicode-bom
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow Unicode byte order mark (BOM)"
              | optional,
            wrap-regex
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require parenthesis around regex literals"
              | optional,
            ..
          },
      "properties.eslintConfig.definitions.variables" =
        {
            init-declarations
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Require or disallow initialization in var declarations"
              | optional,
            no-catch-shadow
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow catch clause parameters from shadowing variables in the outer scope"
              | optional,
            no-delete-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow deleting variables"
              | optional,
            no-label-var
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow labels that share a name with a variable"
              | optional,
            no-restricted-globals
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow specified global variables"
              | optional,
            no-shadow
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow var declarations from shadowing variables in the outer scope"
              | optional,
            no-shadow-restricted-names
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow identifiers from shadowing restricted names"
              | optional,
            no-undef
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of undeclared variables unless mentioned in /*global */ comments"
              | optional,
            no-undef-init
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow initializing variables to undefined"
              | optional,
            no-undefined
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of undefined as an identifier"
              | optional,
            no-unused-vars
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow unused variables"
              | optional,
            no-use-before-define
              | refs."properties.eslintConfig.definitions.rule"
              | doc "Disallow the use of variables before they are defined"
              | optional,
            ..
          },
      "properties.eslintConfig.properties.ecmaFeatures" =
        {
            arrowFunctions | Bool | optional,
            binaryLiterals | Bool | optional,
            blockBindings | Bool | optional,
            classes | Bool | optional,
            defaultParams | Bool | optional,
            destructuring | Bool | optional,
            experimentalObjectRestSpread
              | Bool
              | doc "Enables support for the experimental object rest/spread properties (IMPORTANT: This is an experimental feature that may change significantly in the future. It's recommended that you do not write rules relying on this functionality unless you are willing to incur maintenance cost when it changes.)"
              | optional,
            forOf | Bool | optional,
            generators | Bool | optional,
            globalReturn
              | Bool
              | doc "allow return statements in the global scope"
              | optional,
            impliedStrict
              | Bool
              | doc "enable global strict mode (if ecmaVersion is 5 or greater)"
              | optional,
            jsx | Bool | doc "enable JSX" | optional,
            modules | Bool | optional,
            objectLiteralComputedProperties | Bool | optional,
            objectLiteralDuplicateProperties | Bool | optional,
            objectLiteralShorthandMethods | Bool | optional,
            objectLiteralShorthandProperties | Bool | optional,
            octalLiterals | Bool | optional,
            regexUFlag | Bool | optional,
            regexYFlag | Bool | optional,
            restParams | Bool | optional,
            spread | Bool | optional,
            superInFunctions | Bool | optional,
            templateStrings | Bool | optional,
            unicodeCodePointEscapes | Bool | optional,
            ..
          },
      "properties.eslintConfig.properties.env" =
        {
            amd
              | Bool
              | doc "defines require() and define() as global variables as per the amd spec"
              | optional,
            applescript | Bool | doc "AppleScript global variables" | optional,
            atomtest | Bool | doc "Atom test helper globals" | optional,
            browser | Bool | doc "browser global variables" | optional,
            commonjs
              | Bool
              | doc "CommonJS global variables and CommonJS scoping (use this for browser-only code that uses Browserify/WebPack)"
              | optional,
            embertest | Bool | doc "Ember test helper globals" | optional,
            es6
              | Bool
              | doc "enable all ECMAScript 6 features except for modules"
              | optional,
            greasemonkey | Bool | doc "GreaseMonkey globals" | optional,
            jasmine
              | Bool
              | doc "adds all of the Jasmine testing global variables for version 1.3 and 2.0"
              | optional,
            jest | Bool | doc "Jest global variables" | optional,
            jquery | Bool | doc "jQuery global variables" | optional,
            meteor | Bool | doc "Meteor global variables" | optional,
            mocha
              | Bool
              | doc "adds all of the Mocha test global variables"
              | optional,
            mongo | Bool | doc "MongoDB global variables" | optional,
            nashorn | Bool | doc "Java 8 Nashorn global variables" | optional,
            node
              | Bool
              | doc "Node.js global variables and Node.js scoping"
              | optional,
            phantomjs | Bool | doc "PhantomJS global variables" | optional,
            prototypejs | Bool | doc "Prototype.js global variables" | optional,
            protractor | Bool | doc "Protractor global variables" | optional,
            qunit | Bool | doc "QUnit global variables" | optional,
            serviceworker
              | Bool
              | doc "Service Worker global variables"
              | optional,
            shared-node-browser
              | Bool
              | doc "Globals common to both Node and Browser"
              | optional,
            shelljs | Bool | doc "ShellJS global variables" | optional,
            webextensions | Bool | doc "WebExtensions globals" | optional,
            worker | Bool | doc "web workers global variables" | optional,
            ..
          },
      "properties.eslintConfig.properties.globals" =
        {
            _ | std.contract.any_of
              [
                std.contract.Sequence
                  [ std.enum.TagOrString, [| 'off, 'writable, 'readonly |] ],
                Bool
              ]
          },
      "properties.eslintConfig.properties.overrides" =
        Array
            {
              ecmaFeatures
                | refs."properties.eslintConfig.properties.ecmaFeatures"
                | { _ | Dyn }
                | optional,
              env
                | refs."properties.eslintConfig.properties.env"
                | { _ | Dyn }
                | optional,
              excludedFiles
                | refs."properties.eslintConfig.definitions.stringOrStringArray"
                | doc "If a file matches any of the 'excludedFiles' glob patterns, the 'overrides' configuration won't apply"
                | optional,
              extends
                | refs."properties.eslintConfig.definitions.stringOrStringArray"
                | doc "If you want to extend a specific configuration file, you can use the extends property and specify the path to the file. The path can be either relative or absolute."
                | optional,
              files
                | std.contract.any_of
                  [
                    String,
                    std.contract.Sequence
                      [ js2n.array.MinItems 1, Array String ]
                  ]
                | doc "Glob pattern for files to apply 'overrides' configuration, relative to the directory of the config file",
              globals
                | refs."properties.eslintConfig.properties.globals"
                | { _ | Dyn }
                | optional,
              overrides | js2n.Always | Array Dyn | optional,
              parser
                | refs."properties.eslintConfig.properties.parser"
                | String
                | optional,
              parserOptions
                | refs."properties.eslintConfig.properties.parserOptions"
                | { _ | Dyn }
                | optional,
              plugins
                | refs."properties.eslintConfig.properties.plugins"
                | Array Dyn
                | optional,
              processor
                | String
                | doc "To specify a processor, specify the plugin name and processor name joined by a forward slash"
                | optional,
              rules
                | refs."properties.eslintConfig.properties.rules"
                | { _ | Dyn }
                | optional,
              settings
                | refs."properties.eslintConfig.properties.settings"
                | { _ | Dyn }
                | optional,
            },
      "properties.eslintConfig.properties.parser" = String,
      "properties.eslintConfig.properties.parserOptions" =
        {
            ecmaFeatures
              | refs."properties.eslintConfig.properties.ecmaFeatures"
              | { _ | Dyn }
              | optional,
            ecmaVersion
              | js2n.Enum
                [
                  3,
                  5,
                  6,
                  2015,
                  7,
                  2016,
                  8,
                  2017,
                  9,
                  2018,
                  10,
                  2019,
                  11,
                  2020,
                  12,
                  2021,
                  13,
                  2022,
                  14,
                  2023,
                  15,
                  2024,
                  "latest"
                ]
              | doc "Set to 3, 5 (default), 6, 7, 8, 9, 10, 11, 12, 13, 14, or 15 to specify the version of ECMAScript syntax you want to use. You can also set it to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), 2020 (same as 11), 2021 (same as 12), 2022 (same as 13), 2023 (same as 14), or 2024 (same as 15) to use the year-based naming. You can also set \"latest\" to use the most recently supported version."
              | optional,
            sourceType
              | std.enum.TagOrString
              | [| 'commonjs, 'module, 'script |]
              | doc "set to \"script\" (default), \"commonjs\", or \"module\" if your code is in ECMAScript modules"
              | optional,
            ..
          },
      "properties.eslintConfig.properties.plugins" = Array String,
      "properties.eslintConfig.properties.rules" =
        std.contract.Sequence
            [
              refs."properties.eslintConfig.definitions.possibleErrors",
              refs."properties.eslintConfig.definitions.bestPractices",
              refs."properties.eslintConfig.definitions.strictMode",
              refs."properties.eslintConfig.definitions.variables",
              refs."properties.eslintConfig.definitions.nodeAndCommonJs",
              refs."properties.eslintConfig.definitions.stylisticIssues",
              refs."properties.eslintConfig.definitions.ecmaScript6",
              refs."properties.eslintConfig.definitions.legacy",
              {
                "@angular-eslint/component-class-suffix"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { suffixes | Array String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Classes decorated with @Component must have suffix "Component" (or custom) in their name. See more at https://angular.dev/style-guide#style-02-03
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-class-suffix.md
                  "%
                  | optional,
                "@angular-eslint/component-max-inline-declarations"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                animations | js2n.number.Minimum 0 | optional,
                                styles | js2n.number.Minimum 0 | optional,
                                template | js2n.number.Minimum 0 | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforces a maximum number of lines in inline template, styles and animations. See more at https://angular.dev/style-guide#style-05-04
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-max-inline-declarations.md
                  "%
                  | optional,
                "@angular-eslint/component-selector"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                prefix
                                  | std.contract.any_of [ Array Dyn, String ]
                                  | optional,
                                style
                                  | std.enum.TagOrString
                                  | [| 'kebab-case, 'camelCase |]
                                  | optional,
                                type
                                  | std.contract.any_of
                                    [
                                      String,
                                      Array (
                                        std.contract.Sequence
                                          [
                                            std.enum.TagOrString,
                                            [| 'attribute, 'element |]
                                          ]
                                      )
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Component selectors should follow given naming rules. See more at https://angular.dev/style-guide#style-02-07, https://angular.dev/style-guide#style-05-02
                          and https://angular.dev/style-guide#style-05-03.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-selector.md
                  "%
                  | optional,
                "@angular-eslint/consistent-component-styles"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensures consistent usage of `styles`/`styleUrls`/`styleUrl` within Component metadata
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/consistent-component-styles.md
                  "%
                  | optional,
                "@angular-eslint/contextual-decorator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that classes use contextual decorators in its body
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-decorator.md
                  "%
                  | optional,
                "@angular-eslint/contextual-lifecycle"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that lifecycle methods are used in a correct context
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-lifecycle.md
                  "%
                  | optional,
                "@angular-eslint/directive-class-suffix"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { suffixes | Array String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Classes decorated with @Directive must have suffix "Directive" (or custom) in their name. See more at https://angular.dev/style-guide#style-02-03
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-class-suffix.md
                  "%
                  | optional,
                "@angular-eslint/directive-selector"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                prefix
                                  | std.contract.any_of [ Array Dyn, String ]
                                  | optional,
                                style
                                  | std.enum.TagOrString
                                  | [| 'kebab-case, 'camelCase |]
                                  | optional,
                                type
                                  | std.contract.any_of
                                    [
                                      String,
                                      Array (
                                        std.contract.Sequence
                                          [
                                            std.enum.TagOrString,
                                            [| 'attribute, 'element |]
                                          ]
                                      )
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Directive selectors should follow given naming rules. See more at https://angular.dev/style-guide#style-02-06 and https://angular.dev/style-guide#style-02-08.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-selector.md
                  "%
                  | optional,
                "@angular-eslint/no-async-lifecycle-method"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Angular Lifecycle methods should not be async. Angular does not wait for async lifecycle but the code incorrectly suggests it does.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-async-lifecycle-method.md
                  "%
                  | optional,
                "@angular-eslint/no-attribute-decorator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    The @Attribute decorator is used to obtain a single value for an attribute. This is a much less common use-case than getting a stream of values (using @Input), so often the @Attribute decorator is mistakenly used when @Input was what was intended. This rule disallows usage of @Attribute decorator altogether in order to prevent these mistakes.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-attribute-decorator.md
                  "%
                  | optional,
                "@angular-eslint/no-conflicting-lifecycle"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that directives not implement conflicting lifecycle interfaces.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-conflicting-lifecycle.md
                  "%
                  | optional,
                "@angular-eslint/no-duplicates-in-metadata-arrays"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that metadata arrays do not contain duplicate entries.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-duplicates-in-metadata-arrays.md
                  "%
                  | optional,
                "@angular-eslint/no-empty-lifecycle-method"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows declaring empty lifecycle methods
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-empty-lifecycle-method.md
                  "%
                  | optional,
                "@angular-eslint/no-forward-ref"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows usage of `forwardRef` references for DI
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-forward-ref.md
                  "%
                  | optional,
                "@angular-eslint/no-host-metadata-property"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowStatic | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallows usage of the `host` metadata property. NOTE: This used to be recommended by the Angular Team, but now they recommend the exact opposite: https://github.com/angular/angular/issues/54284
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-host-metadata-property.md
                  "%
                  | optional,
                "@angular-eslint/no-input-prefix"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { prefixes | Array String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensures that input bindings, including aliases, are not named or prefixed by the configured disallowed prefixes
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-input-prefix.md
                  "%
                  | optional,
                "@angular-eslint/no-input-rename"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowedNames
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | doc "A list with allowed input names"
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensures that input bindings are not aliased
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-input-rename.md
                  "%
                  | optional,
                "@angular-eslint/no-inputs-metadata-property"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows usage of the `inputs` metadata property. See more at https://angular.dev/style-guide#style-05-12
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-inputs-metadata-property.md
                  "%
                  | optional,
                "@angular-eslint/no-lifecycle-call"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows explicit calls to lifecycle methods
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-lifecycle-call.md
                  "%
                  | optional,
                "@angular-eslint/no-output-native"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that output bindings, including aliases, are not named as standard DOM events
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-native.md
                  "%
                  | optional,
                "@angular-eslint/no-output-on-prefix"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that output bindings, including aliases, are not named "on", nor prefixed with it. See more at https://angular.dev/style-guide#style-05-16
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-on-prefix.md
                  "%
                  | optional,
                "@angular-eslint/no-output-rename"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that output bindings are not aliased
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-rename.md
                  "%
                  | optional,
                "@angular-eslint/no-outputs-metadata-property"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows usage of the `outputs` metadata property. See more at https://angular.dev/style-guide#style-05-12
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-outputs-metadata-property.md
                  "%
                  | optional,
                "@angular-eslint/no-pipe-impure"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows the declaration of impure pipes
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-pipe-impure.md
                  "%
                  | optional,
                "@angular-eslint/no-queries-metadata-property"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows usage of the `queries` metadata property. See more at https://angular.dev/style-guide#style-05-12.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-queries-metadata-property.md
                  "%
                  | optional,
                "@angular-eslint/pipe-prefix"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                prefixes
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent prefix for pipes.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/pipe-prefix.md
                  "%
                  | optional,
                "@angular-eslint/prefer-on-push-component-change-detection"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures component's `changeDetection` is set to `ChangeDetectionStrategy.OnPush`
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-on-push-component-change-detection.md
                  "%
                  | optional,
                "@angular-eslint/prefer-output-readonly"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer to declare `@Output` as `readonly` since they are not supposed to be reassigned
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-output-readonly.md
                  "%
                  | optional,
                "@angular-eslint/prefer-standalone"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures component, directive and pipe `standalone` property is set to `true` in the component decorator
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-standalone.md
                  "%
                  | optional,
                "@angular-eslint/prefer-standalone-component"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures component `standalone` property is set to `true` in the component decorator
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-standalone-component.md
                  "%
                  | optional,
                "@angular-eslint/relative-url-prefix"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    The ./ and ../ prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix. See more at https://angular.dev/style-guide#style-05-04
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/relative-url-prefix.md
                  "%
                  | optional,
                "@angular-eslint/require-localize-metadata"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                requireDescription | Bool | optional,
                                requireMeaning | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensures that $localize tagged messages contain helpful metadata to aid with translations.
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/require-localize-metadata.md
                  "%
                  | optional,
                "@angular-eslint/sort-lifecycle-methods"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that lifecycle methods are declared in order of execution
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/sort-lifecycle-methods.md
                  "%
                  | optional,
                "@angular-eslint/sort-ngmodule-metadata-arrays"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                locale
                                  | String
                                  | doc "A string with a BCP 47 language tag."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensures ASC alphabetical order for `NgModule` metadata arrays for easy visual scanning
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/sort-ngmodule-metadata-arrays.md
                  "%
                  | optional,
                "@angular-eslint/use-component-selector"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Component selector must be declared
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-selector.md
                  "%
                  | optional,
                "@angular-eslint/use-component-view-encapsulation"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallows using `ViewEncapsulation.None`
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-view-encapsulation.md
                  "%
                  | optional,
                "@angular-eslint/use-injectable-provided-in"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoreClassNamePattern | String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Using the `providedIn` property makes `Injectables` tree-shakable
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-injectable-provided-in.md
                  "%
                  | optional,
                "@angular-eslint/use-lifecycle-interface"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that classes implement lifecycle interfaces corresponding to the declared lifecycle methods. See more at https://angular.dev/style-guide#style-09-01
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-lifecycle-interface.md
                  "%
                  | optional,
                "@angular-eslint/use-pipe-transform-interface"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensures that `Pipes` implement `PipeTransform` interface
                    https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-pipe-transform-interface.md
                  "%
                  | optional,
                "@typescript-eslint/adjacent-overload-signatures"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require that function overload signatures be consecutive
                    https://typescript-eslint.io/rules/adjacent-overload-signatures
                  "%
                  | optional,
                "@typescript-eslint/array-type"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                "default"
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "The array type expected for mutable cases."
                                  | optional,
                                readonly
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "The array type expected for readonly cases. If omitted, the value for `default` will be used."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require consistently using either `T[]` or `Array<T>` for arrays
                    https://typescript-eslint.io/rules/array-type
                  "%
                  | optional,
                "@typescript-eslint/await-thenable"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow awaiting a value that is not a Thenable
                    https://typescript-eslint.io/rules/await-thenable
                  "%
                  | optional,
                "@typescript-eslint/ban-ts-comment"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                minimumDescriptionLength | Number | optional,
                                ts-check | js2n.Always | optional,
                                ts-expect-error | js2n.Always | optional,
                                ts-ignore | js2n.Always | optional,
                                ts-nocheck | js2n.Always | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow `@ts-<directive>` comments or require descriptions after directives
                    https://typescript-eslint.io/rules/ban-ts-comment
                  "%
                  | optional,
                "@typescript-eslint/ban-tslint-comment"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow `// tslint:<rule-flag>` comments
                    https://typescript-eslint.io/rules/ban-tslint-comment
                  "%
                  | optional,
                "@typescript-eslint/ban-types"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                extendDefaults | Bool | optional,
                                types | {  .. } | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow certain types
                    https://typescript-eslint.io/rules/ban-types
                  "%
                  | optional,
                "@typescript-eslint/block-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow or enforce spaces inside of blocks after opening block and before closing block
                    https://typescript-eslint.io/rules/block-spacing
                  "%
                  | optional,
                "@typescript-eslint/brace-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent brace style for blocks
                    https://typescript-eslint.io/rules/brace-style
                  "%
                  | optional,
                "@typescript-eslint/class-literal-property-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce that literals on classes are exposed in a consistent style
                    https://typescript-eslint.io/rules/class-literal-property-style
                  "%
                  | optional,
                "@typescript-eslint/class-methods-use-this"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                enforceForClassFields
                                  | Bool
                                  | doc "Enforces that functions used as instance field initializers utilize `this`"
                                  | optional,
                                exceptMethods
                                  | Array String
                                  | doc "Allows specified method names to be ignored with this rule"
                                  | optional,
                                ignoreClassesThatImplementAnInterface
                                  | std.contract.any_of
                                    [
                                      Bool,
                                      std.contract.Sequence
                                        [
                                          std.enum.TagOrString,
                                          [| 'public-fields |]
                                        ]
                                    ]
                                  | doc "Ignore classes that specifically implement some interface"
                                  | optional,
                                ignoreOverrideMethods
                                  | Bool
                                  | doc "Ignore members marked with the `override` modifier"
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce that class methods utilize `this`
                    https://typescript-eslint.io/rules/class-methods-use-this
                  "%
                  | optional,
                "@typescript-eslint/comma-dangle"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow trailing commas
                    https://typescript-eslint.io/rules/comma-dangle
                  "%
                  | optional,
                "@typescript-eslint/comma-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before and after commas
                    https://typescript-eslint.io/rules/comma-spacing
                  "%
                  | optional,
                "@typescript-eslint/consistent-generic-constructors"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce specifying generic type arguments on type annotation or constructor name of a constructor call
                    https://typescript-eslint.io/rules/consistent-generic-constructors
                  "%
                  | optional,
                "@typescript-eslint/consistent-indexed-object-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              std.contract.Sequence
                                [
                                  std.enum.TagOrString,
                                  [| 'index-signature, 'record |]
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require or disallow the `Record` type
                    https://typescript-eslint.io/rules/consistent-indexed-object-style
                  "%
                  | optional,
                "@typescript-eslint/consistent-return"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                treatUndefinedAsUnspecified | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require `return` statements to either always or never specify values
                    https://typescript-eslint.io/rules/consistent-return
                  "%
                  | optional,
                "@typescript-eslint/consistent-type-assertions"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent usage of type assertions
                    https://typescript-eslint.io/rules/consistent-type-assertions
                  "%
                  | optional,
                "@typescript-eslint/consistent-type-definitions"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              std.contract.Sequence
                                [
                                  std.enum.TagOrString,
                                  [| 'type, 'interface |]
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce type definitions to consistently use either `interface` or `type`
                    https://typescript-eslint.io/rules/consistent-type-definitions
                  "%
                  | optional,
                "@typescript-eslint/consistent-type-exports"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                fixMixedExportsWithInlineTypeSpecifier
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent usage of type exports
                    https://typescript-eslint.io/rules/consistent-type-exports
                  "%
                  | optional,
                "@typescript-eslint/consistent-type-imports"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                disallowTypeAnnotations | Bool | optional,
                                fixStyle
                                  | std.enum.TagOrString
                                  | [|
                                    'inline-type-imports,
                                    'separate-type-imports
                                  |]
                                  | optional,
                                prefer
                                  | std.enum.TagOrString
                                  | [| 'no-type-imports, 'type-imports |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent usage of type imports
                    https://typescript-eslint.io/rules/consistent-type-imports
                  "%
                  | optional,
                "@typescript-eslint/default-param-last"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce default parameters to be last
                    https://typescript-eslint.io/rules/default-param-last
                  "%
                  | optional,
                "@typescript-eslint/dot-notation"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowIndexSignaturePropertyAccess
                                  | Bool
                                  | optional,
                                allowKeywords | Bool | optional,
                                allowPattern | String | optional,
                                allowPrivateClassPropertyAccess
                                  | Bool
                                  | optional,
                                allowProtectedClassPropertyAccess
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce dot notation whenever possible
                    https://typescript-eslint.io/rules/dot-notation
                  "%
                  | optional,
                "@typescript-eslint/explicit-function-return-type"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowConciseArrowFunctionExpressionsStartingWithVoid
                                  | Bool
                                  | doc "Whether to allow arrow functions that start with the `void` keyword."
                                  | optional,
                                allowDirectConstAssertionInArrowFunctions
                                  | Bool
                                  | doc "Whether to ignore arrow functions immediately returning a `as const` value."
                                  | optional,
                                allowExpressions
                                  | Bool
                                  | doc "Whether to ignore function expressions (functions which are not part of a declaration)."
                                  | optional,
                                allowFunctionsWithoutTypeParameters
                                  | Bool
                                  | doc "Whether to ignore functions that don't have generic type parameters."
                                  | optional,
                                allowHigherOrderFunctions
                                  | Bool
                                  | doc "Whether to ignore functions immediately returning another function expression."
                                  | optional,
                                allowIIFEs
                                  | Bool
                                  | doc "Whether to ignore immediately invoked function expressions (IIFEs)."
                                  | optional,
                                allowTypedFunctionExpressions
                                  | Bool
                                  | doc "Whether to ignore type annotations on the variable of function expressions."
                                  | optional,
                                allowedNames
                                  | Array String
                                  | doc "An array of function/method names that will not have their arguments or return values checked."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require explicit return types on functions and class methods
                    https://typescript-eslint.io/rules/explicit-function-return-type
                  "%
                  | optional,
                "@typescript-eslint/explicit-member-accessibility"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                accessibility | js2n.Always | optional,
                                ignoredMethodNames | Array String | optional,
                                overrides
                                  | {
                                    accessors | js2n.Always | optional,
                                    constructors | js2n.Always | optional,
                                    methods | js2n.Always | optional,
                                    parameterProperties
                                      | js2n.Always
                                      | optional,
                                    properties | js2n.Always | optional,
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require explicit accessibility modifiers on class properties and methods
                    https://typescript-eslint.io/rules/explicit-member-accessibility
                  "%
                  | optional,
                "@typescript-eslint/explicit-module-boundary-types"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowArgumentsExplicitlyTypedAsAny
                                  | Bool
                                  | doc "Whether to ignore arguments that are explicitly typed as `any`."
                                  | optional,
                                allowDirectConstAssertionInArrowFunctions
                                  | Bool
                                  | doc m%"
                                    Whether to ignore return type annotations on body-less arrow functions that return an `as const` type assertion.
                                    You must still type the parameters of the function.
                                  "%
                                  | optional,
                                allowHigherOrderFunctions
                                  | Bool
                                  | doc m%"
                                    Whether to ignore return type annotations on functions immediately returning another function expression.
                                    You must still type the parameters of the function.
                                  "%
                                  | optional,
                                allowTypedFunctionExpressions
                                  | Bool
                                  | doc "Whether to ignore type annotations on the variable of a function expression."
                                  | optional,
                                allowedNames
                                  | Array String
                                  | doc "An array of function/method names that will not have their arguments or return values checked."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require explicit return and argument types on exported functions' and classes' public class methods
                    https://typescript-eslint.io/rules/explicit-module-boundary-types
                  "%
                  | optional,
                "@typescript-eslint/func-call-spacing"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow spacing between function identifiers and their invocations
                    https://typescript-eslint.io/rules/func-call-spacing
                  "%
                  | optional,
                "@typescript-eslint/indent"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent indentation
                    https://typescript-eslint.io/rules/indent
                  "%
                  | optional,
                "@typescript-eslint/init-declarations"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow initialization in variable declarations
                    https://typescript-eslint.io/rules/init-declarations
                  "%
                  | optional,
                "@typescript-eslint/key-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing between property names and type annotations in types and interfaces
                    https://typescript-eslint.io/rules/key-spacing
                  "%
                  | optional,
                "@typescript-eslint/keyword-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                overrides
                                  | {
                                    abstract
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    as
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    async
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    await
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    boolean
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    break
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    byte
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    case
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    catch
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    char
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    class
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    const
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    continue
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    debugger
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "default"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    delete
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    do
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    double
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "else"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    enum
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    export
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    extends
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "false"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    final
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    finally
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    float
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    for
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    from
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    function
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    get
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    goto
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "if"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    implements
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "import"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "in"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    instanceof
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    int
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    interface
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "let"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    long
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    native
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    new
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "null"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    of
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    package
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    private
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    protected
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    public
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    return
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    set
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    short
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    static
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    super
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    switch
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    synchronized
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    this
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    throw
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    throws
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    transient
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "true"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    try
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    type
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    typeof
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    var
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    void
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    volatile
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    while
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    with
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    yield
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before and after keywords
                    https://typescript-eslint.io/rules/keyword-spacing
                  "%
                  | optional,
                "@typescript-eslint/lines-around-comment"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                afterBlockComment | Bool | optional,
                                afterLineComment | Bool | optional,
                                allowArrayEnd | Bool | optional,
                                allowArrayStart | Bool | optional,
                                allowBlockEnd | Bool | optional,
                                allowBlockStart | Bool | optional,
                                allowClassEnd | Bool | optional,
                                allowClassStart | Bool | optional,
                                allowEnumEnd | Bool | optional,
                                allowEnumStart | Bool | optional,
                                allowInterfaceEnd | Bool | optional,
                                allowInterfaceStart | Bool | optional,
                                allowModuleEnd | Bool | optional,
                                allowModuleStart | Bool | optional,
                                allowObjectEnd | Bool | optional,
                                allowObjectStart | Bool | optional,
                                allowTypeEnd | Bool | optional,
                                allowTypeStart | Bool | optional,
                                applyDefaultIgnorePatterns | Bool | optional,
                                beforeBlockComment | Bool | optional,
                                beforeLineComment | Bool | optional,
                                ignorePattern | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require empty lines around comments
                    https://typescript-eslint.io/rules/lines-around-comment
                  "%
                  | optional,
                "@typescript-eslint/lines-between-class-members"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require or disallow an empty line between class members
                    https://typescript-eslint.io/rules/lines-between-class-members
                  "%
                  | optional,
                "@typescript-eslint/max-params"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                countVoidThis | Bool | optional,
                                max
                                  | std.number.Integer
                                  | js2n.number.Minimum 0
                                  | optional,
                                maximum
                                  | std.number.Integer
                                  | js2n.number.Minimum 0
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a maximum number of parameters in function definitions
                    https://typescript-eslint.io/rules/max-params
                  "%
                  | optional,
                "@typescript-eslint/member-delimiter-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                multiline
                                  | {
                                    delimiter | js2n.Always | optional,
                                    requireLast | Bool | optional,
                                  }
                                  | optional,
                                multilineDetection
                                  | std.enum.TagOrString
                                  | [| 'last-member, 'brackets |]
                                  | optional,
                                overrides
                                  | {
                                    interface | js2n.Always | optional,
                                    typeLiteral | js2n.Always | optional,
                                  }
                                  | optional,
                                singleline
                                  | {
                                    delimiter | js2n.Always | optional,
                                    requireLast | Bool | optional,
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require a specific member delimiter style for interfaces and type literals
                    https://typescript-eslint.io/rules/member-delimiter-style
                  "%
                  | optional,
                "@typescript-eslint/member-ordering"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                classExpressions | js2n.Always | optional,
                                classes | js2n.Always | optional,
                                "default" | js2n.Always | optional,
                                interfaces | js2n.Always | optional,
                                typeLiterals | js2n.Always | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require a consistent member declaration order
                    https://typescript-eslint.io/rules/member-ordering
                  "%
                  | optional,
                "@typescript-eslint/method-signature-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce using a particular method signature syntax
                    https://typescript-eslint.io/rules/method-signature-style
                  "%
                  | optional,
                "@typescript-eslint/naming-convention"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce naming conventions for everything across a codebase
                    https://typescript-eslint.io/rules/naming-convention
                  "%
                  | optional,
                "@typescript-eslint/no-array-constructor"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow generic `Array` constructors
                    https://typescript-eslint.io/rules/no-array-constructor
                  "%
                  | optional,
                "@typescript-eslint/no-array-delete"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow using the `delete` operator on array values
                    https://typescript-eslint.io/rules/no-array-delete
                  "%
                  | optional,
                "@typescript-eslint/no-base-to-string"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoredTypeNames | Array String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require `.toString()` to only be called on objects which provide useful information when stringified
                    https://typescript-eslint.io/rules/no-base-to-string
                  "%
                  | optional,
                "@typescript-eslint/no-confusing-non-null-assertion"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow non-null assertion in locations that may be confusing
                    https://typescript-eslint.io/rules/no-confusing-non-null-assertion
                  "%
                  | optional,
                "@typescript-eslint/no-confusing-void-expression"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreArrowShorthand | Bool | optional,
                                ignoreVoidOperator | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require expressions of type void to appear in statement position
                    https://typescript-eslint.io/rules/no-confusing-void-expression
                  "%
                  | optional,
                "@typescript-eslint/no-dupe-class-members"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow duplicate class members
                    https://typescript-eslint.io/rules/no-dupe-class-members
                  "%
                  | optional,
                "@typescript-eslint/no-duplicate-enum-values"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow duplicate enum member values
                    https://typescript-eslint.io/rules/no-duplicate-enum-values
                  "%
                  | optional,
                "@typescript-eslint/no-duplicate-type-constituents"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreIntersections | Bool | optional,
                                ignoreUnions | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow duplicate constituents of union or intersection types
                    https://typescript-eslint.io/rules/no-duplicate-type-constituents
                  "%
                  | optional,
                "@typescript-eslint/no-dynamic-delete"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow using the `delete` operator on computed key expressions
                    https://typescript-eslint.io/rules/no-dynamic-delete
                  "%
                  | optional,
                "@typescript-eslint/no-empty-function"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'overrideMethods,
                                          'decoratedFunctions,
                                          'asyncMethods,
                                          'asyncFunctions,
                                          'protected-constructors,
                                          'private-constructors,
                                          'constructors,
                                          'setters,
                                          'getters,
                                          'generatorMethods,
                                          'methods,
                                          'generatorFunctions,
                                          'arrowFunctions,
                                          'functions
                                        |]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow empty functions
                    https://typescript-eslint.io/rules/no-empty-function
                  "%
                  | optional,
                "@typescript-eslint/no-empty-interface"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowSingleExtends | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the declaration of empty interfaces
                    https://typescript-eslint.io/rules/no-empty-interface
                  "%
                  | optional,
                "@typescript-eslint/no-explicit-any"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                fixToUnknown
                                  | Bool
                                  | doc "Whether to enable auto-fixing in which the `any` type is converted to the `unknown` type."
                                  | optional,
                                ignoreRestArgs
                                  | Bool
                                  | doc "Whether to ignore rest parameter arrays."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the `any` type
                    https://typescript-eslint.io/rules/no-explicit-any
                  "%
                  | optional,
                "@typescript-eslint/no-extra-non-null-assertion"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow extra non-null assertions
                    https://typescript-eslint.io/rules/no-extra-non-null-assertion
                  "%
                  | optional,
                "@typescript-eslint/no-extra-parens"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary parentheses
                    https://typescript-eslint.io/rules/no-extra-parens
                  "%
                  | optional,
                "@typescript-eslint/no-extra-semi"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary semicolons
                    https://typescript-eslint.io/rules/no-extra-semi
                  "%
                  | optional,
                "@typescript-eslint/no-extraneous-class"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowConstructorOnly
                                  | Bool
                                  | doc "Whether to allow extraneous classes that contain only a constructor."
                                  | optional,
                                allowEmpty
                                  | Bool
                                  | doc "Whether to allow extraneous classes that have no body (i.e. are empty)."
                                  | optional,
                                allowStaticOnly
                                  | Bool
                                  | doc "Whether to allow extraneous classes that only contain static members."
                                  | optional,
                                allowWithDecorator
                                  | Bool
                                  | doc "Whether to allow extraneous classes that include a decorator."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow classes used as namespaces
                    https://typescript-eslint.io/rules/no-extraneous-class
                  "%
                  | optional,
                "@typescript-eslint/no-floating-promises"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowForKnownSafePromises
                                  | Array (
                                    js2n.OneOf
                                      [
                                        String,
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'file |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                  path = String,
                                                },
                                            required =
                                              { from = true, name = true, },
                                          },
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'lib |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                },
                                            required =
                                              { from = true, name = true, },
                                          },
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'package |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                  package = String,
                                                },
                                            required =
                                              {
                                                  from = true,
                                                  name = true,
                                                  package = true,
                                                },
                                          }
                                      ]
                                  )
                                  | optional,
                                ignoreIIFE
                                  | Bool
                                  | doc "Whether to ignore async IIFEs (Immediately Invoked Function Expressions)."
                                  | optional,
                                ignoreVoid
                                  | Bool
                                  | doc "Whether to ignore `void` expressions."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require Promise-like statements to be handled appropriately
                    https://typescript-eslint.io/rules/no-floating-promises
                  "%
                  | optional,
                "@typescript-eslint/no-for-in-array"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow iterating over an array with a for-in loop
                    https://typescript-eslint.io/rules/no-for-in-array
                  "%
                  | optional,
                "@typescript-eslint/no-implied-eval"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow the use of `eval()`-like methods
                    https://typescript-eslint.io/rules/no-implied-eval
                  "%
                  | optional,
                "@typescript-eslint/no-import-type-side-effects"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers
                    https://typescript-eslint.io/rules/no-import-type-side-effects
                  "%
                  | optional,
                "@typescript-eslint/no-inferrable-types"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreParameters | Bool | optional,
                                ignoreProperties | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean
                    https://typescript-eslint.io/rules/no-inferrable-types
                  "%
                  | optional,
                "@typescript-eslint/no-invalid-this"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { capIsConstructor | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow `this` keywords outside of classes or class-like objects
                    https://typescript-eslint.io/rules/no-invalid-this
                  "%
                  | optional,
                "@typescript-eslint/no-invalid-void-type"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAsThisParameter | Bool | optional,
                                allowInGenericTypeArguments
                                  | std.contract.any_of
                                    [
                                      Bool,
                                      std.contract.Sequence
                                        [ js2n.array.MinItems 1, Array String ]
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow `void` type outside of generic or return types
                    https://typescript-eslint.io/rules/no-invalid-void-type
                  "%
                  | optional,
                "@typescript-eslint/no-loop-func"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow function declarations that contain unsafe references inside loop statements
                    https://typescript-eslint.io/rules/no-loop-func
                  "%
                  | optional,
                "@typescript-eslint/no-loss-of-precision"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow literal numbers that lose precision
                    https://typescript-eslint.io/rules/no-loss-of-precision
                  "%
                  | optional,
                "@typescript-eslint/no-magic-numbers"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                detectObjects | Bool | optional,
                                enforceConst | Bool | optional,
                                ignore
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.any_of
                                      [
                                        Number,
                                        js2n.string.Matches
                                          "^[+-]?(?:0|[1-9][0-9]*)n$"
                                      ]
                                  )
                                  | optional,
                                ignoreArrayIndexes | Bool | optional,
                                ignoreClassFieldInitialValues | Bool | optional,
                                ignoreDefaultValues | Bool | optional,
                                ignoreEnums | Bool | optional,
                                ignoreNumericLiteralTypes | Bool | optional,
                                ignoreReadonlyClassProperties | Bool | optional,
                                ignoreTypeIndexes | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow magic numbers
                    https://typescript-eslint.io/rules/no-magic-numbers
                  "%
                  | optional,
                "@typescript-eslint/no-meaningless-void-operator"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkNever | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the `void` operator except when used to discard a value
                    https://typescript-eslint.io/rules/no-meaningless-void-operator
                  "%
                  | optional,
                "@typescript-eslint/no-misused-new"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce valid definition of `new` and `constructor`
                    https://typescript-eslint.io/rules/no-misused-new
                  "%
                  | optional,
                "@typescript-eslint/no-misused-promises"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                checksConditionals | Bool | optional,
                                checksSpreads | Bool | optional,
                                checksVoidReturn
                                  | std.contract.any_of
                                    [
                                      Bool,
                                      {
                                        arguments | Bool | optional,
                                        attributes | Bool | optional,
                                        properties | Bool | optional,
                                        returns | Bool | optional,
                                        variables | Bool | optional,
                                      }
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow Promises in places not designed to handle them
                    https://typescript-eslint.io/rules/no-misused-promises
                  "%
                  | optional,
                "@typescript-eslint/no-mixed-enums"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow enums from having both number and string members
                    https://typescript-eslint.io/rules/no-mixed-enums
                  "%
                  | optional,
                "@typescript-eslint/no-namespace"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowDeclarations
                                  | Bool
                                  | doc "Whether to allow `declare` with custom TypeScript namespaces."
                                  | optional,
                                allowDefinitionFiles
                                  | Bool
                                  | doc "Whether to allow `declare` with custom TypeScript namespaces inside definition files."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow TypeScript namespaces
                    https://typescript-eslint.io/rules/no-namespace
                  "%
                  | optional,
                "@typescript-eslint/no-non-null-asserted-nullish-coalescing"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow non-null assertions in the left operand of a nullish coalescing operator
                    https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing
                  "%
                  | optional,
                "@typescript-eslint/no-non-null-asserted-optional-chain"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow non-null assertions after an optional chain expression
                    https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain
                  "%
                  | optional,
                "@typescript-eslint/no-non-null-assertion"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow non-null assertions using the `!` postfix operator
                    https://typescript-eslint.io/rules/no-non-null-assertion
                  "%
                  | optional,
                "@typescript-eslint/no-redeclare"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                builtinGlobals | Bool | optional,
                                ignoreDeclarationMerge | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow variable redeclaration
                    https://typescript-eslint.io/rules/no-redeclare
                  "%
                  | optional,
                "@typescript-eslint/no-redundant-type-constituents"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow members of unions and intersections that do nothing or override type information
                    https://typescript-eslint.io/rules/no-redundant-type-constituents
                  "%
                  | optional,
                "@typescript-eslint/no-require-imports"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | Array String
                                  | doc "Patterns of import paths to allow requiring from."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow invocation of `require()`
                    https://typescript-eslint.io/rules/no-require-imports
                  "%
                  | optional,
                "@typescript-eslint/no-restricted-imports"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow specified modules when loaded by `import`
                    https://typescript-eslint.io/rules/no-restricted-imports
                  "%
                  | optional,
                "@typescript-eslint/no-shadow"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow | Array String | optional,
                                builtinGlobals | Bool | optional,
                                hoist
                                  | std.enum.TagOrString
                                  | [| 'never, 'functions, 'all |]
                                  | optional,
                                ignoreFunctionTypeParameterNameValueShadow
                                  | Bool
                                  | optional,
                                ignoreOnInitialization | Bool | optional,
                                ignoreTypeValueShadow | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow variable declarations from shadowing variables declared in the outer scope
                    https://typescript-eslint.io/rules/no-shadow
                  "%
                  | optional,
                "@typescript-eslint/no-this-alias"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowDestructuring
                                  | Bool
                                  | doc "Whether to ignore destructurings, such as `const { props, state } = this`."
                                  | optional,
                                allowedNames
                                  | Array String
                                  | doc "Names to ignore, such as [\"self\"] for `const self = this;`."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow aliasing `this`
                    https://typescript-eslint.io/rules/no-this-alias
                  "%
                  | optional,
                "@typescript-eslint/no-throw-literal"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowThrowingAny | Bool | optional,
                                allowThrowingUnknown | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow throwing literals as exceptions
                    https://typescript-eslint.io/rules/no-throw-literal
                  "%
                  | optional,
                "@typescript-eslint/no-type-alias"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAliases
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow direct one-to-one type aliases."
                                  | optional,
                                allowCallbacks
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases for callbacks."
                                  | optional,
                                allowConditionalTypes
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases for conditional types."
                                  | optional,
                                allowConstructors
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases with constructors."
                                  | optional,
                                allowGenerics
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases with generic types."
                                  | optional,
                                allowLiterals
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases with object literal types."
                                  | optional,
                                allowMappedTypes
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases with mapped types."
                                  | optional,
                                allowTupleTypes
                                  | std.contract.any_of
                                    [
                                      js2n.Null,
                                      Bool,
                                      Number,
                                      String,
                                      { _ | Dyn },
                                      Array Dyn
                                    ]
                                  | doc "Whether to allow type aliases with tuple types."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow type aliases
                    https://typescript-eslint.io/rules/no-type-alias
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-boolean-literal-compare"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowComparingNullableBooleansToFalse
                                  | Bool
                                  | doc "Whether to allow comparisons between nullable boolean variables and `false`."
                                  | optional,
                                allowComparingNullableBooleansToTrue
                                  | Bool
                                  | doc "Whether to allow comparisons between nullable boolean variables and `true`."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow unnecessary equality comparisons against boolean literals
                    https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-condition"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowConstantLoopConditions
                                  | Bool
                                  | doc "Whether to ignore constant loop conditions, such as `while (true)`."
                                  | optional,
                                allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                  | Bool
                                  | doc "Whether to not error when running with a tsconfig that has strictNullChecks turned."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow conditionals where the type is always truthy or always falsy
                    https://typescript-eslint.io/rules/no-unnecessary-condition
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-qualifier"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary namespace qualifiers
                    https://typescript-eslint.io/rules/no-unnecessary-qualifier
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-template-expression"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary template expressions
                    https://typescript-eslint.io/rules/no-unnecessary-template-expression
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-type-arguments"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow type arguments that are equal to the default
                    https://typescript-eslint.io/rules/no-unnecessary-type-arguments
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-type-assertion"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                typesToIgnore
                                  | Array String
                                  | doc "A list of type names to ignore."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow type assertions that do not change the type of an expression
                    https://typescript-eslint.io/rules/no-unnecessary-type-assertion
                  "%
                  | optional,
                "@typescript-eslint/no-unnecessary-type-constraint"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary constraints on generic types
                    https://typescript-eslint.io/rules/no-unnecessary-type-constraint
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-argument"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow calling a function with a value with type `any`
                    https://typescript-eslint.io/rules/no-unsafe-argument
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-assignment"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow assigning a value with type `any` to variables and properties
                    https://typescript-eslint.io/rules/no-unsafe-assignment
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-call"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow calling a value with type `any`
                    https://typescript-eslint.io/rules/no-unsafe-call
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-declaration-merging"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unsafe declaration merging
                    https://typescript-eslint.io/rules/no-unsafe-declaration-merging
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-enum-comparison"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow comparing an enum value with a non-enum value
                    https://typescript-eslint.io/rules/no-unsafe-enum-comparison
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-member-access"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow member access on a value with type `any`
                    https://typescript-eslint.io/rules/no-unsafe-member-access
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-return"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow returning a value with type `any` from a function
                    https://typescript-eslint.io/rules/no-unsafe-return
                  "%
                  | optional,
                "@typescript-eslint/no-unsafe-unary-minus"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require unary negation to take a number
                    https://typescript-eslint.io/rules/no-unsafe-unary-minus
                  "%
                  | optional,
                "@typescript-eslint/no-unused-expressions"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowShortCircuit | Bool | optional,
                                allowTaggedTemplates | Bool | optional,
                                allowTernary | Bool | optional,
                                enforceForJSX | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow unused expressions
                    https://typescript-eslint.io/rules/no-unused-expressions
                  "%
                  | optional,
                "@typescript-eslint/no-unused-vars"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow unused variables
                    https://typescript-eslint.io/rules/no-unused-vars
                  "%
                  | optional,
                "@typescript-eslint/no-use-before-define"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the use of variables before they are defined
                    https://typescript-eslint.io/rules/no-use-before-define
                  "%
                  | optional,
                "@typescript-eslint/no-useless-constructor"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary constructors
                    https://typescript-eslint.io/rules/no-useless-constructor
                  "%
                  | optional,
                "@typescript-eslint/no-useless-empty-export"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow empty exports that don't change anything in a module file
                    https://typescript-eslint.io/rules/no-useless-empty-export
                  "%
                  | optional,
                "@typescript-eslint/no-useless-template-literals"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary template expressions
                    https://typescript-eslint.io/rules/no-useless-template-literals
                  "%
                  | optional,
                "@typescript-eslint/no-var-requires"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | Array String
                                  | doc "Patterns of import paths to allow requiring from."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow `require` statements except in import statements
                    https://typescript-eslint.io/rules/no-var-requires
                  "%
                  | optional,
                "@typescript-eslint/non-nullable-type-assertion-style"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce non-null assertions over explicit type casts
                    https://typescript-eslint.io/rules/non-nullable-type-assertion-style
                  "%
                  | optional,
                "@typescript-eslint/object-curly-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing inside braces
                    https://typescript-eslint.io/rules/object-curly-spacing
                  "%
                  | optional,
                "@typescript-eslint/only-throw-error"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowThrowingAny | Bool | optional,
                                allowThrowingUnknown | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow throwing non-`Error` values as exceptions
                    https://typescript-eslint.io/rules/only-throw-error
                  "%
                  | optional,
                "@typescript-eslint/padding-line-between-statements"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow padding lines between statements
                    https://typescript-eslint.io/rules/padding-line-between-statements
                  "%
                  | optional,
                "@typescript-eslint/parameter-properties"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow | Array js2n.Always | optional,
                                prefer
                                  | std.enum.TagOrString
                                  | [| 'parameter-property, 'class-property |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require or disallow parameter properties in class constructors
                    https://typescript-eslint.io/rules/parameter-properties
                  "%
                  | optional,
                "@typescript-eslint/prefer-as-const"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of `as const` over literal type
                    https://typescript-eslint.io/rules/prefer-as-const
                  "%
                  | optional,
                "@typescript-eslint/prefer-destructuring"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require destructuring from arrays and/or objects
                    https://typescript-eslint.io/rules/prefer-destructuring
                  "%
                  | optional,
                "@typescript-eslint/prefer-enum-initializers"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require each enum member value to be explicitly initialized
                    https://typescript-eslint.io/rules/prefer-enum-initializers
                  "%
                  | optional,
                "@typescript-eslint/prefer-find"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result
                    https://typescript-eslint.io/rules/prefer-find
                  "%
                  | optional,
                "@typescript-eslint/prefer-for-of"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of `for-of` loop over the standard `for` loop where possible
                    https://typescript-eslint.io/rules/prefer-for-of
                  "%
                  | optional,
                "@typescript-eslint/prefer-function-type"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using function types instead of interfaces with call signatures
                    https://typescript-eslint.io/rules/prefer-function-type
                  "%
                  | optional,
                "@typescript-eslint/prefer-includes"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce `includes` method over `indexOf` method
                    https://typescript-eslint.io/rules/prefer-includes
                  "%
                  | optional,
                "@typescript-eslint/prefer-literal-enum-member"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowBitwiseExpressions | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require all enum members to be literal values
                    https://typescript-eslint.io/rules/prefer-literal-enum-member
                  "%
                  | optional,
                "@typescript-eslint/prefer-namespace-keyword"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules
                    https://typescript-eslint.io/rules/prefer-namespace-keyword
                  "%
                  | optional,
                "@typescript-eslint/prefer-nullish-coalescing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                  | Bool
                                  | optional,
                                ignoreConditionalTests | Bool | optional,
                                ignoreMixedLogicalExpressions | Bool | optional,
                                ignorePrimitives
                                  | std.contract.any_of
                                    [
                                      {
                                        bigint | Bool | optional,
                                        boolean | Bool | optional,
                                        number | Bool | optional,
                                        string | Bool | optional,
                                        ..
                                      },
                                      js2n.Enum [ true ]
                                    ]
                                  | optional,
                                ignoreTernaryTests | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce using the nullish coalescing operator instead of logical assignments or chaining
                    https://typescript-eslint.io/rules/prefer-nullish-coalescing
                  "%
                  | optional,
                "@typescript-eslint/prefer-optional-chain"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowPotentiallyUnsafeFixesThatModifyTheReturnTypeIKnowWhatImDoing
                                  | Bool
                                  | doc "Allow autofixers that will change the return type of the expression. This option is considered unsafe as it may break the build."
                                  | optional,
                                checkAny
                                  | Bool
                                  | doc "Check operands that are typed as `any` when inspecting \"loose boolean\" operands."
                                  | optional,
                                checkBigInt
                                  | Bool
                                  | doc "Check operands that are typed as `bigint` when inspecting \"loose boolean\" operands."
                                  | optional,
                                checkBoolean
                                  | Bool
                                  | doc "Check operands that are typed as `boolean` when inspecting \"loose boolean\" operands."
                                  | optional,
                                checkNumber
                                  | Bool
                                  | doc "Check operands that are typed as `number` when inspecting \"loose boolean\" operands."
                                  | optional,
                                checkString
                                  | Bool
                                  | doc "Check operands that are typed as `string` when inspecting \"loose boolean\" operands."
                                  | optional,
                                checkUnknown
                                  | Bool
                                  | doc "Check operands that are typed as `unknown` when inspecting \"loose boolean\" operands."
                                  | optional,
                                requireNullish
                                  | Bool
                                  | doc "Skip operands that are not typed with `null` and/or `undefined` when inspecting \"loose boolean\" operands."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects
                    https://typescript-eslint.io/rules/prefer-optional-chain
                  "%
                  | optional,
                "@typescript-eslint/prefer-promise-reject-errors"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowEmptyReject | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require using Error objects as Promise rejection reasons
                    https://typescript-eslint.io/rules/prefer-promise-reject-errors
                  "%
                  | optional,
                "@typescript-eslint/prefer-readonly"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { onlyInlineLambdas | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require private members to be marked as `readonly` if they're never modified outside of the constructor
                    https://typescript-eslint.io/rules/prefer-readonly
                  "%
                  | optional,
                "@typescript-eslint/prefer-readonly-parameter-types"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | Array (
                                    js2n.OneOf
                                      [
                                        String,
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'file |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                  path = String,
                                                },
                                            required =
                                              { from = true, name = true, },
                                          },
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'lib |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                },
                                            required =
                                              { from = true, name = true, },
                                          },
                                        js2n.record.Record
                                          {
                                            additional = 'None,
                                            patterns = {},
                                            properties =
                                              {
                                                  from =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [| 'package |]
                                                        ],
                                                  name =
                                                    std.contract.any_of
                                                        [
                                                          String,
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]
                                                        ],
                                                  package = String,
                                                },
                                            required =
                                              {
                                                  from = true,
                                                  name = true,
                                                  package = true,
                                                },
                                          }
                                      ]
                                  )
                                  | optional,
                                checkParameterProperties | Bool | optional,
                                ignoreInferredTypes | Bool | optional,
                                treatMethodsAsReadonly | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs
                    https://typescript-eslint.io/rules/prefer-readonly-parameter-types
                  "%
                  | optional,
                "@typescript-eslint/prefer-reduce-type-parameter"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using type parameter when calling `Array#reduce` instead of casting
                    https://typescript-eslint.io/rules/prefer-reduce-type-parameter
                  "%
                  | optional,
                "@typescript-eslint/prefer-regexp-exec"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce `RegExp#exec` over `String#match` if no global flag is provided
                    https://typescript-eslint.io/rules/prefer-regexp-exec
                  "%
                  | optional,
                "@typescript-eslint/prefer-return-this-type"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce that `this` is used when only `this` type is returned
                    https://typescript-eslint.io/rules/prefer-return-this-type
                  "%
                  | optional,
                "@typescript-eslint/prefer-string-starts-ends-with"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowSingleElementEquality
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | doc "Whether to allow equality checks against the first or last element of a string."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings
                    https://typescript-eslint.io/rules/prefer-string-starts-ends-with
                  "%
                  | optional,
                "@typescript-eslint/prefer-ts-expect-error"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using `@ts-expect-error` over `@ts-ignore`
                    https://typescript-eslint.io/rules/prefer-ts-expect-error
                  "%
                  | optional,
                "@typescript-eslint/promise-function-async"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAny
                                  | Bool
                                  | doc "Whether to consider `any` and `unknown` to be Promises."
                                  | optional,
                                allowedPromiseNames
                                  | Array String
                                  | doc "Any extra names of classes or interfaces to be considered Promises."
                                  | optional,
                                checkArrowFunctions | Bool | optional,
                                checkFunctionDeclarations | Bool | optional,
                                checkFunctionExpressions | Bool | optional,
                                checkMethodDeclarations | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require any function or method that returns a Promise to be marked async
                    https://typescript-eslint.io/rules/promise-function-async
                  "%
                  | optional,
                "@typescript-eslint/quotes"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 3,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              std.contract.Sequence
                                [
                                  std.enum.TagOrString,
                                  [| 'backtick, 'single, 'double |]
                                ],
                              {
                                allowTemplateLiterals
                                  | Bool
                                  | doc "allows strings to use backticks"
                                  | optional,
                                avoid-escape
                                  | Bool
                                  | doc "Deprecated: The object property avoid-escape is deprecated; please use the object property avoidEscape instead."
                                  | optional,
                                avoidEscape
                                  | Bool
                                  | doc "allows strings to use single-quotes or double-quotes so long as the string contains a quote that would have to be escaped otherwise"
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce the consistent use of either backticks, double, or single quotes
                    https://typescript-eslint.io/rules/quotes
                  "%
                  | optional,
                "@typescript-eslint/require-array-sort-compare"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreStringArrays
                                  | Bool
                                  | doc "Whether to ignore arrays in which all elements are strings."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require `Array#sort` and `Array#toSorted` calls to always provide a `compareFunction`
                    https://typescript-eslint.io/rules/require-array-sort-compare
                  "%
                  | optional,
                "@typescript-eslint/require-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow async functions which do not return promises and have no `await` expression
                    https://typescript-eslint.io/rules/require-await
                  "%
                  | optional,
                "@typescript-eslint/restrict-plus-operands"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAny
                                  | Bool
                                  | doc "Whether to allow `any` typed values."
                                  | optional,
                                allowBoolean
                                  | Bool
                                  | doc "Whether to allow `boolean` typed values."
                                  | optional,
                                allowNullish
                                  | Bool
                                  | doc "Whether to allow potentially `null` or `undefined` typed values."
                                  | optional,
                                allowNumberAndString
                                  | Bool
                                  | doc "Whether to allow `bigint`/`number` typed values and `string` typed values to be added together."
                                  | optional,
                                allowRegExp
                                  | Bool
                                  | doc "Whether to allow `regexp` typed values."
                                  | optional,
                                skipCompoundAssignments
                                  | Bool
                                  | doc "Whether to skip compound assignments such as `+=`."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require both operands of addition to be the same type and be `bigint`, `number`, or `string`
                    https://typescript-eslint.io/rules/restrict-plus-operands
                  "%
                  | optional,
                "@typescript-eslint/restrict-template-expressions"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAny
                                  | Bool
                                  | doc "Whether to allow `any` typed values in template expressions."
                                  | optional,
                                allowArray
                                  | Bool
                                  | doc "Whether to allow `array` typed values in template expressions."
                                  | optional,
                                allowBoolean
                                  | Bool
                                  | doc "Whether to allow `boolean` typed values in template expressions."
                                  | optional,
                                allowNever
                                  | Bool
                                  | doc "Whether to allow `never` typed values in template expressions."
                                  | optional,
                                allowNullish
                                  | Bool
                                  | doc "Whether to allow `nullish` typed values in template expressions."
                                  | optional,
                                allowNumber
                                  | Bool
                                  | doc "Whether to allow `number` typed values in template expressions."
                                  | optional,
                                allowRegExp
                                  | Bool
                                  | doc "Whether to allow `regexp` typed values in template expressions."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce template literal expressions to be of `string` type
                    https://typescript-eslint.io/rules/restrict-template-expressions
                  "%
                  | optional,
                "@typescript-eslint/return-await"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              js2n.OneOf
                                [
                                  js2n.Const "never",
                                  js2n.Const "error-handling-correctness-only",
                                  js2n.Const "in-try-catch",
                                  js2n.Const "always"
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent awaiting of returned promises
                    https://typescript-eslint.io/rules/return-await
                  "%
                  | optional,
                "@typescript-eslint/semi"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow semicolons instead of ASI
                    https://typescript-eslint.io/rules/semi
                  "%
                  | optional,
                "@typescript-eslint/sort-type-constituents"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                caseSensitive
                                  | Bool
                                  | doc "Whether to sort using case sensitive sorting."
                                  | optional,
                                checkIntersections
                                  | Bool
                                  | doc "Whether to check intersection types."
                                  | optional,
                                checkUnions
                                  | Bool
                                  | doc "Whether to check union types."
                                  | optional,
                                groupOrder
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'union,
                                          'tuple,
                                          'operator,
                                          'object,
                                          'named,
                                          'literal,
                                          'nullish,
                                          'keyword,
                                          'intersection,
                                          '"import",
                                          'function,
                                          'conditional
                                        |]
                                      ]
                                  )
                                  | doc "Ordering of the groups."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce constituents of a type union/intersection to be sorted alphabetically
                    https://typescript-eslint.io/rules/sort-type-constituents
                  "%
                  | optional,
                "@typescript-eslint/space-before-blocks"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before blocks
                    https://typescript-eslint.io/rules/space-before-blocks
                  "%
                  | optional,
                "@typescript-eslint/space-before-function-paren"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before function parenthesis
                    https://typescript-eslint.io/rules/space-before-function-paren
                  "%
                  | optional,
                "@typescript-eslint/space-infix-ops"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { int32Hint | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require spacing around infix operators
                    https://typescript-eslint.io/rules/space-infix-ops
                  "%
                  | optional,
                "@typescript-eslint/strict-boolean-expressions"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAny | Bool | optional,
                                allowNullableBoolean | Bool | optional,
                                allowNullableEnum | Bool | optional,
                                allowNullableNumber | Bool | optional,
                                allowNullableObject | Bool | optional,
                                allowNullableString | Bool | optional,
                                allowNumber | Bool | optional,
                                allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                  | Bool
                                  | optional,
                                allowString | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow certain types in boolean expressions
                    https://typescript-eslint.io/rules/strict-boolean-expressions
                  "%
                  | optional,
                "@typescript-eslint/switch-exhaustiveness-check"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowDefaultCaseForExhaustiveSwitch
                                  | Bool
                                  | doc "If 'true', allow 'default' cases on switch statements with exhaustive cases."
                                  | optional,
                                requireDefaultForNonUnion
                                  | Bool
                                  | doc "If 'true', require a 'default' clause for switches on non-union types."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require switch-case statements to be exhaustive
                    https://typescript-eslint.io/rules/switch-exhaustiveness-check
                  "%
                  | optional,
                "@typescript-eslint/triple-slash-reference"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                lib
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                path
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                types
                                  | std.enum.TagOrString
                                  | [| 'prefer-import, 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow certain triple slash directives in favor of ES6-style import declarations
                    https://typescript-eslint.io/rules/triple-slash-reference
                  "%
                  | optional,
                "@typescript-eslint/type-annotation-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                overrides
                                  | {
                                    arrow | js2n.Always | optional,
                                    colon | js2n.Always | optional,
                                    parameter | js2n.Always | optional,
                                    property | js2n.Always | optional,
                                    returnType | js2n.Always | optional,
                                    variable | js2n.Always | optional,
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require consistent spacing around type annotations
                    https://typescript-eslint.io/rules/type-annotation-spacing
                  "%
                  | optional,
                "@typescript-eslint/typedef"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                arrayDestructuring | Bool | optional,
                                arrowParameter | Bool | optional,
                                memberVariableDeclaration | Bool | optional,
                                objectDestructuring | Bool | optional,
                                parameter | Bool | optional,
                                propertyDeclaration | Bool | optional,
                                variableDeclaration | Bool | optional,
                                variableDeclarationIgnoreFunction
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require type annotations in certain places
                    https://typescript-eslint.io/rules/typedef
                  "%
                  | optional,
                "@typescript-eslint/unbound-method"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreStatic
                                  | Bool
                                  | doc "Whether to skip checking whether `static` methods are correctly bound."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce unbound methods are called with their expected scope
                    https://typescript-eslint.io/rules/unbound-method
                  "%
                  | optional,
                "@typescript-eslint/unified-signatures"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreDifferentlyNamedParameters
                                  | Bool
                                  | doc "Whether two parameters with different names at the same index should be considered different even if their types are the same."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow two overloads that could be unified into one with a union or an optional/rest parameter
                    https://typescript-eslint.io/rules/unified-signatures
                  "%
                  | optional,
                "@typescript-eslint/use-unknown-in-catch-callback-variable"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce typing arguments in `.catch()` callbacks as `unknown`
                    https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable
                  "%
                  | optional,
                "eslint-plugin-import/consistent-type-specifier-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce or ban the use of inline type-only markers for named imports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/consistent-type-specifier-style.md
                  "%
                  | optional,
                "eslint-plugin-import/default"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensure a default export is present, given a default import.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/default.md
                  "%
                  | optional,
                "eslint-plugin-import/dynamic-import-chunkname"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                importFunctions
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                webpackChunknameFormat | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a leading comment with the webpackChunkName for dynamic imports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/dynamic-import-chunkname.md
                  "%
                  | optional,
                "eslint-plugin-import/export"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid any invalid exports, i.e. re-export of the same name.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/export.md
                  "%
                  | optional,
                "eslint-plugin-import/exports-last"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensure all exports appear after other statements.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/exports-last.md
                  "%
                  | optional,
                "eslint-plugin-import/extensions"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Ensure consistent use of file extension within the import path.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/extensions.md
                  "%
                  | optional,
                "eslint-plugin-import/first"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensure all imports appear before other statements.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/first.md
                  "%
                  | optional,
                "eslint-plugin-import/group-exports"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer named exports to be grouped together in a single export declaration
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/group-exports.md
                  "%
                  | optional,
                "eslint-plugin-import/imports-first"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Replaced by `import/first`.
                    https://github.com/import-js/eslint-plugin-import/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md
                  "%
                  | optional,
                "eslint-plugin-import/max-dependencies"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreTypeImports | Bool | optional,
                                max | Number | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce the maximum number of dependencies a module can have.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/max-dependencies.md
                  "%
                  | optional,
                "eslint-plugin-import/named"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { commonjs | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensure named imports correspond to a named export in the remote file.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/named.md
                  "%
                  | optional,
                "eslint-plugin-import/namespace"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowComputed
                                  | Bool
                                  | doc "If `false`, will report computed (and thus, un-lintable) references to namespace members."
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensure imported namespaces contain dereferenced properties as they are dereferenced.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/namespace.md
                  "%
                  | optional,
                "eslint-plugin-import/newline-after-import"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                considerComments | Bool | optional,
                                count
                                  | std.number.Integer
                                  | js2n.number.Minimum 1
                                  | optional,
                                exactCount | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a newline after import statements.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/newline-after-import.md
                  "%
                  | optional,
                "eslint-plugin-import/no-absolute-path"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                amd | Bool | optional,
                                commonjs | Bool | optional,
                                esmodule | Bool | optional,
                                ignore
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid import of modules using absolute paths.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-absolute-path.md
                  "%
                  | optional,
                "eslint-plugin-import/no-amd"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid AMD `require` and `define` calls.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-amd.md
                  "%
                  | optional,
                "eslint-plugin-import/no-anonymous-default-export"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAnonymousClass
                                  | Bool
                                  | doc "If `false`, will report default export of an anonymous class"
                                  | optional,
                                allowAnonymousFunction
                                  | Bool
                                  | doc "If `false`, will report default export of an anonymous function"
                                  | optional,
                                allowArray
                                  | Bool
                                  | doc "If `false`, will report default export of an array"
                                  | optional,
                                allowArrowFunction
                                  | Bool
                                  | doc "If `false`, will report default export of an arrow function"
                                  | optional,
                                allowCallExpression
                                  | Bool
                                  | doc "If `false`, will report default export of a function call"
                                  | optional,
                                allowLiteral
                                  | Bool
                                  | doc "If `false`, will report default export of a literal"
                                  | optional,
                                allowNew
                                  | Bool
                                  | doc "If `false`, will report default export of a class instantiation"
                                  | optional,
                                allowObject
                                  | Bool
                                  | doc "If `false`, will report default export of an object expression"
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid anonymous values as default exports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-anonymous-default-export.md
                  "%
                  | optional,
                "eslint-plugin-import/no-commonjs"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid CommonJS `require` calls and `module.exports` or `exports.*`.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-commonjs.md
                  "%
                  | optional,
                "eslint-plugin-import/no-cycle"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowUnsafeDynamicCyclicDependency
                                  | Bool
                                  | doc "Allow cyclic dependency if there is at least one dynamic import in the chain"
                                  | optional,
                                amd | Bool | optional,
                                commonjs | Bool | optional,
                                esmodule | Bool | optional,
                                ignore
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ignoreExternal
                                  | Bool
                                  | doc "ignore external modules"
                                  | optional,
                                maxDepth
                                  | std.contract.any_of
                                    [
                                      std.contract.Sequence
                                        [
                                          std.number.Integer,
                                          js2n.number.Minimum 1
                                        ],
                                      std.contract.Sequence
                                        [ std.enum.TagOrString, [| '"∞" |] ]
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid a module from importing a module with a dependency path back to itself.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-cycle.md
                  "%
                  | optional,
                "eslint-plugin-import/no-default-export"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid default exports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-default-export.md
                  "%
                  | optional,
                "eslint-plugin-import/no-deprecated"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid imported names marked with `@deprecated` documentation tag.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-deprecated.md
                  "%
                  | optional,
                "eslint-plugin-import/no-duplicates"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                considerQueryString | Bool | optional,
                                prefer-inline | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid repeated import of the same module in multiple places.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-duplicates.md
                  "%
                  | optional,
                "eslint-plugin-import/no-dynamic-require"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { esmodule | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid `require()` calls with expressions.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-dynamic-require.md
                  "%
                  | optional,
                "eslint-plugin-import/no-empty-named-blocks"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid empty named import blocks.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-empty-named-blocks.md
                  "%
                  | optional,
                "eslint-plugin-import/no-extraneous-dependencies"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                bundledDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                devDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                includeInternal | Bool | optional,
                                includeTypes | Bool | optional,
                                optionalDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                packageDir
                                  | std.contract.any_of
                                    [ String, Array js2n.Always ]
                                  | optional,
                                peerDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid the use of extraneous packages.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-extraneous-dependencies.md
                  "%
                  | optional,
                "eslint-plugin-import/no-import-module-exports"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { exceptions | Array Dyn | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid import statements with CommonJS module.exports.
                    
                  "%
                  | optional,
                "eslint-plugin-import/no-internal-modules"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid importing the submodules of other modules.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-internal-modules.md
                  "%
                  | optional,
                "eslint-plugin-import/no-mutable-exports"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid the use of mutable exports with `var` or `let`.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-mutable-exports.md
                  "%
                  | optional,
                "eslint-plugin-import/no-named-as-default"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid use of exported name as identifier of default export.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default.md
                  "%
                  | optional,
                "eslint-plugin-import/no-named-as-default-member"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid use of exported name as property of default export.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default-member.md
                  "%
                  | optional,
                "eslint-plugin-import/no-named-default"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid named default exports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-default.md
                  "%
                  | optional,
                "eslint-plugin-import/no-named-export"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid named exports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-export.md
                  "%
                  | optional,
                "eslint-plugin-import/no-namespace"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignore
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid namespace (a.k.a. "wildcard" `*`) imports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-namespace.md
                  "%
                  | optional,
                "eslint-plugin-import/no-nodejs-modules"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid Node.js builtin modules.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-nodejs-modules.md
                  "%
                  | optional,
                "eslint-plugin-import/no-relative-packages"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                amd | Bool | optional,
                                commonjs | Bool | optional,
                                esmodule | Bool | optional,
                                ignore
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid importing packages through relative paths.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-relative-packages.md
                  "%
                  | optional,
                "eslint-plugin-import/no-relative-parent-imports"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                amd | Bool | optional,
                                commonjs | Bool | optional,
                                esmodule | Bool | optional,
                                ignore
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid importing modules from parent directories.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-relative-parent-imports.md
                  "%
                  | optional,
                "eslint-plugin-import/no-restricted-paths"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                basePath | String | optional,
                                zones
                                  | js2n.array.MinItems 1
                                  | Array
                                    {
                                      except
                                        | js2n.array.UniqueItems
                                        | Array String
                                        | optional,
                                      from
                                        | std.contract.any_of
                                          [
                                            String,
                                            std.contract.Sequence
                                              [
                                                js2n.array.MinItems 1,
                                                js2n.array.UniqueItems,
                                                Array String
                                              ]
                                          ]
                                        | optional,
                                      message | String | optional,
                                      target
                                        | std.contract.any_of
                                          [
                                            String,
                                            std.contract.Sequence
                                              [
                                                js2n.array.MinItems 1,
                                                js2n.array.UniqueItems,
                                                Array String
                                              ]
                                          ]
                                        | optional,
                                    }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce which files can be imported in a given folder.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-restricted-paths.md
                  "%
                  | optional,
                "eslint-plugin-import/no-self-import"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid a module from importing itself.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-self-import.md
                  "%
                  | optional,
                "eslint-plugin-import/no-unassigned-import"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow | Array String | optional,
                                devDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                optionalDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                peerDependencies
                                  | std.contract.any_of
                                    [ Bool, Array js2n.Always ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid unassigned imports
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unassigned-import.md
                  "%
                  | optional,
                "eslint-plugin-import/no-unresolved"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                amd | Bool | optional,
                                caseSensitive | Bool | optional,
                                caseSensitiveStrict | Bool | optional,
                                commonjs | Bool | optional,
                                esmodule | Bool | optional,
                                ignore
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Ensure imports point to a file/module that can be resolved.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unresolved.md
                  "%
                  | optional,
                "eslint-plugin-import/no-unused-modules"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreExports
                                  | js2n.array.UniqueItems
                                  | Array (js2n.string.MinLength 1)
                                  | doc "files/paths for which unused exports will not be reported (e.g module entry points)"
                                  | optional,
                                missingExports
                                  | Bool
                                  | doc "report modules without any exports"
                                  | optional,
                                src
                                  | js2n.array.UniqueItems
                                  | Array (js2n.string.MinLength 1)
                                  | doc "files/paths to be analyzed (only for unused exports)"
                                  | optional,
                                unusedExports
                                  | Bool
                                  | doc "report exports without any usage"
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid modules without exports, or exports without matching import in another module.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unused-modules.md
                  "%
                  | optional,
                "eslint-plugin-import/no-useless-path-segments"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                commonjs | Bool | optional,
                                noUselessIndex | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Forbid unnecessary path segments in import and require statements.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-useless-path-segments.md
                  "%
                  | optional,
                "eslint-plugin-import/no-webpack-loader-syntax"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid webpack loader syntax in imports.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-webpack-loader-syntax.md
                  "%
                  | optional,
                "eslint-plugin-import/order"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                alphabetize
                                  | {
                                    caseInsensitive | Bool | optional,
                                    order
                                      | std.enum.TagOrString
                                      | [| 'desc, 'asc, 'ignore |]
                                      | optional,
                                    orderImportKind
                                      | std.enum.TagOrString
                                      | [| 'desc, 'asc, 'ignore |]
                                      | optional,
                                  }
                                  | optional,
                                distinctGroup | Bool | optional,
                                groups | Array Dyn | optional,
                                newlines-between
                                  | std.enum.TagOrString
                                  | [|
                                    'never,
                                    'always-and-inside-groups,
                                    'always,
                                    'ignore
                                  |]
                                  | optional,
                                pathGroups
                                  | Array
                                    {
                                      group
                                        | std.enum.TagOrString
                                        | [|
                                          'type,
                                          'object,
                                          'index,
                                          'sibling,
                                          'parent,
                                          'unknown,
                                          'internal,
                                          'external,
                                          'builtin
                                        |],
                                      pattern | String,
                                      patternOptions | { _ | Dyn } | optional,
                                      position
                                        | std.enum.TagOrString
                                        | [| 'before, 'after |]
                                        | optional,
                                    }
                                  | optional,
                                pathGroupsExcludedImportTypes
                                  | Array Dyn
                                  | optional,
                                warnOnUnassignedImports | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a convention in module import order.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/order.md
                  "%
                  | optional,
                "eslint-plugin-import/prefer-default-export"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                target
                                  | std.enum.TagOrString
                                  | [| 'any, 'single |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer a default export if module exports a single name or multiple names.
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/prefer-default-export.md
                  "%
                  | optional,
                "eslint-plugin-import/unambiguous"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Forbid potentially ambiguous parse goal (`script` vs. `module`).
                    https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/unambiguous.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/better-regex"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { sortCharacterClasses | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Improve regexes by making them shorter, consistent, and safer.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/better-regex.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/catch-error-name"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignore | js2n.array.UniqueItems | optional,
                                name | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a specific parameter name in catch clauses.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/catch-error-name.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/consistent-destructuring"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Use destructured variables over properties.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-destructuring.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/consistent-empty-array-spread"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer consistent types when spreading a ternary in an array literal.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-empty-array-spread.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/consistent-function-scoping"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkArrowFunctions | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Move function definitions to the highest possible scope.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-function-scoping.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/custom-error-definition"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce correct `Error` subclassing.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/custom-error-definition.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/empty-brace-spaces"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce no spaces between braces.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/empty-brace-spaces.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/error-message"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce passing a `message` value when creating a built-in error.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/error-message.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/escape-case"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require escape sequences to use uppercase values.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/escape-case.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/expiring-todo-comments"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowWarningComments | Bool | optional,
                                date | String | optional,
                                ignore | js2n.array.UniqueItems | optional,
                                ignoreDatesOnPullRequests | Bool | optional,
                                terms | Array String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Add expiration conditions to TODO comments.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/expiring-todo-comments.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/explicit-length-check"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                non-zero
                                  | std.enum.TagOrString
                                  | [| 'not-equal, 'greater-than |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce explicitly comparing the `length` or `size` property of a value.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/explicit-length-check.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/filename-case"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce a case style for filenames.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/filename-case.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/import-index"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#import-index
                  "%
                  | optional,
                "eslint-plugin-unicorn/import-style"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce specific import styles per module.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/import-style.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/new-for-builtins"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/new-for-builtins.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-abusive-eslint-disable"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce specifying rules to disable in `eslint-disable` comments.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-abusive-eslint-disable.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-anonymous-default-export"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow anonymous functions and classes as the default export.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-anonymous-default-export.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-callback-reference"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prevent passing a function reference directly to iterator methods.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-callback-reference.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-for-each"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `for…of` over the `forEach` method.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-for-each.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-instanceof"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-array-instanceof
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-method-this-argument"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow using the `this` argument in array methods.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-method-this-argument.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-push-push"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignore | js2n.array.UniqueItems | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce combining multiple `Array#push()` into one call.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-push-push.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-array-reduce"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowSimpleOperations | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow `Array#reduce()` and `Array#reduceRight()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-reduce.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-await-expression-member"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow member access from await expression.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-await-expression-member.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-await-in-promise-methods"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow using `await` in `Promise` method parameters.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-await-in-promise-methods.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-console-spaces"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Do not use leading/trailing space between `console.log` parameters.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-console-spaces.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-document-cookie"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Do not use `document.cookie` directly.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-document-cookie.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-empty-file"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow empty files.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-empty-file.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-fn-reference-in-iterator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-fn-reference-in-iterator
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-for-loop"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Do not use a `for` loop that can be replaced with a `for-of` loop.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-for-loop.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-hex-escape"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of Unicode escapes instead of hexadecimal escapes.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-hex-escape.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-instanceof-array"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require `Array.isArray()` instead of `instanceof Array`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-instanceof-array.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-invalid-fetch-options"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow invalid options in `fetch()` and `new Request()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-invalid-fetch-options.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-invalid-remove-event-listener"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prevent calling `EventTarget#removeEventListener()` with the result of an expression.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-invalid-remove-event-listener.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-keyword-prefix"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                checkProperties | Bool | optional,
                                disallowedPrefixes
                                  | js2n.array.MaxItems 1
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | js2n.array.Items [ String ] js2n.Always
                                  | optional,
                                onlyCamelCase | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow identifiers starting with `new` or `class`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-keyword-prefix.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-lonely-if"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow `if` statements as the only statement in `if` blocks without `else`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-lonely-if.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-magic-array-flat-depth"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow a magic number as the `depth` argument in `Array#flat(…).`
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-magic-array-flat-depth.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-negated-condition"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow negated conditions.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-negated-condition.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-negation-in-equality-check"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow negated expression in equality check.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-negation-in-equality-check.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-nested-ternary"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow nested ternary expressions.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-nested-ternary.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-new-array"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow `new Array()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-new-array.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-new-buffer"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-new-buffer.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-null"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkStrictEquality | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the use of the `null` literal.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-null.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-object-as-default-parameter"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow the use of objects as default parameters.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-object-as-default-parameter.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-process-exit"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow `process.exit()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-process-exit.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-reduce"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-reduce
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-single-promise-in-promise-methods"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow passing single-element arrays to `Promise` methods.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-single-promise-in-promise-methods.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-static-only-class"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow classes that only have static members.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-static-only-class.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-thenable"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow `then` property.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-thenable.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-this-assignment"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow assigning `this` to a variable.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-this-assignment.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-typeof-undefined"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkGlobalVariables | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow comparing `undefined` using `typeof`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-typeof-undefined.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unnecessary-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow awaiting non-promise values.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unnecessary-await.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unnecessary-polyfills"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                targets
                                  | std.contract.any_of
                                    [ { _ | Dyn }, Array Dyn, String ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce the use of built-in methods instead of unnecessary polyfills.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unnecessary-polyfills.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unreadable-array-destructuring"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unreadable array destructuring.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unreadable-array-destructuring.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unreadable-iife"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unreadable IIFEs.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unreadable-iife.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unsafe-regex"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-unsafe-regex
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-unused-properties"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unused object properties.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unused-properties.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-fallback-in-spread"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow useless fallback when spreading in object literals.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-fallback-in-spread.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-length-check"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow useless array length check.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-length-check.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-promise-resolve-reject"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-promise-resolve-reject.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-spread"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary spread.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-spread.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-switch-case"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow useless case in switch statements.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-switch-case.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-useless-undefined"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                checkArguments | Bool | optional,
                                checkArrowFunctionBody | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow useless `undefined`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-undefined.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/no-zero-fractions"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow number literals with zero fractions or dangling dots.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-zero-fractions.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/number-literal-case"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce proper case for numeric literals.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/number-literal-case.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/numeric-separators-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                binary
                                  | {
                                    groupLength
                                      | std.number.Integer
                                      | js2n.number.Minimum 1
                                      | optional,
                                    minimumDigits
                                      | std.number.Integer
                                      | js2n.number.Minimum 0
                                      | optional,
                                    onlyIfContainsSeparator | Bool | optional,
                                  }
                                  | optional,
                                hexadecimal
                                  | {
                                    groupLength
                                      | std.number.Integer
                                      | js2n.number.Minimum 1
                                      | optional,
                                    minimumDigits
                                      | std.number.Integer
                                      | js2n.number.Minimum 0
                                      | optional,
                                    onlyIfContainsSeparator | Bool | optional,
                                  }
                                  | optional,
                                number
                                  | {
                                    groupLength
                                      | std.number.Integer
                                      | js2n.number.Minimum 1
                                      | optional,
                                    minimumDigits
                                      | std.number.Integer
                                      | js2n.number.Minimum 0
                                      | optional,
                                    onlyIfContainsSeparator | Bool | optional,
                                  }
                                  | optional,
                                octal
                                  | {
                                    groupLength
                                      | std.number.Integer
                                      | js2n.number.Minimum 1
                                      | optional,
                                    minimumDigits
                                      | std.number.Integer
                                      | js2n.number.Minimum 0
                                      | optional,
                                    onlyIfContainsSeparator | Bool | optional,
                                  }
                                  | optional,
                                onlyIfContainsSeparator | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce the style of numeric separators by correctly grouping digits.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/numeric-separators-style.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-add-event-listener"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                excludedPackages
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-add-event-listener.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-array-find"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkFromLast | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `.find(…)` and `.findLast(…)` over the first or last element from `.filter(…)`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-find.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-array-flat"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                functions | js2n.array.UniqueItems | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `Array#flat()` over legacy techniques to flatten arrays.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-flat.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-array-flat-map"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.flatMap(…)` over `.map(…).flat()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-flat-map.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-array-index-of"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()` when looking for the index of an item.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-index-of.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-array-some"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.some(…)` over `.filter(…).length` check and `.{find,findLast,findIndex,findLastIndex}(…)`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-some.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-at"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                checkAllIndexAccess | Bool | optional,
                                getLastElementFunctions
                                  | js2n.array.UniqueItems
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `.at()` method for index access and `String#charAt()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-at.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-blob-reading-methods"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Blob#arrayBuffer()` over `FileReader#readAsArrayBuffer(…)` and `Blob#text()` over `FileReader#readAsText(…)`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-blob-reading-methods.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-code-point"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-code-point.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-dataset"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-dataset
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-date-now"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-date-now.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-default-parameters"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer default parameters over reassignment.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-default-parameters.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-dom-node-append"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Node#append()` over `Node#appendChild()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-append.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-dom-node-dataset"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using `.dataset` on DOM elements over calling attribute methods.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-dataset.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-dom-node-remove"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-remove.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-dom-node-text-content"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.textContent` over `.innerText`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-text-content.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-event-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-event-key
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-event-target"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `EventTarget` over `EventEmitter`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-event-target.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-exponentiation-operator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-exponentiation-operator
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-export-from"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoreUsedVariables | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `export…from` when re-exporting.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-export-from.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-flat-map"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-flat-map
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-includes"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.includes()` over `.indexOf()`, `.lastIndexOf()`, and `Array#some()` when checking for existence or non-existence.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-includes.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-json-parse-buffer"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer reading a JSON file as a buffer.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-json-parse-buffer.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-keyboard-event-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-keyboard-event-key.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-logical-operator-over-ternary"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using a logical operator over a ternary.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-logical-operator-over-ternary.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-math-trunc"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce the use of `Math.trunc` instead of bitwise operators.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-math-trunc.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-modern-dom-apis"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-modern-dom-apis.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-modern-math-apis"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer modern `Math` APIs over legacy patterns.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-modern-math-apis.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-module"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer JavaScript modules (ESM) over CommonJS.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-module.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-native-coercion-functions"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-native-coercion-functions.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-negative-index"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer negative index over `.length - index` when possible.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-negative-index.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-node-append"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-node-append
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-node-protocol"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using the `node:` protocol when importing Node.js builtin modules.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-node-protocol.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-node-remove"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-node-remove
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-number-properties"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                checkInfinity | Bool | optional,
                                checkNaN | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `Number` static properties over global ones.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-number-properties.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-object-from-entries"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                functions | js2n.array.UniqueItems | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer using `Object.fromEntries(…)` to transform a list of key-value pairs into an object.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-object-from-entries.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-object-has-own"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-object-has-own
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-optional-catch-binding"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer omitting the `catch` binding parameter.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-optional-catch-binding.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-prototype-methods"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer borrowing methods from the prototype instead of the instance.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-prototype-methods.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-query-selector"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-query-selector.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-reflect-apply"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Reflect.apply()` over `Function#apply()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-reflect-apply.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-regexp-test"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-regexp-test.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-replace-all"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-replace-all
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-set-has"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-set-has.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-set-size"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using `Set#size` instead of `Array#length`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-set-size.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-spread"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer the spread operator over `Array.from(…)`, `Array#concat(…)`, `Array#{slice,toSpliced}()` and `String#split('')`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-spread.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-starts-ends-with"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-starts-ends-with
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-string-raw"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer using the `String.raw` tag to avoid escaping `\`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-raw.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-string-replace-all"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `String#replaceAll()` over regex searches with the global flag.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-replace-all.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-string-slice"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `String#slice()` over `String#substr()` and `String#substring()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-slice.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-string-starts-ends-with"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-starts-ends-with.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-string-trim-start-end"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-trim-start-end.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-structured-clone"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                functions | js2n.array.UniqueItems | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer using `structuredClone` to create a deep clone.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-structured-clone.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-switch"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                emptyDefaultCase
                                  | std.enum.TagOrString
                                  | [|
                                    'no-default-case,
                                    'do-nothing-comment,
                                    'no-default-comment
                                  |]
                                  | optional,
                                minimumCases
                                  | std.number.Integer
                                  | js2n.number.Minimum 2
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer `switch` over multiple `else-if`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-switch.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-ternary"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Prefer ternary expressions over simple `if-else` statements.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-ternary.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-text-content"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-text-content
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-top-level-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prefer top-level await over top-level promises and async function calls.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-top-level-await.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-trim-start-end"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-trim-start-end
                  "%
                  | optional,
                "eslint-plugin-unicorn/prefer-type-error"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce throwing `TypeError` in type checking conditions.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-type-error.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/prevent-abbreviations"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Prevent abbreviations.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prevent-abbreviations.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/regex-shorthand"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#regex-shorthand
                  "%
                  | optional,
                "eslint-plugin-unicorn/relative-url-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent relative URL style.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/relative-url-style.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/require-array-join-separator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using the separator argument with `Array#join()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-array-join-separator.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/require-number-to-fixed-digits-argument"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using the digits argument with `Number#toFixed()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-number-to-fixed-digits-argument.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/require-post-message-target-origin"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce using the `targetOrigin` argument with `window.postMessage()`.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-post-message-target-origin.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/string-content"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                patterns
                                  | {
                                    _ | std.contract.any_of
                                      [
                                        String,
                                        {
                                          fix | Bool | optional,
                                          message | String | optional,
                                          suggest | String,
                                        }
                                      ]
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce better string content.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/string-content.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/switch-case-braces"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent brace style for `case` clauses.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/switch-case-braces.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/template-indent"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                comments
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                functions
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                indent
                                  | std.contract.any_of
                                    [
                                      js2n.string.Matches "^\\s+$",
                                      std.contract.Sequence
                                        [
                                          std.number.Integer,
                                          js2n.number.Minimum 1
                                        ]
                                    ]
                                  | optional,
                                selectors
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                tags
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Fix whitespace-insensitive template indentation.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/template-indent.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/text-encoding-identifier-case"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce consistent case for text encoding identifiers.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/text-encoding-identifier-case.md
                  "%
                  | optional,
                "eslint-plugin-unicorn/throw-new-error"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require `new` when creating an error.
                    https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/throw-new-error.md
                  "%
                  | optional,
                "eslint-plugin-vue/array-bracket-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce linebreaks after opening and before closing array brackets in `<template>`
                    https://eslint.vuejs.org/rules/array-bracket-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/array-bracket-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing inside array brackets in `<template>`
                    https://eslint.vuejs.org/rules/array-bracket-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/array-element-newline"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Enforce line breaks after each array element in `<template>`
                    https://eslint.vuejs.org/rules/array-element-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/arrow-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before and after the arrow in arrow functions in `<template>`
                    https://eslint.vuejs.org/rules/arrow-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/attribute-hyphenation"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce attribute naming style on custom components in template
                    https://eslint.vuejs.org/rules/attribute-hyphenation.html
                  "%
                  | optional,
                "eslint-plugin-vue/attributes-order"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                alphabetical | Bool | optional,
                                order
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.any_of
                                      [
                                        std.contract.Sequence
                                          [
                                            std.enum.TagOrString,
                                            [|
                                              'CONTENT,
                                              'EVENTS,
                                              'ATTR_SHORTHAND_BOOL,
                                              'ATTR_DYNAMIC,
                                              'ATTR_STATIC,
                                              'OTHER_ATTR,
                                              'OTHER_DIRECTIVES,
                                              'TWO_WAY_BINDING,
                                              'SLOT,
                                              'UNIQUE,
                                              'GLOBAL,
                                              'RENDER_MODIFIERS,
                                              'CONDITIONALS,
                                              'LIST_RENDERING,
                                              'DEFINITION
                                            |]
                                          ],
                                        Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'CONTENT,
                                                'EVENTS,
                                                'ATTR_SHORTHAND_BOOL,
                                                'ATTR_DYNAMIC,
                                                'ATTR_STATIC,
                                                'OTHER_ATTR,
                                                'OTHER_DIRECTIVES,
                                                'TWO_WAY_BINDING,
                                                'SLOT,
                                                'UNIQUE,
                                                'GLOBAL,
                                                'RENDER_MODIFIERS,
                                                'CONDITIONALS,
                                                'LIST_RENDERING,
                                                'DEFINITION
                                              |]
                                            ]
                                        )
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce order of attributes
                    https://eslint.vuejs.org/rules/attributes-order.html
                  "%
                  | optional,
                "eslint-plugin-vue/block-lang"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow use other than available `lang`
                    https://eslint.vuejs.org/rules/block-lang.html
                  "%
                  | optional,
                "eslint-plugin-vue/block-order"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                order
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.any_of
                                      [
                                        String,
                                        std.contract.Sequence
                                          [
                                            js2n.array.UniqueItems,
                                            Array String
                                          ]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce order of component top-level elements
                    https://eslint.vuejs.org/rules/block-order.html
                  "%
                  | optional,
                "eslint-plugin-vue/block-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow or enforce spaces inside of blocks after opening block and before closing block in `<template>`
                    https://eslint.vuejs.org/rules/block-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/block-tag-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                blocks
                                  | {
                                    _ | {
                                      maxEmptyLines
                                        | js2n.number.Minimum 0
                                        | optional,
                                      multiline
                                        | std.enum.TagOrString
                                        | [|
                                          'ignore,
                                          'consistent,
                                          'never,
                                          'always
                                        |]
                                        | optional,
                                      singleline
                                        | std.enum.TagOrString
                                        | [|
                                          'ignore,
                                          'consistent,
                                          'never,
                                          'always
                                        |]
                                        | optional,
                                    }
                                  }
                                  | js2n.record.FieldsMatch "^(?:\\S+)$"
                                  | optional,
                                maxEmptyLines
                                  | js2n.number.Minimum 0
                                  | optional,
                                multiline
                                  | std.enum.TagOrString
                                  | [| 'ignore, 'consistent, 'never, 'always |]
                                  | optional,
                                singleline
                                  | std.enum.TagOrString
                                  | [| 'ignore, 'consistent, 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce line breaks after opening and before closing block-level tags
                    https://eslint.vuejs.org/rules/block-tag-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/brace-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent brace style for blocks in `<template>`
                    https://eslint.vuejs.org/rules/brace-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/camelcase"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.MinItems 0
                                  | js2n.array.UniqueItems
                                  | js2n.array.Items [ String ] js2n.Always
                                  | optional,
                                ignoreDestructuring | Bool | optional,
                                ignoreGlobals | Bool | optional,
                                ignoreImports | Bool | optional,
                                properties
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce camelcase naming convention in `<template>`
                    https://eslint.vuejs.org/rules/camelcase.html
                  "%
                  | optional,
                "eslint-plugin-vue/comma-dangle"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow trailing commas in `<template>`
                    https://eslint.vuejs.org/rules/comma-dangle.html
                  "%
                  | optional,
                "eslint-plugin-vue/comma-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before and after commas in `<template>`
                    https://eslint.vuejs.org/rules/comma-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/comma-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent comma style in `<template>`
                    https://eslint.vuejs.org/rules/comma-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/comment-directive"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                reportUnusedDisableDirectives | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    support comment-directives in `<template>`
                    https://eslint.vuejs.org/rules/comment-directive.html
                  "%
                  | optional,
                "eslint-plugin-vue/component-api-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce component API style
                    https://eslint.vuejs.org/rules/component-api-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/component-definition-name-casing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce specific casing for component definition name
                    https://eslint.vuejs.org/rules/component-definition-name-casing.html
                  "%
                  | optional,
                "eslint-plugin-vue/component-name-in-template-casing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce specific casing for the component naming style in template
                    https://eslint.vuejs.org/rules/component-name-in-template-casing.html
                  "%
                  | optional,
                "eslint-plugin-vue/component-options-name-casing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce the casing of component name in `components` options
                    https://eslint.vuejs.org/rules/component-options-name-casing.html
                  "%
                  | optional,
                "eslint-plugin-vue/component-tags-order"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                order
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.any_of
                                      [
                                        String,
                                        std.contract.Sequence
                                          [
                                            js2n.array.UniqueItems,
                                            Array String
                                          ]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce order of component top-level elements
                    https://eslint.vuejs.org/rules/component-tags-order.html
                  "%
                  | optional,
                "eslint-plugin-vue/custom-event-name-casing"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce specific casing for custom event name
                    https://eslint.vuejs.org/rules/custom-event-name-casing.html
                  "%
                  | optional,
                "eslint-plugin-vue/define-emits-declaration"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce declaration style of `defineEmits`
                    https://eslint.vuejs.org/rules/define-emits-declaration.html
                  "%
                  | optional,
                "eslint-plugin-vue/define-macros-order"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                defineExposeLast | Bool | optional,
                                order
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'defineModel,
                                          'defineSlots,
                                          'defineOptions,
                                          'defineProps,
                                          'defineEmits
                                        |]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce order of `defineEmits` and `defineProps` compiler macros
                    https://eslint.vuejs.org/rules/define-macros-order.html
                  "%
                  | optional,
                "eslint-plugin-vue/define-props-declaration"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce declaration style of `defineProps`
                    https://eslint.vuejs.org/rules/define-props-declaration.html
                  "%
                  | optional,
                "eslint-plugin-vue/dot-location"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent newlines before and after dots in `<template>`
                    https://eslint.vuejs.org/rules/dot-location.html
                  "%
                  | optional,
                "eslint-plugin-vue/dot-notation"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowKeywords | Bool | optional,
                                allowPattern | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce dot notation whenever possible in `<template>`
                    https://eslint.vuejs.org/rules/dot-notation.html
                  "%
                  | optional,
                "eslint-plugin-vue/enforce-style-attribute"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [| 'module, 'scoped, 'plain |]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce or forbid the use of the `scoped` and `module` attributes in SFC top level style tags
                    https://eslint.vuejs.org/rules/enforce-style-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/eqeqeq"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require the use of `===` and `!==` in `<template>`
                    https://eslint.vuejs.org/rules/eqeqeq.html
                  "%
                  | optional,
                "eslint-plugin-vue/first-attribute-linebreak"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                multiline
                                  | std.enum.TagOrString
                                  | [| 'ignore, 'beside, 'below |]
                                  | optional,
                                singleline
                                  | std.enum.TagOrString
                                  | [| 'ignore, 'beside, 'below |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce the location of first attribute
                    https://eslint.vuejs.org/rules/first-attribute-linebreak.html
                  "%
                  | optional,
                "eslint-plugin-vue/func-call-spacing"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow spacing between function identifiers and their invocations in `<template>`
                    https://eslint.vuejs.org/rules/func-call-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-button-has-type"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                button | Bool | optional,
                                reset | Bool | optional,
                                submit | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow usage of button without an explicit type attribute
                    https://eslint.vuejs.org/rules/html-button-has-type.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-closing-bracket-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                multiline
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                selfClosingTag
                                  | js2n.record.MinProperties 1
                                  | {
                                    multiline
                                      | std.enum.TagOrString
                                      | [| 'never, 'always |]
                                      | optional,
                                    singleline
                                      | std.enum.TagOrString
                                      | [| 'never, 'always |]
                                      | optional,
                                  }
                                  | optional,
                                singleline
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require or disallow a line break before tag's closing brackets
                    https://eslint.vuejs.org/rules/html-closing-bracket-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-closing-bracket-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                endTag
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                selfClosingTag
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                startTag
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require or disallow a space before tag's closing brackets
                    https://eslint.vuejs.org/rules/html-closing-bracket-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-comment-content-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce unified line brake in HTML comments
                    https://eslint.vuejs.org/rules/html-comment-content-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-comment-content-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce unified spacing in HTML comments
                    https://eslint.vuejs.org/rules/html-comment-content-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-comment-indent"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce consistent indentation in HTML comments
                    https://eslint.vuejs.org/rules/html-comment-indent.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-end-tags"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce end tag style
                    https://eslint.vuejs.org/rules/html-end-tags.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-indent"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce consistent indentation in `<template>`
                    https://eslint.vuejs.org/rules/html-indent.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-quotes"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce quotes style of HTML attributes
                    https://eslint.vuejs.org/rules/html-quotes.html
                  "%
                  | optional,
                "eslint-plugin-vue/html-self-closing"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce self-closing style
                    https://eslint.vuejs.org/rules/html-self-closing.html
                  "%
                  | optional,
                "eslint-plugin-vue/jsx-uses-vars"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    prevent variables used in JSX to be marked as unused
                    https://eslint.vuejs.org/rules/jsx-uses-vars.html
                  "%
                  | optional,
                "eslint-plugin-vue/key-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing between keys and values in object literal properties in `<template>`
                    https://eslint.vuejs.org/rules/key-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/keyword-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                after | Bool | optional,
                                before | Bool | optional,
                                overrides
                                  | {
                                    abstract
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    as
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    async
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    await
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    boolean
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    break
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    byte
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    case
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    catch
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    char
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    class
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    const
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    continue
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    debugger
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "default"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    delete
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    do
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    double
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "else"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    enum
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    export
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    extends
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "false"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    final
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    finally
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    float
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    for
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    from
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    function
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    get
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    goto
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "if"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    implements
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "import"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "in"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    instanceof
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    int
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    interface
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "let"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    long
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    native
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    new
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "null"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    of
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    package
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    private
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    protected
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    public
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    return
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    set
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    short
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    static
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    super
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    switch
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    synchronized
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    this
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    throw
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    throws
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    transient
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    "true"
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    try
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    typeof
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    var
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    void
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    volatile
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    while
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    with
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                    yield
                                      | {
                                        after | Bool | optional,
                                        before | Bool | optional,
                                      }
                                      | optional,
                                  }
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before and after keywords in `<template>`
                    https://eslint.vuejs.org/rules/keyword-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/match-component-file-name"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                extensions
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                shouldMatchCase | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require component name property to match its file name
                    https://eslint.vuejs.org/rules/match-component-file-name.html
                  "%
                  | optional,
                "eslint-plugin-vue/match-component-import-name"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require the registered component name to match the imported component name
                    https://eslint.vuejs.org/rules/match-component-import-name.html
                  "%
                  | optional,
                "eslint-plugin-vue/max-attributes-per-line"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                multiline
                                  | std.contract.any_of
                                    [
                                      js2n.number.Minimum 1,
                                      {
                                        max | js2n.number.Minimum 1 | optional,
                                      }
                                    ]
                                  | optional,
                                singleline
                                  | std.contract.any_of
                                    [
                                      js2n.number.Minimum 1,
                                      {
                                        max | js2n.number.Minimum 1 | optional,
                                      }
                                    ]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce the maximum number of attributes per line
                    https://eslint.vuejs.org/rules/max-attributes-per-line.html
                  "%
                  | optional,
                "eslint-plugin-vue/max-len"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce a maximum line length in `.vue` files
                    https://eslint.vuejs.org/rules/max-len.html
                  "%
                  | optional,
                "eslint-plugin-vue/max-lines-per-block"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                script
                                  | std.number.Integer
                                  | js2n.number.Minimum 1
                                  | optional,
                                skipBlankLines | Bool | optional,
                                style
                                  | std.number.Integer
                                  | js2n.number.Minimum 1
                                  | optional,
                                template
                                  | std.number.Integer
                                  | js2n.number.Minimum 1
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce maximum number of lines in Vue SFC blocks
                    https://eslint.vuejs.org/rules/max-lines-per-block.html
                  "%
                  | optional,
                "eslint-plugin-vue/multi-word-component-names"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignores
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require component names to be always multi-word
                    https://eslint.vuejs.org/rules/multi-word-component-names.html
                  "%
                  | optional,
                "eslint-plugin-vue/multiline-html-element-content-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowEmptyLines | Bool | optional,
                                ignoreWhenEmpty | Bool | optional,
                                ignores
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require a line break before and after the contents of a multiline element
                    https://eslint.vuejs.org/rules/multiline-html-element-content-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/multiline-ternary"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce newlines between operands of ternary expressions in `<template>`
                    https://eslint.vuejs.org/rules/multiline-ternary.html
                  "%
                  | optional,
                "eslint-plugin-vue/mustache-interpolation-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce unified spacing in mustache interpolations
                    https://eslint.vuejs.org/rules/mustache-interpolation-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/new-line-between-multi-line-property"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                minLineOfMultilineProperty
                                  | js2n.number.Minimum 2
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce new lines between multi-line properties in Vue components
                    https://eslint.vuejs.org/rules/new-line-between-multi-line-property.html
                  "%
                  | optional,
                "eslint-plugin-vue/next-tick-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce Promise or callback style in `nextTick`
                    https://eslint.vuejs.org/rules/next-tick-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-arrow-functions-in-watch"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using arrow functions to define watcher
                    https://eslint.vuejs.org/rules/no-arrow-functions-in-watch.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-async-in-computed-properties"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow asynchronous actions in computed properties
                    https://eslint.vuejs.org/rules/no-async-in-computed-properties.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-bare-strings-in-template"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowlist
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                attributes
                                  | {
                                    _ | std.contract.Sequence
                                      [ js2n.array.UniqueItems, Array String ]
                                  }
                                  | js2n.record.FieldsMatch
                                    "^(?:\\S+|/.*/[a-z]*)$"
                                  | optional,
                                directives
                                  | js2n.array.UniqueItems
                                  | Array (js2n.string.Matches "^v-")
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow the use of bare strings in `<template>`
                    https://eslint.vuejs.org/rules/no-bare-strings-in-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-boolean-default"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow boolean defaults
                    https://eslint.vuejs.org/rules/no-boolean-default.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-child-content"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                additionalDirectives
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow element's child contents which would be overwritten by a directive like `v-html` or `v-text`
                    https://eslint.vuejs.org/rules/no-child-content.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-computed-properties-in-data"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow accessing computed properties in `data`.
                    https://eslint.vuejs.org/rules/no-computed-properties-in-data.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-console"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow the use of `console` in `<template>`
                    https://eslint.vuejs.org/rules/no-console.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-constant-condition"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { checkLoops | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow constant expressions in conditions in `<template>`
                    https://eslint.vuejs.org/rules/no-constant-condition.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-custom-modifiers-on-v-model"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow custom modifiers on v-model used on the component
                    https://eslint.vuejs.org/rules/no-custom-modifiers-on-v-model.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-data-object-declaration"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated object declaration on data (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-data-object-declaration.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-destroyed-lifecycle"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `destroyed` and `beforeDestroy` lifecycle hooks (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-destroyed-lifecycle.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-dollar-listeners-api"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `$listeners` (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-dollar-listeners-api.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-dollar-scopedslots-api"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `$scopedSlots` (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-dollar-scopedslots-api.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-events-api"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated events api (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-events-api.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-filter"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated filters syntax (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-filter.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-functional-template"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated the `functional` template (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-functional-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-html-element-is"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated the `is` attribute on HTML elements (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-html-element-is.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-inline-template"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `inline-template` attribute (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-inline-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-model-definition"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowVue3Compat | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow deprecated `model` definition (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-model-definition.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-props-default-this"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow deprecated `this` access in props default function (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-props-default-this.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-router-link-tag-prop"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                components
                                  | js2n.array.MinItems 1
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow using deprecated `tag` property on `RouterLink` (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-router-link-tag-prop.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-scope-attribute"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow deprecated `scope` attribute (in Vue.js 2.5.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-scope-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-slot-attribute"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignore
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow deprecated `slot` attribute (in Vue.js 2.6.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-slot-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-slot-scope-attribute"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow deprecated `slot-scope` attribute (in Vue.js 2.6.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-slot-scope-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-v-bind-sync"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow use of deprecated `.sync` modifier on `v-bind` directive (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-v-bind-sync.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-v-is"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow deprecated `v-is` directive (in Vue.js 3.1.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-v-is.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-v-on-native-modifier"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `.native` modifiers (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-v-on-native-modifier.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-v-on-number-modifiers"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated number (keycode) modifiers (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-v-on-number-modifiers.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-deprecated-vue-config-keycodes"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using deprecated `Vue.config.keyCodes` (in Vue.js 3.0.0+)
                    https://eslint.vuejs.org/rules/no-deprecated-vue-config-keycodes.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-dupe-keys"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { groups | Array Dyn | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow duplication of field names
                    https://eslint.vuejs.org/rules/no-dupe-keys.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-dupe-v-else-if"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow duplicate conditions in `v-if` / `v-else-if` chains
                    https://eslint.vuejs.org/rules/no-dupe-v-else-if.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-duplicate-attr-inheritance"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce `inheritAttrs` to be set to `false` when using `v-bind="$attrs"`
                    https://eslint.vuejs.org/rules/no-duplicate-attr-inheritance.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-duplicate-attributes"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowCoexistClass | Bool | optional,
                                allowCoexistStyle | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow duplication of attributes
                    https://eslint.vuejs.org/rules/no-duplicate-attributes.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-empty-component-block"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow the `<template>` `<script>` `<style>` block to be empty
                    https://eslint.vuejs.org/rules/no-empty-component-block.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-empty-pattern"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowObjectPatternsAsParameters
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Disallow empty destructuring patterns in `<template>`
                    https://eslint.vuejs.org/rules/no-empty-pattern.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-export-in-script-setup"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow `export` in `<script setup>`
                    https://eslint.vuejs.org/rules/no-export-in-script-setup.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-expose-after-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow asynchronously registered `expose`
                    https://eslint.vuejs.org/rules/no-expose-after-await.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-extra-parens"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary parentheses in `<template>`
                    https://eslint.vuejs.org/rules/no-extra-parens.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-invalid-model-keys"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require valid keys in model option
                    https://eslint.vuejs.org/rules/no-invalid-model-keys.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-irregular-whitespace"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                skipComments | Bool | optional,
                                skipHTMLAttributeValues | Bool | optional,
                                skipHTMLTextContents | Bool | optional,
                                skipRegExps | Bool | optional,
                                skipStrings | Bool | optional,
                                skipTemplates | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow irregular whitespace in `.vue` files
                    https://eslint.vuejs.org/rules/no-irregular-whitespace.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-lifecycle-after-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow asynchronously registered lifecycle hooks
                    https://eslint.vuejs.org/rules/no-lifecycle-after-await.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-lone-template"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoreAccessible | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unnecessary `<template>`
                    https://eslint.vuejs.org/rules/no-lone-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-loss-of-precision"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow literal numbers that lose precision in `<template>`
                    https://eslint.vuejs.org/rules/no-loss-of-precision.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-multi-spaces"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoreProperties | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow multiple spaces
                    https://eslint.vuejs.org/rules/no-multi-spaces.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-multiple-objects-in-class"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow to pass multiple objects into array to class
                    https://eslint.vuejs.org/rules/no-multiple-objects-in-class.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-multiple-slot-args"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow to pass multiple arguments to scoped slots
                    https://eslint.vuejs.org/rules/no-multiple-slot-args.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-multiple-template-root"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow adding multiple root nodes to the template
                    https://eslint.vuejs.org/rules/no-multiple-template-root.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-mutating-props"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { shallowOnly | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow mutation of component props
                    https://eslint.vuejs.org/rules/no-mutating-props.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-parsing-error"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                abrupt-closing-of-empty-comment
                                  | Bool
                                  | optional,
                                absence-of-digits-in-numeric-character-reference
                                  | Bool
                                  | optional,
                                cdata-in-html-content | Bool | optional,
                                character-reference-outside-unicode-range
                                  | Bool
                                  | optional,
                                control-character-in-input-stream
                                  | Bool
                                  | optional,
                                control-character-reference | Bool | optional,
                                duplicate-attribute | Bool | optional,
                                end-tag-with-attributes | Bool | optional,
                                end-tag-with-trailing-solidus | Bool | optional,
                                eof-before-tag-name | Bool | optional,
                                eof-in-cdata | Bool | optional,
                                eof-in-comment | Bool | optional,
                                eof-in-tag | Bool | optional,
                                incorrectly-closed-comment | Bool | optional,
                                incorrectly-opened-comment | Bool | optional,
                                invalid-first-character-of-tag-name
                                  | Bool
                                  | optional,
                                missing-attribute-value | Bool | optional,
                                missing-end-tag-name | Bool | optional,
                                missing-semicolon-after-character-reference
                                  | Bool
                                  | optional,
                                missing-whitespace-between-attributes
                                  | Bool
                                  | optional,
                                nested-comment | Bool | optional,
                                non-void-html-element-start-tag-with-trailing-solidus
                                  | Bool
                                  | optional,
                                noncharacter-character-reference
                                  | Bool
                                  | optional,
                                noncharacter-in-input-stream | Bool | optional,
                                null-character-reference | Bool | optional,
                                surrogate-character-reference | Bool | optional,
                                surrogate-in-input-stream | Bool | optional,
                                unexpected-character-in-attribute-name
                                  | Bool
                                  | optional,
                                unexpected-character-in-unquoted-attribute-value
                                  | Bool
                                  | optional,
                                unexpected-equals-sign-before-attribute-name
                                  | Bool
                                  | optional,
                                unexpected-null-character | Bool | optional,
                                unexpected-question-mark-instead-of-tag-name
                                  | Bool
                                  | optional,
                                unexpected-solidus-in-tag | Bool | optional,
                                unknown-named-character-reference
                                  | Bool
                                  | optional,
                                x-invalid-end-tag | Bool | optional,
                                x-invalid-namespace | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow parsing errors in `<template>`
                    https://eslint.vuejs.org/rules/no-parsing-error.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-potential-component-option-typo"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                custom
                                  | js2n.array.MinItems 0
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                presets
                                  | js2n.array.MinItems 0
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [| 'nuxt, 'vue-router, 'vue, 'all |]
                                      ]
                                  )
                                  | optional,
                                threshold | js2n.number.Minimum 1 | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow a potential typo in your component property
                    https://eslint.vuejs.org/rules/no-potential-component-option-typo.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-ref-as-operand"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow use of value wrapped by `ref()` (Composition API) as an operand
                    https://eslint.vuejs.org/rules/no-ref-as-operand.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-ref-object-destructure"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow usages of ref objects that can lead to loss of reactivity
                    https://eslint.vuejs.org/rules/no-ref-object-destructure.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-ref-object-reactivity-loss"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow usages of ref objects that can lead to loss of reactivity
                    https://eslint.vuejs.org/rules/no-ref-object-reactivity-loss.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-required-prop-with-default"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { autofix | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce props with default values to be optional
                    https://eslint.vuejs.org/rules/no-required-prop-with-default.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-reserved-component-names"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                disallowVue3BuiltInComponents | Bool | optional,
                                disallowVueBuiltInComponents | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow the use of reserved names in component definitions
                    https://eslint.vuejs.org/rules/no-reserved-component-names.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-reserved-keys"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                groups | Array Dyn | optional,
                                reserved | Array Dyn | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow overwriting reserved keys
                    https://eslint.vuejs.org/rules/no-reserved-keys.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-reserved-props"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { vueVersion | js2n.Enum [ 2, 3 ] | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow reserved names in props
                    https://eslint.vuejs.org/rules/no-reserved-props.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-block"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific block
                    https://eslint.vuejs.org/rules/no-restricted-block.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-call-after-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow asynchronously called restricted methods
                    https://eslint.vuejs.org/rules/no-restricted-call-after-await.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-class"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific classes in Vue components
                    https://eslint.vuejs.org/rules/no-restricted-class.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-component-names"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific component names
                    https://eslint.vuejs.org/rules/no-restricted-component-names.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-component-options"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific component option
                    https://eslint.vuejs.org/rules/no-restricted-component-options.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-custom-event"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific custom event
                    https://eslint.vuejs.org/rules/no-restricted-custom-event.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-html-elements"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific HTML elements
                    https://eslint.vuejs.org/rules/no-restricted-html-elements.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-props"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific props
                    https://eslint.vuejs.org/rules/no-restricted-props.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-static-attribute"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific attribute
                    https://eslint.vuejs.org/rules/no-restricted-static-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-syntax"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow specified syntax in `<template>`
                    https://eslint.vuejs.org/rules/no-restricted-syntax.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-v-bind"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific argument in `v-bind`
                    https://eslint.vuejs.org/rules/no-restricted-v-bind.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-restricted-v-on"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow specific argument in `v-on`
                    https://eslint.vuejs.org/rules/no-restricted-v-on.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-root-v-if"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow `v-if` directives on root element
                    https://eslint.vuejs.org/rules/no-root-v-if.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-setup-props-destructure"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow usages that lose the reactivity of `props` passed to `setup`
                    https://eslint.vuejs.org/rules/no-setup-props-destructure.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-setup-props-reactivity-loss"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow usages that lose the reactivity of `props` passed to `setup`
                    https://eslint.vuejs.org/rules/no-setup-props-reactivity-loss.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-shared-component-data"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce component's data property to be a function
                    https://eslint.vuejs.org/rules/no-shared-component-data.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-side-effects-in-computed-properties"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow side effects in computed properties
                    https://eslint.vuejs.org/rules/no-side-effects-in-computed-properties.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-spaces-around-equal-signs-in-attribute"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow spaces around equal signs in attribute
                    https://eslint.vuejs.org/rules/no-spaces-around-equal-signs-in-attribute.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-sparse-arrays"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow sparse arrays in `<template>`
                    https://eslint.vuejs.org/rules/no-sparse-arrays.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-static-inline-styles"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowBinding | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow static inline `style` attributes
                    https://eslint.vuejs.org/rules/no-static-inline-styles.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-template-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow `key` attribute on `<template>`
                    https://eslint.vuejs.org/rules/no-template-key.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-template-shadow"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow variable declarations from shadowing variables declared in the outer scope
                    https://eslint.vuejs.org/rules/no-template-shadow.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-template-target-blank"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowReferrer | Bool | optional,
                                enforceDynamicLinks
                                  | std.enum.TagOrString
                                  | [| 'never, 'always |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow target="_blank" attribute without rel="noopener noreferrer"
                    https://eslint.vuejs.org/rules/no-template-target-blank.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-textarea-mustache"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow mustaches in `<textarea>`
                    https://eslint.vuejs.org/rules/no-textarea-mustache.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-this-in-before-route-enter"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow `this` usage in a `beforeRouteEnter` method
                    https://eslint.vuejs.org/rules/no-this-in-before-route-enter.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-undef-components"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignorePatterns | Array Dyn | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow use of undefined components in `<template>`
                    https://eslint.vuejs.org/rules/no-undef-components.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-undef-properties"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignores
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow undefined properties
                    https://eslint.vuejs.org/rules/no-undef-properties.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unsupported-features"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignores
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'v-bind-same-name-shorthand,
                                          'define-model,
                                          'define-slots,
                                          'define-options,
                                          'v-bind-attr-modifier,
                                          'v-bind-prop-modifier-shorthand,
                                          'v-memo,
                                          'is-attribute-with-vue-prefix,
                                          'v-is,
                                          'v-model-custom-modifiers,
                                          'v-model-argument,
                                          'style-css-vars-injection,
                                          'script-setup,
                                          'v-slot,
                                          'dynamic-directive-arguments,
                                          'slot-scope-attribute
                                        |]
                                      ]
                                  )
                                  | optional,
                                version | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unsupported Vue.js syntax on the specified version
                    https://eslint.vuejs.org/rules/no-unsupported-features.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unused-components"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignoreWhenBindingPresent | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow registering components that are not used inside templates
                    https://eslint.vuejs.org/rules/no-unused-components.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unused-emit-declarations"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow unused emit declarations
                    https://eslint.vuejs.org/rules/no-unused-emit-declarations.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unused-properties"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                deepData | Bool | optional,
                                groups
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'setup,
                                          'methods,
                                          'computed,
                                          'asyncData,
                                          'data,
                                          'props
                                        |]
                                      ]
                                  )
                                  | optional,
                                ignorePublicMembers | Bool | optional,
                                unreferencedOptions
                                  | js2n.array.UniqueItems
                                  | Array (
                                    std.contract.Sequence
                                      [
                                        std.enum.TagOrString,
                                        [|
                                          'returnAsUnreferenced,
                                          'unknownMemberAsUnreferenced
                                        |]
                                      ]
                                  )
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unused properties
                    https://eslint.vuejs.org/rules/no-unused-properties.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unused-refs"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow unused refs
                    https://eslint.vuejs.org/rules/no-unused-refs.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-unused-vars"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { ignorePattern | String | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unused variable definitions of v-for directives or scope attributes
                    https://eslint.vuejs.org/rules/no-unused-vars.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-use-computed-property-like-method"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow use computed property like method
                    https://eslint.vuejs.org/rules/no-use-computed-property-like-method.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-use-v-else-with-v-for"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow using `v-else-if`/`v-else` on the same element as `v-for`
                    https://eslint.vuejs.org/rules/no-use-v-else-with-v-for.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-use-v-if-with-v-for"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowUsingIterationVar | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow using `v-if` on the same element as `v-for`
                    https://eslint.vuejs.org/rules/no-use-v-if-with-v-for.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-useless-concat"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Disallow unnecessary concatenation of literals or template literals in `<template>`
                    https://eslint.vuejs.org/rules/no-useless-concat.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-useless-mustaches"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreIncludesComment | Bool | optional,
                                ignoreStringEscape | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unnecessary mustache interpolations
                    https://eslint.vuejs.org/rules/no-useless-mustaches.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-useless-template-attributes"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow useless attribute on `<template>`
                    https://eslint.vuejs.org/rules/no-useless-template-attributes.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-useless-v-bind"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                ignoreIncludesComment | Bool | optional,
                                ignoreStringEscape | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow unnecessary `v-bind` directives
                    https://eslint.vuejs.org/rules/no-useless-v-bind.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-for-template-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow `key` attribute on `<template v-for>`
                    https://eslint.vuejs.org/rules/no-v-for-template-key.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-for-template-key-on-child"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow key of `<template v-for>` placed on child elements
                    https://eslint.vuejs.org/rules/no-v-for-template-key-on-child.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-html"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow use of v-html to prevent XSS attack
                    https://eslint.vuejs.org/rules/no-v-html.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-model-argument"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow adding an argument to `v-model` used in custom component
                    https://eslint.vuejs.org/rules/no-v-model-argument.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-text"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow use of v-text
                    https://eslint.vuejs.org/rules/no-v-text.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-v-text-v-html-on-component"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allow
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow v-text / v-html on component
                    https://eslint.vuejs.org/rules/no-v-text-v-html-on-component.html
                  "%
                  | optional,
                "eslint-plugin-vue/no-watch-after-await"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    disallow asynchronously registered `watch`
                    https://eslint.vuejs.org/rules/no-watch-after-await.html
                  "%
                  | optional,
                "eslint-plugin-vue/object-curly-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent line breaks after opening and before closing braces in `<template>`
                    https://eslint.vuejs.org/rules/object-curly-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/object-curly-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing inside braces in `<template>`
                    https://eslint.vuejs.org/rules/object-curly-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/object-property-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                allowAllPropertiesOnSameLine | Bool | optional,
                                allowMultiplePropertiesPerLine
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce placing object properties on separate lines in `<template>`
                    https://eslint.vuejs.org/rules/object-property-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/object-shorthand"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require or disallow method and property shorthand syntax for object literals in `<template>`
                    https://eslint.vuejs.org/rules/object-shorthand.html
                  "%
                  | optional,
                "eslint-plugin-vue/one-component-per-file"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce that each component should be in its own file
                    https://eslint.vuejs.org/rules/one-component-per-file.html
                  "%
                  | optional,
                "eslint-plugin-vue/operator-linebreak"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent linebreak style for operators in `<template>`
                    https://eslint.vuejs.org/rules/operator-linebreak.html
                  "%
                  | optional,
                "eslint-plugin-vue/order-in-components"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { order | Array Dyn | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce order of properties in components
                    https://eslint.vuejs.org/rules/order-in-components.html
                  "%
                  | optional,
                "eslint-plugin-vue/padding-line-between-blocks"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require or disallow padding lines between blocks
                    https://eslint.vuejs.org/rules/padding-line-between-blocks.html
                  "%
                  | optional,
                "eslint-plugin-vue/padding-line-between-tags"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require or disallow newlines between sibling tags in template
                    https://eslint.vuejs.org/rules/padding-line-between-tags.html
                  "%
                  | optional,
                "eslint-plugin-vue/padding-lines-in-component-definition"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require or disallow padding lines in component definition
                    https://eslint.vuejs.org/rules/padding-lines-in-component-definition.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-define-options"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce use of `defineOptions` instead of default export.
                    https://eslint.vuejs.org/rules/prefer-define-options.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-import-from-vue"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce import from 'vue' instead of import from '@vue/*'
                    https://eslint.vuejs.org/rules/prefer-import-from-vue.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-prop-type-boolean-first"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce `Boolean` comes first in component prop types
                    https://eslint.vuejs.org/rules/prefer-prop-type-boolean-first.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-separate-static-class"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require static class names in template to be in a separate `class` attribute
                    https://eslint.vuejs.org/rules/prefer-separate-static-class.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-template"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require template literals instead of string concatenation in `<template>`
                    https://eslint.vuejs.org/rules/prefer-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/prefer-true-attribute-shorthand"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require shorthand form attribute when `v-bind` value is `true`
                    https://eslint.vuejs.org/rules/prefer-true-attribute-shorthand.html
                  "%
                  | optional,
                "eslint-plugin-vue/prop-name-casing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce specific casing for the Prop name in Vue components
                    https://eslint.vuejs.org/rules/prop-name-casing.html
                  "%
                  | optional,
                "eslint-plugin-vue/quote-props"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    Require quotes around object literal property names in `<template>`
                    https://eslint.vuejs.org/rules/quote-props.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-component-is"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require `v-bind:is` of `<component>` elements
                    https://eslint.vuejs.org/rules/require-component-is.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-default-prop"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require default value for props
                    https://eslint.vuejs.org/rules/require-default-prop.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-direct-export"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                disallowFunctionalComponentFunction
                                  | Bool
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require the component to be directly exported
                    https://eslint.vuejs.org/rules/require-direct-export.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-emit-validator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require type definitions in emits
                    https://eslint.vuejs.org/rules/require-emit-validator.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-explicit-emits"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowProps | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require `emits` option with name triggered by `$emit()`
                    https://eslint.vuejs.org/rules/require-explicit-emits.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-explicit-slots"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require slots to be explicitly defined
                    https://eslint.vuejs.org/rules/require-explicit-slots.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-expose"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require declare public properties using `expose`
                    https://eslint.vuejs.org/rules/require-expose.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-macro-variable-name"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                defineEmits | String | optional,
                                defineProps | String | optional,
                                defineSlots | String | optional,
                                useAttrs | String | optional,
                                useSlots | String | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require a certain macro variable name
                    https://eslint.vuejs.org/rules/require-macro-variable-name.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-name-property"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require a name property in Vue components
                    https://eslint.vuejs.org/rules/require-name-property.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-prop-comment"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                type
                                  | std.enum.TagOrString
                                  | [| 'any, 'block, 'line, 'JSDoc |]
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require props to have a comment
                    https://eslint.vuejs.org/rules/require-prop-comment.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-prop-type-constructor"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require prop type to be a constructor
                    https://eslint.vuejs.org/rules/require-prop-type-constructor.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-prop-types"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require type definitions in props
                    https://eslint.vuejs.org/rules/require-prop-types.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-render-return"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce render function to always return value
                    https://eslint.vuejs.org/rules/require-render-return.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-slots-as-functions"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce properties of `$slots` to be used as a function
                    https://eslint.vuejs.org/rules/require-slots-as-functions.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-toggle-inside-transition"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require control the display of the content inside `<transition>`
                    https://eslint.vuejs.org/rules/require-toggle-inside-transition.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-typed-object-prop"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce adding type declarations to object props
                    https://eslint.vuejs.org/rules/require-typed-object-prop.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-typed-ref"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require `ref` and `shallowRef` functions to be strongly typed
                    https://eslint.vuejs.org/rules/require-typed-ref.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-v-for-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require `v-bind:key` with `v-for` directives
                    https://eslint.vuejs.org/rules/require-v-for-key.html
                  "%
                  | optional,
                "eslint-plugin-vue/require-valid-default-prop"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce props default values to be valid
                    https://eslint.vuejs.org/rules/require-valid-default-prop.html
                  "%
                  | optional,
                "eslint-plugin-vue/return-in-computed-property"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                treatUndefinedAsUnspecified | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce that a return statement is present in computed property
                    https://eslint.vuejs.org/rules/return-in-computed-property.html
                  "%
                  | optional,
                "eslint-plugin-vue/return-in-emits-validator"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce that a return statement is present in emits validator
                    https://eslint.vuejs.org/rules/return-in-emits-validator.html
                  "%
                  | optional,
                "eslint-plugin-vue/script-indent"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce consistent indentation in `<script>`
                    https://eslint.vuejs.org/rules/script-indent.html
                  "%
                  | optional,
                "eslint-plugin-vue/script-setup-uses-vars"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    prevent `<script setup>` variables used in `<template>` to be marked as unused
                    https://eslint.vuejs.org/rules/script-setup-uses-vars.html
                  "%
                  | optional,
                "eslint-plugin-vue/singleline-html-element-content-newline"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                externalIgnores
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ignoreWhenEmpty | Bool | optional,
                                ignoreWhenNoAttributes | Bool | optional,
                                ignores
                                  | js2n.array.UniqueItems
                                  | Array String
                                  | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    require a line break before and after the contents of a singleline element
                    https://eslint.vuejs.org/rules/singleline-html-element-content-newline.html
                  "%
                  | optional,
                "eslint-plugin-vue/sort-keys"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce sort-keys in a manner that is compatible with order-in-components
                    https://eslint.vuejs.org/rules/sort-keys.html
                  "%
                  | optional,
                "eslint-plugin-vue/space-in-parens"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing inside parentheses in `<template>`
                    https://eslint.vuejs.org/rules/space-in-parens.html
                  "%
                  | optional,
                "eslint-plugin-vue/space-infix-ops"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { int32Hint | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require spacing around infix operators in `<template>`
                    https://eslint.vuejs.org/rules/space-infix-ops.html
                  "%
                  | optional,
                "eslint-plugin-vue/space-unary-ops"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {
                                nonwords | Bool | optional,
                                overrides | { _ | Bool } | optional,
                                words | Bool | optional,
                                ..
                              }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Enforce consistent spacing before or after unary operators in `<template>`
                    https://eslint.vuejs.org/rules/space-unary-ops.html
                  "%
                  | optional,
                "eslint-plugin-vue/static-class-names-order"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce static class names order
                    https://eslint.vuejs.org/rules/static-class-names-order.html
                  "%
                  | optional,
                "eslint-plugin-vue/template-curly-spacing"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    Require or disallow spacing around embedded expressions of template strings in `<template>`
                    https://eslint.vuejs.org/rules/template-curly-spacing.html
                  "%
                  | optional,
                "eslint-plugin-vue/this-in-template"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    disallow usage of `this` in template
                    https://eslint.vuejs.org/rules/this-in-template.html
                  "%
                  | optional,
                "eslint-plugin-vue/use-v-on-exact"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce usage of `exact` modifier on `v-on`
                    https://eslint.vuejs.org/rules/use-v-on-exact.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-bind-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce `v-bind` directive style
                    https://eslint.vuejs.org/rules/v-bind-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-for-delimiter-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce `v-for` directive's delimiter style
                    https://eslint.vuejs.org/rules/v-for-delimiter-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-if-else-key"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require key attribute for conditionally rendered repeated components
                    https://eslint.vuejs.org/rules/v-if-else-key.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-on-event-hyphenation"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce v-on event naming style on custom components in template
                    https://eslint.vuejs.org/rules/v-on-event-hyphenation.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-on-function-call"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce or forbid parentheses after method calls without arguments in `v-on` directives
                    https://eslint.vuejs.org/rules/v-on-function-call.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-on-handler-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce writing style for handlers in `v-on` directives
                    https://eslint.vuejs.org/rules/v-on-handler-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-on-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce `v-on` directive style
                    https://eslint.vuejs.org/rules/v-on-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/v-slot-style"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              {  .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce `v-slot` directive style
                    https://eslint.vuejs.org/rules/v-slot-style.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-attribute-name"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require valid attribute names
                    https://eslint.vuejs.org/rules/valid-attribute-name.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-define-emits"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `defineEmits` compiler macro
                    https://eslint.vuejs.org/rules/valid-define-emits.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-define-options"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `defineOptions` compiler macro
                    https://eslint.vuejs.org/rules/valid-define-options.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-define-props"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `defineProps` compiler macro
                    https://eslint.vuejs.org/rules/valid-define-props.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-model-definition"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    require valid keys in model option
                    https://eslint.vuejs.org/rules/valid-model-definition.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-next-tick"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `nextTick` function calls
                    https://eslint.vuejs.org/rules/valid-next-tick.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-template-root"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid template root
                    https://eslint.vuejs.org/rules/valid-template-root.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-bind"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-bind` directives
                    https://eslint.vuejs.org/rules/valid-v-bind.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-bind-sync"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `.sync` modifier on `v-bind` directives
                    https://eslint.vuejs.org/rules/valid-v-bind-sync.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-cloak"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-cloak` directives
                    https://eslint.vuejs.org/rules/valid-v-cloak.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-else"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-else` directives
                    https://eslint.vuejs.org/rules/valid-v-else.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-else-if"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-else-if` directives
                    https://eslint.vuejs.org/rules/valid-v-else-if.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-for"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-for` directives
                    https://eslint.vuejs.org/rules/valid-v-for.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-html"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-html` directives
                    https://eslint.vuejs.org/rules/valid-v-html.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-if"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-if` directives
                    https://eslint.vuejs.org/rules/valid-v-if.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-is"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-is` directives
                    https://eslint.vuejs.org/rules/valid-v-is.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-memo"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-memo` directives
                    https://eslint.vuejs.org/rules/valid-v-memo.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-model"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-model` directives
                    https://eslint.vuejs.org/rules/valid-v-model.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-on"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { modifiers | Array Dyn | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce valid `v-on` directives
                    https://eslint.vuejs.org/rules/valid-v-on.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-once"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-once` directives
                    https://eslint.vuejs.org/rules/valid-v-once.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-pre"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-pre` directives
                    https://eslint.vuejs.org/rules/valid-v-pre.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-show"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-show` directives
                    https://eslint.vuejs.org/rules/valid-v-show.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-slot"
                  | std.contract.any_of
                    [
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                          Number
                        ],
                      std.contract.Sequence
                        [
                          refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.Items
                            [
                              std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                      String
                                    ]
                                ],
                              { allowModifiers | Bool | optional, .. }
                            ] js2n.Always
                        ]
                    ]
                  | doc m%"
                    enforce valid `v-slot` directives
                    https://eslint.vuejs.org/rules/valid-v-slot.html
                  "%
                  | optional,
                "eslint-plugin-vue/valid-v-text"
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc m%"
                    enforce valid `v-text` directives
                    https://eslint.vuejs.org/rules/valid-v-text.html
                  "%
                  | optional,
                ..
              }
            ],
      "properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber" =
        std.contract.Sequence
            [
              std.number.Integer,
              js2n.number.Maximum 2,
              js2n.number.Minimum 0
            ],
      "properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString" =
        std.contract.Sequence
            [ std.enum.TagOrString, [| 'error, 'warn, 'off |] ],
      "properties.eslintConfig.properties.settings" = { _ | Dyn },
      "properties.jscpd.definitions.color" =
        js2n.OneOf
            [
              std.contract.Sequence
                [ refs."properties.jscpd.definitions.colorPreset", String ],
              std.contract.Sequence
                [ refs."properties.jscpd.definitions.colorHex", String ]
            ],
      "properties.jscpd.definitions.colorHex" =
        js2n.string.Matches "([0-9a-fA-F]{3}){1,2}",
      "properties.jscpd.definitions.colorPreset" =
        std.contract.Sequence
            [
              std.enum.TagOrString,
              [|
                'black,
                'cyan,
                'gray,
                'grey,
                'pink,
                'purple,
                'orange,
                'yellow,
                'red,
                'blue,
                'green
              |]
            ],
      "properties.jscpd.definitions.format" =
        std.contract.Sequence
            [
              std.enum.TagOrString,
              [|
                'yaml,
                'xquery,
                'xojo,
                'xeora,
                'wiki,
                'url,
                'wasm,
                'visual-basic,
                'vim,
                'vhdl,
                'verilog,
                'velocity,
                'vbnet,
                'typescript,
                'twig,
                'tt2,
                'tsx,
                'textile,
                'tcl,
                'tap,
                'swift,
                'stylus,
                'sql,
                'soy,
                'smarty,
                'smalltalk,
                'scss,
                'scheme,
                'scala,
                'sass,
                'sas,
                'rust,
                'ruby,
                'roboconf,
                'rip,
                'rest,
                'renpy,
                'reason,
                'r,
                'qore,
                'q,
                'python,
                'pure,
                'puppet,
                'pug,
                'protobuf,
                'properties,
                'prolog,
                'processing,
                'powershell,
                'plsql,
                'php,
                'perl,
                'pascal,
                'parigp,
                'oz,
                'opencl,
                'ocaml,
                'objectivec,
                'nsis,
                'nix,
                'nim,
                'nginx,
                'nasm,
                'n4js,
                'monkey,
                'mizar,
                'mel,
                'matlab,
                'markup,
                'markdown,
                'makefile,
                'lua,
                'lolcode,
                'livescript,
                'lisp,
                'liquid,
                'less,
                'latex,
                'kotlin,
                'keymap,
                'julia,
                'jsx,
                'json,
                'jolie,
                'javascript,
                'java,
                'j,
                'io,
                'ini,
                'inform7,
                'icon,
                'ichigojam,
                'http,
                'hsts,
                'hpkp,
                'haxe,
                'haskell,
                'handlebars,
                'haml,
                'groovy,
                'graphql,
                'go,
                'glsl,
                'git,
                'gherkin,
                'gedcom,
                'fsharp,
                'fortran,
                'flow,
                'erlang,
                'erb,
                'elm,
                'elixir,
                'eiffel,
                'docker,
                'django,
                'diff,
                'dart,
                'd,
                'css,
                'css-extras,
                'csp,
                'csharp,
                'crystal,
                'cpp-header,
                'cpp,
                'comments,
                'coffeescript,
                'clojure,
                'clike,
                'c-header,
                'c,
                'bro,
                'brainfuck,
                'bison,
                'batch,
                'basic,
                'bash,
                'autoit,
                'autohotkey,
                'aspnet,
                'asm6502,
                'asciidoc,
                'arff,
                'arduino,
                'applescript,
                'apl,
                'apacheconf,
                'ada,
                'actionscript,
                'abap
              |]
            ],
      "properties.prettier.definitions.optionsDefinition" =
        {
            arrowParens
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'always |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'avoid |] ]
                ]
              | doc "Include parentheses around a sole arrow function parameter."
              | optional,
            bracketSameLine
              | Bool
              | doc "Put > of opening tags on the last line instead of on a new line."
              | optional,
            bracketSpacing
              | Bool
              | doc "Print spaces between brackets."
              | optional,
            cursorOffset
              | std.number.Integer
              | doc "Print (to stderr) where a cursor at the given position would move to after formatting."
              | optional,
            embeddedLanguageFormatting
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'auto |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'off |] ]
                ]
              | doc "Control how Prettier formats quoted code embedded in the file."
              | optional,
            endOfLine
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'lf |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'crlf |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'cr |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'auto |] ]
                ]
              | doc "Which end of line characters to apply."
              | optional,
            experimentalOperatorPosition
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'start |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'end |] ]
                ]
              | doc "Where to print operators when binary expressions wrap lines."
              | optional,
            experimentalTernaries
              | Bool
              | doc "Use curious ternaries, with the question mark after the condition."
              | optional,
            filepath
              | String
              | doc "Specify the input filepath. This will be used to do parser inference."
              | optional,
            htmlWhitespaceSensitivity
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'css |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'strict |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'ignore |] ]
                ]
              | doc "How to handle whitespaces in HTML."
              | optional,
            insertPragma
              | Bool
              | doc "Insert @format pragma into file's first docblock comment."
              | optional,
            jsxSingleQuote | Bool | doc "Use single quotes in JSX." | optional,
            objectWrap
              | js2n.OneOf
                [
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'preserve |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'collapse |] ]
                ]
              | doc "How to wrap object literals."
              | optional,
            parser
              | std.contract.any_of
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'flow |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'babel |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'babel-flow |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'babel-ts |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'typescript |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'acorn |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'espree |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'meriyah |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'css |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'less |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'scss |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'json |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'json5 |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'jsonc |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'json-stringify |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'graphql |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'markdown |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'mdx |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'vue |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'yaml |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'glimmer |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'html |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'angular |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'lwc |] ],
                  String
                ]
              | doc "Which parser to use."
              | optional,
            plugins
              | Array String
              | doc "Add a plugin. Multiple plugins can be passed as separate `--plugin`s."
              | optional,
            printWidth
              | std.number.Integer
              | doc "The line length where Prettier will try wrap."
              | optional,
            proseWrap
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'always |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'never |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'preserve |] ]
                ]
              | doc "How to wrap prose."
              | optional,
            quoteProps
              | js2n.OneOf
                [
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'as-needed |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'consistent |] ],
                  std.contract.Sequence
                    [ std.enum.TagOrString, [| 'preserve |] ]
                ]
              | doc "Change when properties in objects are quoted."
              | optional,
            rangeEnd
              | std.number.Integer
              | doc m%"
                Format code ending at a given character offset (exclusive).
                The range will extend forwards to the end of the selected statement.
              "%
              | optional,
            rangeStart
              | std.number.Integer
              | doc m%"
                Format code starting at a given character offset.
                The range will extend backwards to the start of the first line containing the selected statement.
              "%
              | optional,
            requirePragma
              | Bool
              | doc m%"
                Require either '@prettier' or '@format' to be present in the file's first docblock comment
                in order for it to be formatted.
              "%
              | optional,
            semi | Bool | doc "Print semicolons." | optional,
            singleAttributePerLine
              | Bool
              | doc "Enforce single attribute per line in HTML, Vue and JSX."
              | optional,
            singleQuote
              | Bool
              | doc "Use single quotes instead of double quotes."
              | optional,
            tabWidth
              | std.number.Integer
              | doc "Number of spaces per indentation level."
              | optional,
            trailingComma
              | js2n.OneOf
                [
                  std.contract.Sequence [ std.enum.TagOrString, [| 'all |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'es5 |] ],
                  std.contract.Sequence [ std.enum.TagOrString, [| 'none |] ]
                ]
              | doc "Print trailing commas wherever possible when multi-line."
              | optional,
            useTabs
              | Bool
              | doc "Indent with tabs instead of spaces."
              | optional,
            vueIndentScriptAndStyle
              | Bool
              | doc "Indent script and style tags in Vue files."
              | optional,
            ..
          },
      "properties.prettier.definitions.overridesDefinition" =
        {
            overrides
              | Array
                {
                  excludeFiles
                    | std.contract.any_of [ String, Array String ]
                    | doc "Exclude these files from this override."
                    | optional,
                  files
                    | std.contract.any_of [ String, Array String ]
                    | doc "Include these files in this override.",
                  options
                    | refs."properties.prettier.definitions.optionsDefinition"
                    | { _ | Dyn }
                    | doc "The options to apply for this override."
                    | optional,
                }
              | doc "Provide a list of patterns to override prettier configuration."
              | optional,
            ..
          },
      "properties.release.definitions.branch-object" =
        {
            channel | String | optional,
            name | String,
            prerelease | std.contract.any_of [ Bool, String ] | optional,
            range | String | optional,
          },
      "properties.stylelint.definitions.allRules" =
        std.contract.Sequence
            [
              refs."properties.stylelint.definitions.atRule",
              refs."properties.stylelint.definitions.block",
              refs."properties.stylelint.definitions.color",
              refs."properties.stylelint.definitions.comment",
              refs."properties.stylelint.definitions.customMedia",
              refs."properties.stylelint.definitions.customProperty",
              refs."properties.stylelint.definitions.declaration",
              refs."properties.stylelint.definitions.declarationBlock",
              refs."properties.stylelint.definitions.font",
              refs."properties.stylelint.definitions.function",
              refs."properties.stylelint.definitions.generalSheet",
              refs."properties.stylelint.definitions.keyframeDeclaration",
              refs."properties.stylelint.definitions.length",
              refs."properties.stylelint.definitions.lightness",
              refs."properties.stylelint.definitions.mediaFeature",
              refs."properties.stylelint.definitions.mediaQuery",
              refs."properties.stylelint.definitions.mediaQueryList",
              refs."properties.stylelint.definitions.number",
              refs."properties.stylelint.definitions.property",
              refs."properties.stylelint.definitions.rootRule",
              refs."properties.stylelint.definitions.rule",
              refs."properties.stylelint.definitions.selector",
              refs."properties.stylelint.definitions.selectorList",
              refs."properties.stylelint.definitions.shorthandProperty",
              refs."properties.stylelint.definitions.string",
              refs."properties.stylelint.definitions.stylelintDisableComment",
              refs."properties.stylelint.definitions.time",
              refs."properties.stylelint.definitions.unit",
              refs."properties.stylelint.definitions.value",
              refs."properties.stylelint.definitions.valueList",
              { _ | Dyn }
            ],
      "properties.stylelint.definitions.alwaysMultiLineRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [ js2n.Enum [ "always", "always-multi-line", [  ] ], String ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum [ "always", "always-multi-line", {} ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.alwaysNeverRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [ js2n.Enum [ "always", "never", [  ] ], String ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [ js2n.Enum [ "always", "never", {} ], String ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.arrayStringRule" =
        std.contract.Sequence
            [
              js2n.OneOf
                [
                  js2n.Nullable String,
                  std.contract.Sequence
                    [
                      js2n.array.MinItems 1,
                      js2n.array.UniqueItems,
                      js2n.array.ArrayOf
                        (std.contract.any_of
                          [
                            std.contract.Sequence
                              [
                                refs."properties.stylelint.definitions.simpleArrayStringRule",
                                Array Dyn
                              ],
                            std.contract.Sequence
                              [
                                refs."properties.stylelint.definitions.coreRule",
                                { _ | Dyn }
                              ]
                          ])
                    ]
                ],
              std.contract.any_of [ js2n.Null, Array Dyn, String ]
            ],
      "properties.stylelint.definitions.atRule" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                at-rule-blacklist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed at-rules"
                  | optional,
                at-rule-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "always", "never", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "always", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'first-nested,
                                                'blockless-after-blockless,
                                                'blockless-after-same-name-blockless,
                                                'inside-block,
                                                'after-same-name,
                                                'all-nested
                                              |]
                                            ]
                                        )
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'blockless-after-blockless,
                                                'blockless-after-same-name-blockless,
                                                'inside-block,
                                                'first-nested,
                                                'after-comment
                                              |]
                                            ]
                                        )
                                        | optional,
                                      ignoreAtRules
                                        | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                                        | std.contract.any_of
                                          [ Array Dyn, String ]
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before at-rules"
                  | optional,
                at-rule-name-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for at-rules names"
                  | optional,
                at-rule-name-newline-after
                  | refs."properties.stylelint.definitions.alwaysMultiLineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline after at-rule names"
                  | optional,
                at-rule-name-space-after
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum [ "always", "always-single-line", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [ "always", "always-single-line", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require a single space after at-rule names"
                  | optional,
                at-rule-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreAtRules
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown at-rules"
                  | optional,
                at-rule-no-vendor-prefix
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow vendor prefixes for at-rules"
                  | optional,
                at-rule-semicolon-newline-after
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "always", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ "always", {} ], String ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require a newline after the semicolon of at-rules"
                  | optional,
                at-rule-semicolon-space-before
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc "Require a single space or disallow whitespace before the semicolons of at-rules"
                  | optional,
                at-rule-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed at-rules"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.block" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                block-closing-brace-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum [ "always-multi-line", "never", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [ "always-multi-line", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before the closing brace of blocks"
                  | optional,
                block-closing-brace-newline-after
                  | refs."properties.stylelint.definitions.newlineSpaceWithIgnoreRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the closing brace of blocks"
                  | optional,
                block-closing-brace-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the closing brace of blocks"
                  | optional,
                block-closing-brace-space-after
                  | refs."properties.stylelint.definitions.newlineSpaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the closing brace of blocks"
                  | optional,
                block-closing-brace-space-before
                  | refs."properties.stylelint.definitions.newlineSpaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the closing brace of blocks"
                  | optional,
                block-no-empty
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow empty blocks"
                  | optional,
                block-no-single-line
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow single-line blocks"
                  | optional,
                block-opening-brace-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline after the opening brace of blocks"
                  | optional,
                block-opening-brace-newline-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum
                            [
                              "always",
                              "always-single-line",
                              "never-single-line",
                              "always-multi-line",
                              "never-multi-line",
                              [  ]
                            ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [
                                        "always",
                                        "always-single-line",
                                        "never-single-line",
                                        "always-multi-line",
                                        "never-multi-line",
                                        {}
                                      ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require a newline or disallow whitespace before the opening brace of blocks"
                  | optional,
                block-opening-brace-space-after
                  | refs."properties.stylelint.definitions.newlineSpaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the opening brace of blocks"
                  | optional,
                block-opening-brace-space-before
                  | refs."properties.stylelint.definitions.newlineSpaceWithIgnoreRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the opening brace of blocks"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.booleanRule" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        Bool,
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.color" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                color-hex-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for hex colors"
                  | optional,
                color-hex-length
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "short", "long", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ "short", "long", {} ], String ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Specify short or long notation for hex colors"
                  | optional,
                color-named
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum [ "always-where-possible", "never", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [ "always-where-possible", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require (where possible) or disallow named colors"
                  | optional,
                color-no-hex
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow hex colors"
                  | optional,
                color-no-invalid-hex
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow invalid hex colors"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.comment" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                comment-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "always", "never", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "always", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'first-nested |]
                                            ]
                                        )
                                        | doc "Reverse the primary option for comments that are nested and the first child of their parent node"
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'stylelint-commands,
                                                'stylelint-command,
                                                'after-comment,
                                                'between-comments
                                              |]
                                            ]
                                        )
                                        | doc "Don't require an empty line between comments"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before comments"
                  | optional,
                comment-no-empty
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow empty comments"
                  | optional,
                comment-whitespace-inside
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow whitespace on the inside of comment markers"
                  | optional,
                comment-word-blacklist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed words within comments"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.coreRule" =
        {
            disableFix | Bool | optional,
            message
              | String
              | doc "Custom message that will be used in errors and warnings"
              | optional,
            reportDisables | Bool | optional,
            severity
              | std.enum.TagOrString
              | [| 'error, 'warning |]
              | doc "Message status"
              | optional,
            url | String | optional,
            ..
          },
      "properties.stylelint.definitions.customMedia" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                custom-media-pattern
                  | refs."properties.stylelint.definitions.stringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a pattern for custom media query names"
                  | optional,
                no-unknown-custom-media
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow unknown custom media queries"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.customProperty" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                custom-property-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "always", "never", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "always", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'first-nested,
                                                'after-custom-property,
                                                'after-comment
                                              |]
                                            ]
                                        )
                                        | doc "Reverse the primary option for custom properties that come after a comment, custom property or first child of their parent node"
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'inside-single-line-block,
                                                'after-comment
                                              |]
                                            ]
                                        )
                                        | doc "Ignore custom properties that are preceded by comments or inside single-line blocks"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before custom properties"
                  | optional,
                custom-property-no-outside-root
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow custom properties outside of `:root` rules"
                  | optional,
                custom-property-pattern
                  | refs."properties.stylelint.definitions.stringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a pattern for custom properties"
                  | optional,
                no-unknown-custom-properties
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow unknown custom properties"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.declaration" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                declaration-bang-space-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the bang of declarations"
                  | optional,
                declaration-bang-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the bang of declarations"
                  | optional,
                declaration-colon-newline-after
                  | refs."properties.stylelint.definitions.alwaysMultiLineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the colon of declarations"
                  | optional,
                declaration-colon-space-after
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum
                            [ "always", "never", "always-single-line", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [
                                        "always",
                                        "never",
                                        "always-single-line",
                                        {}
                                      ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require a single space or disallow whitespace after the colon of declarations"
                  | optional,
                declaration-colon-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the colon of declarations"
                  | optional,
                declaration-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "always", "never", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "always", "never", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'first-nested,
                                                'after-declaration,
                                                'after-comment
                                              |]
                                            ]
                                        )
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'inside-single-line-block,
                                                'first-nested,
                                                'after-declaration,
                                                'after-comment
                                              |]
                                            ]
                                        )
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before declarations"
                  | optional,
                declaration-no-important
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow `!important` within declarations"
                  | optional,
                declaration-property-unit-blacklist
                  | refs."properties.stylelint.definitions.objectRule"
                  | doc "Specify a blacklist of disallowed property and unit pairs within declarations"
                  | optional,
                declaration-property-unit-whitelist
                  | refs."properties.stylelint.definitions.objectRule"
                  | doc "Specify a whitelist of allowed property and unit pairs within declarations"
                  | optional,
                declaration-property-value-blacklist
                  | refs."properties.stylelint.definitions.objectRule"
                  | doc "Specify a blacklist of disallowed property and value pairs within declarations"
                  | optional,
                declaration-property-value-no-unknown
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  js2n.record.Record
                                    {
                                      additional = 'Some Dyn,
                                      patterns = {},
                                      properties =
                                        {
                                            ignoreProperties =
                                              js2n.record.Record
                                                  {
                                                    additional =
                                                      'Some
                                                          (std.contract.any_of
                                                            [
                                                              String,
                                                              js2n.array.ArrayOf
                                                                String,
                                                              js2n.OneOf
                                                                [
                                                                  std.contract.any_of
                                                                    [
                                                                      {
                                                                        _ | Dyn
                                                                      },
                                                                      js2n.string.Matches
                                                                        "^\\/.+\\/i?$"
                                                                    ],
                                                                  js2n.array.ArrayOf
                                                                    (std.contract.any_of
                                                                      [
                                                                        {
                                                                          _ | Dyn
                                                                        },
                                                                        js2n.string.Matches
                                                                          "^\\/.+\\/i?$"
                                                                      ])
                                                                ]
                                                            ]),
                                                    patterns = {},
                                                    properties = {},
                                                    required = {},
                                                  },
                                            propertiesSyntax =
                                              js2n.record.Record
                                                  {
                                                    additional =
                                                      'Some
                                                          (std.contract.any_of
                                                            [
                                                              String,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]),
                                                    patterns = {},
                                                    properties = {},
                                                    required = {},
                                                  },
                                            typesSyntax =
                                              js2n.record.Record
                                                  {
                                                    additional =
                                                      'Some
                                                          (std.contract.any_of
                                                            [
                                                              String,
                                                              js2n.array.ArrayOf
                                                                String
                                                            ]),
                                                    patterns = {},
                                                    properties = {},
                                                    required = {},
                                                  },
                                          },
                                      required = {},
                                    }
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow unknown values for properties within declarations"
                  | optional,
                declaration-property-value-whitelist
                  | refs."properties.stylelint.definitions.objectRule"
                  | doc "Specify a whitelist of allowed property and value pairs within declarations"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.declarationBlock" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                declaration-block-no-duplicate-properties
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [|
                                                'consecutive-duplicates-with-same-prefixless-values,
                                                'consecutive-duplicates-with-different-syntaxes,
                                                'consecutive-duplicates-with-different-values,
                                                'consecutive-duplicates
                                              |]
                                            ]
                                        )
                                        | optional,
                                      ignoreProperties
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow duplicate properties within declaration blocks"
                  | optional,
                declaration-block-no-ignored-properties
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow property values that are ignored due to another property value in the same rule"
                  | optional,
                declaration-block-no-redundant-longhand-properties
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreShorthands
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow longhand properties that can be combined into one shorthand property"
                  | optional,
                declaration-block-no-shorthand-property-overrides
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow shorthand properties that override related longhand properties"
                  | optional,
                declaration-block-properties-order
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "alphabetical", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MinItems 1,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "alphabetical", [  ], {} ],
                                    String
                                  ],
                                String,
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.simpleArrayStringRule",
                                    Array Dyn
                                  ],
                                std.contract.Sequence
                                  [
                                    js2n.record.DependentFields
                                      {
                                        order = [ "properties" ],
                                        properties = [ "order" ],
                                      },
                                    refs."properties.stylelint.definitions.coreRule",
                                    js2n.record.Record
                                      {
                                        additional = 'Some Dyn,
                                        patterns = {},
                                        properties =
                                          {
                                              order =
                                                std.contract.Sequence
                                                    [
                                                      std.enum.TagOrString,
                                                      [| 'flexible, 'strict |]
                                                    ],
                                              properties =
                                                std.contract.Sequence
                                                    [
                                                      refs."properties.stylelint.definitions.simpleArrayStringRule",
                                                      Array Dyn
                                                    ],
                                              unspecified =
                                                std.contract.Sequence
                                                    [
                                                      std.enum.TagOrString,
                                                      [|
                                                        'ignore,
                                                        'bottomAlphabetical,
                                                        'bottom,
                                                        'top
                                                      |]
                                                    ],
                                            },
                                        required = {},
                                      }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Specify the order of properties within declaration blocks"
                  | optional,
                declaration-block-semicolon-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the semicolons of declaration blocks"
                  | optional,
                declaration-block-semicolon-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the semicolons of declaration blocks"
                  | optional,
                declaration-block-semicolon-space-after
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the semicolons of declaration blocks"
                  | optional,
                declaration-block-semicolon-space-before
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the semicolons of declaration blocks"
                  | optional,
                declaration-block-single-line-max-declarations
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of declaration within a single line declaration block"
                  | optional,
                declaration-block-trailing-semicolon
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow a trailing semicolon within declaration blocks"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.font" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                font-family-name-quotes
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum
                            [
                              "always-where-required",
                              "always-where-recommended",
                              "always-unless-keyword",
                              [  ]
                            ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [
                                        "always-where-required",
                                        "always-where-recommended",
                                        "always-unless-keyword",
                                        {}
                                      ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Specify whether or not quotation marks should be used around font family names"
                  | optional,
                font-weight-notation
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum [ "numeric", "named-where-possible", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [ "numeric", "named-where-possible", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'relative |]
                                            ]
                                        )
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require numeric or named (where possible) `font-weight` values. Also, when named values are expected, require only valid names"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.function" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                function-blacklist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed functions"
                  | optional,
                function-calc-no-unspaced-operator
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow an unspaced operator within `calc` functions"
                  | optional,
                function-comma-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the commas of functions"
                  | optional,
                function-comma-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the commas of functions"
                  | optional,
                function-comma-space-after
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the commas of functions"
                  | optional,
                function-comma-space-before
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the commas of functions"
                  | optional,
                function-linear-gradient-no-nonstandard-direction
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow direction values in `linear-gradient()` calls that are not valid according to the standard syntax"
                  | optional,
                function-max-empty-lines
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of adjacent empty lines within functions"
                  | optional,
                function-name-case
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "lower", "upper", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "lower", "upper", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreFunctions
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Specify lowercase or uppercase for function names"
                  | optional,
                function-parentheses-newline-inside
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace on the inside of the parentheses of functions"
                  | optional,
                function-parentheses-space-inside
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace on the inside of the parentheses of functions"
                  | optional,
                function-url-data-uris
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow data URIs for urls"
                  | optional,
                function-url-no-scheme-relative
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow scheme-relative urls"
                  | optional,
                function-url-quotes
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow quotes for urls"
                  | optional,
                function-url-scheme-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed url schemes"
                  | optional,
                function-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed functions"
                  | optional,
                function-whitespace-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow whitespace after functions"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.generalSheet" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                indentation
                  | std.contract.any_of
                    [ js2n.Null, std.number.Integer, String, Array Dyn ]
                  | js2n.OneOf
                    [
                      js2n.Nullable std.number.Integer,
                      std.contract.Sequence
                        [ js2n.Enum [ "tab", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MinItems 1,
                          js2n.array.UniqueItems,
                          js2n.array.ArrayOf std.number.Integer
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          js2n.array.ArrayOf
                            (std.contract.Sequence
                              [
                                std.contract.any_of
                                  [ std.number.Integer, String, { _ | Dyn } ],
                                std.contract.any_of
                                  [
                                    std.number.Integer,
                                    std.contract.Sequence
                                      [ js2n.Enum [ "tab", {} ], String ],
                                    std.contract.Sequence
                                      [
                                        refs."properties.stylelint.definitions.coreRule",
                                        js2n.record.Record
                                          {
                                            additional = 'Some Dyn,
                                            patterns = {},
                                            properties =
                                              {
                                                  except =
                                                    std.contract.Sequence
                                                        [
                                                          js2n.array.MinItems 1,
                                                          js2n.array.UniqueItems,
                                                          js2n.array.ArrayOf
                                                            (std.contract.Sequence
                                                              [
                                                                std.enum.TagOrString,
                                                                [|
                                                                  'value,
                                                                  'param,
                                                                  'block
                                                                |]
                                                              ])
                                                        ],
                                                  ignore =
                                                    std.contract.Sequence
                                                        [
                                                          js2n.array.MinItems 1,
                                                          js2n.array.UniqueItems,
                                                          js2n.array.ArrayOf
                                                            (std.contract.Sequence
                                                              [
                                                                std.enum.TagOrString,
                                                                [|
                                                                  'value,
                                                                  'param,
                                                                  'inside-parens
                                                                |]
                                                              ])
                                                        ],
                                                  indentInsideParens =
                                                    std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [|
                                                            'once-at-root-twice-in-block,
                                                            'twice
                                                          |]
                                                        ],
                                                },
                                            required = {},
                                          }
                                      ]
                                  ]
                              ])
                        ]
                    ]
                  | doc "Specify indentation"
                  | optional,
                linebreaks
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc "Specify unix or windows linebreaks"
                  | optional,
                max-empty-lines
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of adjacent empty lines"
                  | optional,
                max-line-length
                  | std.contract.any_of
                    [ js2n.Null, std.number.Integer, Array Dyn ]
                  | js2n.OneOf
                    [
                      js2n.Nullable std.number.Integer,
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          js2n.array.ArrayOf
                            (std.contract.Sequence
                              [
                                std.contract.any_of
                                  [ std.number.Integer, { _ | Dyn } ],
                                std.contract.any_of
                                  [
                                    std.number.Integer,
                                    std.contract.Sequence
                                      [
                                        refs."properties.stylelint.definitions.coreRule",
                                        js2n.record.Record
                                          {
                                            additional = 'Some Dyn,
                                            patterns = {},
                                            properties =
                                              {
                                                  ignore =
                                                    std.contract.any_of
                                                        [
                                                          std.contract.Sequence
                                                            [
                                                              std.enum.TagOrString,
                                                              [|
                                                                'comments,
                                                                'non-comments
                                                              |]
                                                            ],
                                                          std.contract.Sequence
                                                            [
                                                              js2n.array.MinItems
                                                                1,
                                                              js2n.array.UniqueItems,
                                                              js2n.array.ArrayOf
                                                                (std.contract.Sequence
                                                                  [
                                                                    std.enum.TagOrString,
                                                                    [|
                                                                      'comments,
                                                                      'non-comments
                                                                    |]
                                                                  ])
                                                            ]
                                                        ],
                                                },
                                            required = {},
                                          }
                                      ]
                                  ]
                              ])
                        ]
                    ]
                  | doc "Limit the length of a line"
                  | optional,
                max-nesting-depth
                  | std.contract.any_of
                    [ js2n.Null, std.number.Integer, Array Dyn ]
                  | js2n.OneOf
                    [
                      js2n.Nullable std.number.Integer,
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          js2n.array.ArrayOf
                            (std.contract.Sequence
                              [
                                std.contract.any_of
                                  [ std.number.Integer, { _ | Dyn } ],
                                std.contract.any_of
                                  [
                                    std.number.Integer,
                                    std.contract.Sequence
                                      [
                                        refs."properties.stylelint.definitions.coreRule",
                                        js2n.record.Record
                                          {
                                            additional = 'Some Dyn,
                                            patterns = {},
                                            properties =
                                              {
                                                  ignore =
                                                    std.contract.Sequence
                                                        [
                                                          js2n.array.MinItems 1,
                                                          js2n.array.UniqueItems,
                                                          js2n.array.ArrayOf
                                                            (std.contract.Sequence
                                                              [
                                                                std.enum.TagOrString,
                                                                [|
                                                                  'pseudo-classes,
                                                                  'blockless-at-rules,
                                                                  'at-rules-without-declaration-blocks
                                                                |]
                                                              ])
                                                        ],
                                                  ignoreAtRules =
                                                    std.contract.Sequence
                                                        [
                                                          refs."properties.stylelint.definitions.simpleArrayStringRule",
                                                          Array Dyn
                                                        ],
                                                },
                                            required = {},
                                          }
                                      ]
                                  ]
                              ])
                        ]
                    ]
                  | doc "Limit the allowed nesting depth"
                  | optional,
                no-browser-hacks
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      browsers
                                        | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                                        | std.contract.any_of
                                          [ Array Dyn, String ]
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow browser hacks that are irrelevant to the browsers you are targeting"
                  | optional,
                no-descending-specificity
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow selectors of lower specificity from coming after overriding selectors of higher specificity"
                  | optional,
                no-duplicate-selectors
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow duplicate selectors within a stylesheet"
                  | optional,
                no-empty-first-line
                  | std.contract.any_of
                    [ js2n.Null, Bool, Number, String, { _ | Dyn }, Array Dyn ]
                  | doc "Disallow empty first lines"
                  | optional,
                no-empty-source
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow empty sources"
                  | optional,
                no-eol-whitespace
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'empty-lines |]
                                            ]
                                        )
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow end-of-line whitespace"
                  | optional,
                no-extra-semicolons
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow extra semicolons"
                  | optional,
                no-indistinguishable-colors
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      threshold
                                        | std.number.Integer
                                        | js2n.number.Maximum 100
                                        | js2n.number.Minimum 0
                                        | optional,
                                      whitelist
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              refs."properties.stylelint.definitions.simpleArrayStringRule",
                                              Array Dyn
                                            ]
                                        )
                                        | doc "An array of color pairs to ignore. Each pair is an array with two items"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow colors that are suspiciously close to being identical"
                  | optional,
                no-invalid-double-slash-comments
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow double-slash comments `(//...)` which are not supported by CSS and could lead to unexpected results"
                  | optional,
                no-missing-end-of-source-newline
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow missing end-of-source newlines"
                  | optional,
                no-unknown-animations
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow animation names that do not correspond to a `@keyframes` declaration"
                  | optional,
                no-unsupported-browser-features
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      browsers | String | optional,
                                      ignore
                                        | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                                        | std.contract.any_of
                                          [ Array Dyn, String ]
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow features that are unsupported by the browsers that you are targeting"
                  | optional,
                unicode-bom
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow Unicode BOM"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.integerRule" =
        std.contract.Sequence
            [
              std.contract.any_of [ js2n.Null, std.number.Integer, Array Dyn ],
              js2n.OneOf
                [
                  js2n.Nullable std.number.Integer,
                  std.contract.Sequence
                    [
                      js2n.array.MaxItems 2,
                      js2n.array.MinItems 2,
                      js2n.array.UniqueItems,
                      js2n.array.ArrayOf
                        (std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ])
                    ]
                ]
            ],
      "properties.stylelint.definitions.keyframeDeclaration" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                keyframe-declaration-no-important
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow !important within keyframe declarations"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.length" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                length-zero-no-unit
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow units for zero lengths"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.lightness" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                lightness-notation
                  | js2n.OneOf
                    [
                      js2n.Nullable
                        (std.contract.Sequence
                          [ std.enum.TagOrString, [| 'number, 'percentage |] ]),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable
                                (std.contract.Sequence
                                  [
                                    std.enum.TagOrString,
                                    [| 'number, 'percentage |]
                                  ]),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Specify number or percentage notation for lightness"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.lowerUpperRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [ js2n.Enum [ "lower", "upper", [  ] ], String ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [ js2n.Enum [ "lower", "upper", {} ], String ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.mediaFeature" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                media-feature-colon-space-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the colon in media features"
                  | optional,
                media-feature-colon-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the colon in media features"
                  | optional,
                media-feature-name-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for media feature names"
                  | optional,
                media-feature-name-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreMediaFeatureNames
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown media feature names"
                  | optional,
                media-feature-name-no-vendor-prefix
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow vendor prefixes for media feature names"
                  | optional,
                media-feature-name-unit-allowed-list
                  | js2n.OneOf
                    [
                      js2n.Nullable
                        (js2n.record.Record
                          {
                            additional =
                              'Some
                                  (std.contract.any_of
                                    [ String, js2n.array.ArrayOf String ]),
                            patterns = {},
                            properties = {},
                            required = {},
                          }),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable
                                (js2n.record.Record
                                  {
                                    additional =
                                      'Some
                                          (std.contract.any_of
                                            [
                                              String,
                                              js2n.array.ArrayOf String
                                            ]),
                                    patterns = {},
                                    properties = {},
                                    required = {},
                                  }),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Specify a list of allowed name and unit pairs within media features"
                  | optional,
                media-feature-name-value-no-unknown
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow unknown values for media features"
                  | optional,
                media-feature-no-missing-punctuation
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow missing punctuation for non-boolean media features"
                  | optional,
                media-feature-parentheses-space-inside
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace on the inside of the parentheses within media features"
                  | optional,
                media-feature-range-notation
                  | js2n.OneOf
                    [
                      js2n.Nullable
                        (std.contract.Sequence
                          [ std.enum.TagOrString, [| 'context, 'prefix |] ]),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable
                                (std.contract.Sequence
                                  [
                                    std.enum.TagOrString,
                                    [| 'context, 'prefix |]
                                  ]),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Specify context or prefix notation for media feature ranges"
                  | optional,
                media-feature-range-operator-space-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the range operator in media features"
                  | optional,
                media-feature-range-operator-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the range operator in media features"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.mediaQuery" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                media-query-no-invalid
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow invalid media queries"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.mediaQueryList" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                media-query-list-comma-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the commas of media query lists"
                  | optional,
                media-query-list-comma-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the commas of media query lists"
                  | optional,
                media-query-list-comma-space-after
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the commas of media query lists"
                  | optional,
                media-query-list-comma-space-before
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the commas of media query lists"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.newlineRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [
                  js2n.Enum
                    [ "always", "always-multi-line", "never-multi-line", [  ] ],
                  String
                ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum
                              [
                                "always",
                                "always-multi-line",
                                "never-multi-line",
                                {}
                              ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.newlineSpaceRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [
                  js2n.Enum
                    [
                      "always",
                      "never",
                      "always-single-line",
                      "never-single-line",
                      "always-multi-line",
                      "never-multi-line",
                      [  ]
                    ],
                  String
                ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum
                              [
                                "always",
                                "never",
                                "always-single-line",
                                "never-single-line",
                                "always-multi-line",
                                "never-multi-line",
                                {}
                              ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.newlineSpaceWithIgnoreRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [
                  js2n.Enum
                    [
                      "always",
                      "never",
                      "always-single-line",
                      "never-single-line",
                      "always-multi-line",
                      "never-multi-line",
                      [  ]
                    ],
                  String
                ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum
                              [
                                "always",
                                "always-single-line",
                                "never-single-line",
                                "always-multi-line",
                                "never-multi-line",
                                {}
                              ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            {
                              ignoreAtRules
                                | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                                | std.contract.any_of [ Array Dyn, String ]
                                | optional,
                              ..
                            }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.number" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                number-leading-zero
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow a leading zero for fractional numbers less than 1"
                  | optional,
                number-max-precision
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of decimal places allowed in numbers"
                  | optional,
                number-no-trailing-zeros
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow trailing zeros in numbers"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.objectRule" =
        std.contract.any_of
            [
              js2n.Null,
              {
                _ | std.contract.Sequence
                  [
                    refs."properties.stylelint.definitions.simpleStringOrArrayStringRule",
                    std.contract.any_of [ Array Dyn, String ]
                  ]
              },
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.Items
                    [
                      {
                        _ | std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.simpleStringOrArrayStringRule",
                            std.contract.any_of [ Array Dyn, String ]
                          ]
                      },
                      std.contract.Sequence
                        [
                          refs."properties.stylelint.definitions.coreRule",
                          { _ | Dyn }
                        ]
                    ] js2n.Always
                ]
            ],
      "properties.stylelint.definitions.property" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                property-blacklist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed properties"
                  | optional,
                property-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for properties"
                  | optional,
                property-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      checkPrefixed
                                        | Bool
                                        | doc "If `true`, this rule will check vendor-prefixed properties"
                                        | optional,
                                      ignoreProperties
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown properties"
                  | optional,
                property-no-vendor-prefix
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow vendor prefixes for properties"
                  | optional,
                property-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed properties"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.rootRule" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                root-no-standard-properties
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow standard properties inside `:root` rules"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.rule" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                rule-nested-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum
                            [
                              "always",
                              "never",
                              "always-multi-line",
                              "never-multi-line",
                              [  ]
                            ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [
                                        "always",
                                        "never",
                                        "always-multi-line",
                                        "never-multi-line",
                                        {}
                                      ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'first-nested |]
                                            ]
                                        )
                                        | doc "Reverse the primary option if the rule is the first in a block"
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'after-comment |]
                                            ]
                                        )
                                        | doc "Ignore rules that come after a comment"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before nested rules"
                  | optional,
                rule-non-nested-empty-line-before
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum
                            [
                              "always",
                              "never",
                              "always-multi-line",
                              "never-multi-line",
                              [  ]
                            ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [
                                        "always",
                                        "never",
                                        "always-multi-line",
                                        "never-multi-line",
                                        {}
                                      ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      except
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'after-single-line-comment |]
                                            ]
                                        )
                                        | doc "Reverse the primary option if the rule is the first in a block"
                                        | optional,
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'after-comment |]
                                            ]
                                        )
                                        | doc "Ignore rules that come after a comment"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require or disallow an empty line before non-nested rules"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.selector" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                selector-anb-no-unmatchable
                  | js2n.OneOf
                    [
                      js2n.Nullable (js2n.Const true),
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 1,
                          js2n.array.Items
                            [
                              js2n.Nullable (js2n.Const true),
                              std.contract.Sequence
                                [
                                  refs."properties.stylelint.definitions.coreRule",
                                  {}
                                ]
                            ] js2n.Always
                        ]
                    ]
                  | doc "Disallow unmatchable An+B selectors"
                  | optional,
                selector-attribute-brackets-space-inside
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace on the inside of the brackets within attribute selector"
                  | optional,
                selector-attribute-operator-blacklist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed attribute operators"
                  | optional,
                selector-attribute-operator-space-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after operators within attribute selectors"
                  | optional,
                selector-attribute-operator-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before operators within attribute selectors"
                  | optional,
                selector-attribute-operator-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed attribute operators"
                  | optional,
                selector-attribute-quotes
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require or disallow quotes for attribute values"
                  | optional,
                selector-class-pattern
                  | js2n.OneOf
                    [
                      js2n.Nullable String,
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          js2n.array.ArrayOf
                            (std.contract.any_of
                              [
                                String,
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    js2n.record.Record
                                      {
                                        additional = 'Some Dyn,
                                        patterns = {},
                                        properties =
                                          { resolveNestedSelectors = Bool, },
                                        required = {},
                                      }
                                  ]
                              ])
                        ]
                    ]
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a pattern for class selectors"
                  | optional,
                selector-combinator-space-after
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the combinators of selectors"
                  | optional,
                selector-combinator-space-before
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the combinators of selectors"
                  | optional,
                selector-descendant-combinator-no-non-space
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow non-space characters for descendant combinators of selectors"
                  | optional,
                selector-id-pattern
                  | refs."properties.stylelint.definitions.stringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a pattern for id selectors"
                  | optional,
                selector-max-compound-selectors
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of compound selectors in a selector"
                  | optional,
                selector-max-empty-lines
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of adjacent empty lines within selectors"
                  | optional,
                selector-max-specificity
                  | refs."properties.stylelint.definitions.stringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Limit the specificity of selectors"
                  | optional,
                selector-nested-pattern
                  | refs."properties.stylelint.definitions.stringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a pattern for the selectors of rules nested within rules"
                  | optional,
                selector-no-attribute
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow attribute selectors"
                  | optional,
                selector-no-combinator
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow combinators in selectors"
                  | optional,
                selector-no-id
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow id selectors"
                  | optional,
                selector-no-qualifying-type
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'id, 'class, 'attribute |]
                                            ]
                                        )
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow qualifying a selector by type"
                  | optional,
                selector-no-type
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignore
                                        | js2n.array.MinItems 1
                                        | js2n.array.UniqueItems
                                        | Array (
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'descendant, 'compounded |]
                                            ]
                                        )
                                        | optional,
                                      ignoreTypes
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow type selectors"
                  | optional,
                selector-no-universal
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow the universal selector"
                  | optional,
                selector-no-vendor-prefix
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow vendor prefixes for selectors"
                  | optional,
                selector-pseudo-class-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for pseudo-class selectors"
                  | optional,
                selector-pseudo-class-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignorePseudoClasses
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown pseudo-class selectors"
                  | optional,
                selector-pseudo-class-parentheses-space-inside
                  | refs."properties.stylelint.definitions.alwaysNeverRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace on the inside of the parentheses within pseudo-class selectors"
                  | optional,
                selector-pseudo-class-whitelist
                  | refs."properties.stylelint.definitions.arrayStringRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed pseudo-class selectors"
                  | optional,
                selector-pseudo-element-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for pseudo-element selectors"
                  | optional,
                selector-pseudo-element-colon-notation
                  | refs."properties.stylelint.definitions.singleDoubleRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify single or double colon notation for applicable pseudo-elements"
                  | optional,
                selector-pseudo-element-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignorePseudoElements
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown pseudo-element selectors"
                  | optional,
                selector-root-no-composition
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow the composition of :root in selectors"
                  | optional,
                selector-type-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for type selectors"
                  | optional,
                selector-type-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreTypes
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown type selectors"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.selectorList" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                selector-list-comma-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the commas of selector lists"
                  | optional,
                selector-list-comma-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the commas of selector lists"
                  | optional,
                selector-list-comma-space-after
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the commas of selector lists"
                  | optional,
                selector-list-comma-space-before
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the commas of selector lists"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.shorthandProperty" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                shorthand-property-no-redundant-values
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow redundant values in shorthand properties"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.simpleArrayStringRule" =
        std.contract.Sequence [ js2n.array.UniqueItems, Array String ],
      "properties.stylelint.definitions.simpleStringOrArrayStringRule" =
        std.contract.any_of
            [
              String,
              std.contract.Sequence
                [
                  refs."properties.stylelint.definitions.simpleArrayStringRule",
                  Array Dyn
                ]
            ],
      "properties.stylelint.definitions.singleDoubleRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [ js2n.Enum [ "single", "double", [  ] ], String ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [ js2n.Enum [ "single", "double", {} ], String ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.spaceRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [
                  js2n.Enum
                    [
                      "always",
                      "never",
                      "always-single-line",
                      "never-single-line",
                      [  ]
                    ],
                  String
                ],
              std.contract.Sequence
                [
                  js2n.array.MaxItems 2,
                  js2n.array.MinItems 2,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum
                              [
                                "always",
                                "never",
                                "always-single-line",
                                "never-single-line",
                                {}
                              ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            { _ | Dyn }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.string" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                string-no-newline
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow (unescaped) newlines in strings"
                  | optional,
                string-quotes
                  | refs."properties.stylelint.definitions.singleDoubleRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify single or double quotes around strings"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.stringRule" =
        std.contract.Sequence
            [
              js2n.OneOf
                [
                  js2n.Nullable String,
                  std.contract.Sequence
                    [
                      js2n.array.MaxItems 2,
                      js2n.array.MinItems 2,
                      js2n.array.UniqueItems,
                      js2n.array.ArrayOf
                        (std.contract.any_of
                          [
                            String,
                            std.contract.Sequence
                              [
                                refs."properties.stylelint.definitions.coreRule",
                                { _ | Dyn }
                              ]
                          ])
                    ]
                ],
              std.contract.any_of [ js2n.Null, Array Dyn, String ]
            ],
      "properties.stylelint.definitions.stylelintDisableComment" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                stylelint-disable-reason
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [
                          js2n.Enum [ "always-before", "always-after", [  ] ],
                          String
                        ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum
                                      [ "always-before", "always-after", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    { _ | Dyn }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Require a reason comment before or after `stylelint-disable` comments"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.time" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                time-no-imperceptible
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow `animation` and `transition` less than or equal to 100ms"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.unit" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                unit-blacklist
                  | refs."properties.stylelint.definitions.unitRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a blacklist of disallowed units"
                  | optional,
                unit-case
                  | refs."properties.stylelint.definitions.lowerUpperRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify lowercase or uppercase for units"
                  | optional,
                unit-no-unknown
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence [ js2n.Enum [ true, [  ] ], Bool ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [ js2n.Enum [ true, {} ], Bool ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreUnits
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Disallow unknown units"
                  | optional,
                unit-whitelist
                  | refs."properties.stylelint.definitions.unitRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Specify a whitelist of allowed units"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.unitRule" =
        std.contract.any_of
            [
              js2n.Null,
              std.contract.Sequence
                [
                  js2n.Enum
                    [
                      "em",
                      "ex",
                      "px",
                      "%",
                      "rem",
                      "vw",
                      "vh",
                      "vm",
                      "vmin",
                      "vmax",
                      "ch",
                      "in",
                      "cm",
                      "mm",
                      "q",
                      "pt",
                      "pc",
                      "deg",
                      "grad",
                      "rad",
                      "turn",
                      "ms",
                      "s",
                      "Hz",
                      "kHz",
                      "dpi",
                      "dpcm",
                      "dppx",
                      "fr",
                      [  ]
                    ],
                  String
                ],
              std.contract.Sequence
                [
                  js2n.array.MinItems 1,
                  js2n.array.UniqueItems,
                  Array (
                    std.contract.any_of
                      [
                        std.contract.Sequence
                          [
                            js2n.Enum
                              [
                                "em",
                                "ex",
                                "px",
                                "%",
                                "rem",
                                "vw",
                                "vh",
                                "vm",
                                "vmin",
                                "vmax",
                                "ch",
                                "in",
                                "cm",
                                "mm",
                                "q",
                                "pt",
                                "pc",
                                "deg",
                                "grad",
                                "rad",
                                "turn",
                                "ms",
                                "s",
                                "Hz",
                                "kHz",
                                "dpi",
                                "dpcm",
                                "dppx",
                                "fr",
                                [  ],
                                {}
                              ],
                            String
                          ],
                        std.contract.Sequence
                          [
                            js2n.array.MinItems 1,
                            js2n.array.UniqueItems,
                            Array (
                              std.contract.Sequence
                                [
                                  std.enum.TagOrString,
                                  [|
                                    'fr,
                                    'dppx,
                                    'dpcm,
                                    'dpi,
                                    'kHz,
                                    'Hz,
                                    's,
                                    'ms,
                                    'turn,
                                    'rad,
                                    'grad,
                                    'deg,
                                    'pc,
                                    'pt,
                                    'q,
                                    'mm,
                                    'cm,
                                    '"in",
                                    'ch,
                                    'vmax,
                                    'vmin,
                                    'vm,
                                    'vh,
                                    'vw,
                                    'rem,
                                    '"%",
                                    'px,
                                    'ex,
                                    'em
                                  |]
                                ]
                            )
                          ],
                        std.contract.Sequence
                          [
                            refs."properties.stylelint.definitions.coreRule",
                            {
                              ignoreProperties
                                | js2n.record.Record
                                  {
                                    additional = 'Some Dyn,
                                    patterns =
                                      {
                                          "(em|ex|ch|vw|vh|cm|mm|in|pt|pc|px|rem|vmin|vmax|%)" =
                                            std.contract.Sequence
                                                [
                                                  refs."properties.stylelint.definitions.simpleArrayStringRule",
                                                  Array Dyn
                                                ],
                                        },
                                    properties = {},
                                    required = {},
                                  }
                                | doc "Ignore units in the values of declarations with the specified properties"
                                | optional,
                              ..
                            }
                          ]
                      ]
                  )
                ]
            ],
      "properties.stylelint.definitions.value" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                value-keyword-case
                  | std.contract.any_of
                    [
                      js2n.Null,
                      std.contract.Sequence
                        [ js2n.Enum [ "lower", "upper", [  ] ], String ],
                      std.contract.Sequence
                        [
                          js2n.array.MaxItems 2,
                          js2n.array.MinItems 2,
                          js2n.array.UniqueItems,
                          Array (
                            std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    js2n.Enum [ "lower", "upper", {} ],
                                    String
                                  ],
                                std.contract.Sequence
                                  [
                                    refs."properties.stylelint.definitions.coreRule",
                                    {
                                      ignoreKeywords
                                        | refs."properties.stylelint.definitions.simpleArrayStringRule"
                                        | Array Dyn
                                        | doc "Ignore case of keywords values"
                                        | optional,
                                      ..
                                    }
                                  ]
                              ]
                          )
                        ]
                    ]
                  | doc "Specify lowercase or uppercase for keywords values"
                  | optional,
                value-no-vendor-prefix
                  | refs."properties.stylelint.definitions.booleanRule"
                  | std.contract.any_of [ js2n.Null, Bool, Array Dyn ]
                  | doc "Disallow vendor prefixes for values"
                  | optional,
                ..
              },
              Array Dyn
            ],
      "properties.stylelint.definitions.valueList" =
        std.contract.any_of
            [
              js2n.Null,
              Bool,
              Number,
              String,
              {
                value-list-comma-newline-after
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace after the commas of value lists"
                  | optional,
                value-list-comma-newline-before
                  | refs."properties.stylelint.definitions.newlineRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a newline or disallow whitespace before the commas of value lists"
                  | optional,
                value-list-comma-space-after
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace after the commas of value lists"
                  | optional,
                value-list-comma-space-before
                  | refs."properties.stylelint.definitions.spaceRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, String ]
                  | doc "Require a single space or disallow whitespace before the commas of value lists"
                  | optional,
                value-list-max-empty-lines
                  | refs."properties.stylelint.definitions.integerRule"
                  | std.contract.any_of [ js2n.Null, Array Dyn, Number ]
                  | doc "Limit the number of adjacent empty lines within value lists"
                  | optional,
                ..
              },
              Array Dyn
            ],
    }
    in
  std.contract.Sequence
      [
        std.contract.any_of
          [
            std.contract.Sequence
              [
                std.contract.not
                  (std.contract.any_of
                    [
                      js2n.Null,
                      Bool,
                      Number,
                      String,
                      js2n.record.Required
                        [ "bundleDependencies", "bundledDependencies" ],
                      Array Dyn
                    ]),
                { _ | Dyn }
              ],
            std.contract.Sequence
              [
                std.contract.not
                  (std.contract.any_of
                    [
                      js2n.Null,
                      Bool,
                      Number,
                      String,
                      js2n.record.Required [ "bundleDependencies" ],
                      Array Dyn
                    ]),
                js2n.record.Required [ "bundledDependencies" ]
              ],
            std.contract.Sequence
              [
                std.contract.not
                  (std.contract.any_of
                    [
                      js2n.Null,
                      Bool,
                      Number,
                      String,
                      js2n.record.Required [ "bundledDependencies" ],
                      Array Dyn
                    ]),
                js2n.record.Required [ "bundleDependencies" ]
              ]
          ],
        js2n.record.Record
          {
            additional = 'Some Dyn,
            patterns =
              {
                  "^_" =
                    std.contract.any_of
                        [
                          js2n.Null,
                          Bool,
                          Number,
                          String,
                          { _ | Dyn },
                          Array Dyn
                        ],
                },
            properties =
              {
                  author = refs."definitions.person",
                  ava =
                    {
                        cache
                          | Bool
                          | doc "Defaults to `true` to cache compiled files under `node_modules/.cache/ava.` If `false`, files are cached in a temporary directory instead"
                          | optional,
                        concurrency
                          | Number
                          | doc "Max number of test files running at the same time (default: CPU cores)"
                          | optional,
                        environmentVariables
                          | { _ | String }
                          | doc "Specifies environment variables to be made available to the tests. The environment variables defined here override the ones from `process.env`"
                          | optional,
                        extensions
                          | std.contract.any_of
                            [
                              refs."properties.ava.definitions.array-of-strings",
                              js2n.record.Record
                                {
                                  additional =
                                    'Some
                                        (std.contract.Sequence
                                          [
                                            std.enum.TagOrString,
                                            [| 'module, 'commonjs |]
                                          ]),
                                  patterns =
                                    { "^(c|m)?js$" = js2n.Enum [ true ], },
                                  properties = {},
                                  required = {},
                                }
                            ]
                          | doc "Extensions of test files. Setting this overrides the default `[\"cjs\", \"mjs\", \"js\"]` value, so make sure to include those extensions in the list. Experimentally you can configure how files are loaded"
                          | optional,
                        failFast
                          | Bool
                          | doc "Stop running further tests once a test fails"
                          | optional,
                        failWithoutAssertions
                          | Bool
                          | doc "If `false`, does not fail a test if it doesn't run assertions"
                          | optional,
                        files
                          | refs."properties.ava.definitions.array-of-paths"
                          | doc "An array of glob patterns to select test files. Files with an underscore prefix are ignored. By default only selects files with `cjs`, `mjs` & `js` extensions, even if the pattern matches other files. Specify `extensions` to allow other file extensions"
                          | optional,
                        ignoredByWatcher
                          | refs."properties.ava.definitions.array-of-paths"
                          | doc "An array of glob patterns to match files that, even if changed, are ignored by the watcher"
                          | optional,
                        "match"
                          | refs."properties.ava.definitions.array-of-paths"
                          | doc "Not typically useful in the `package.json` configuration, but equivalent to specifying `--match` on the CLI"
                          | optional,
                        nodeArguments
                          | refs."properties.ava.definitions.array-of-strings"
                          | doc "Configure Node.js arguments used to launch worker processes"
                          | optional,
                        require
                          | refs."properties.ava.definitions.array-of-paths"
                          | doc "Extra modules to require before tests are run. Modules are required in the worker processes"
                          | optional,
                        serial
                          | Bool
                          | doc "if `true`, prevents parallel execution of tests within a file"
                          | optional,
                        snapshotDir
                          | refs."properties.ava.definitions.path"
                          | doc "Specifies a fixed location for storing snapshot files. Use this if your snapshots are ending up in the wrong location"
                          | optional,
                        tap
                          | Bool
                          | doc "If `true`, enables the TAP reporter"
                          | optional,
                        timeout
                          | std.contract.any_of
                            [
                              js2n.number.Minimum 0,
                              js2n.string.Matches "^(\\d+)(s|m)$"
                            ]
                          | doc "Timeouts in AVA behave differently than in other test frameworks. AVA resets a timer after each test, forcing tests to quit if no new test results were received within the specified timeout. This can be used to handle stalled tests. See our timeout documentation for more options"
                          | optional,
                        typescript
                          | {
                            compile
                              | js2n.Enum [ false, "tsc" ]
                              | doc "If `false`, AVA will assume you have already compiled your project. If set to `'tsc'`, AVA will run the TypeScript compiler before running your tests. This can be inefficient when using AVA in watch mode"
                              | optional,
                            extensions
                              | refs."properties.ava.definitions.array-of-paths"
                              | doc "You can configure AVA to recognize additional file extensions as TypeScript (e.g., `[\"ts\", \"tsx\"]` to add partial JSX support). Note that the preserve mode for JSX is not (yet) supported. See also AVA's `extensions` object"
                              | optional,
                            rewritePaths
                              | js2n.record.Record
                                {
                                  additional = 'Some Dyn,
                                  patterns =
                                    { "/$" = js2n.string.Matches "/$", },
                                  properties = {},
                                  required = {},
                                }
                              | doc "AVA searches your entire project for `*.js`, `*.cjs`, `*.mjs` and `*.ts` files (or other extensions you've configured). It will ignore such files found in the `rewritePaths` targets (e.g. `build/`). If you use more specific paths, for instance `build/main/`, you may need to change AVA's `files` configuration to ignore other directories. Paths are relative to your project directory"
                              | optional,
                            ..
                          }
                          | doc "Configures @ava/typescript for projects that precompile TypeScript. Alternatively, you can use `ts-node` to do live testing without transpiling, in which case you shouldn't use the `typescript` property"
                          | optional,
                        utilizeParallelBuilds
                          | Bool
                          | doc "If `false`, disable parallel builds (default: `true`)"
                          | optional,
                        verbose
                          | Bool
                          | doc "If `true`, enables verbose output (though currently non-verbose output is not supported)"
                          | optional,
                        workerThreads
                          | Bool
                          | doc "Use worker threads to run tests (enabled by default). If `false`, tests will run in child processes"
                          | optional,
                      },
                  bin = std.contract.any_of [ String, { _ | String } ],
                  bugs =
                    std.contract.any_of
                        [
                          String,
                          {
                            email
                              | String
                              | doc "The email address to which issues should be reported."
                              | optional,
                            url
                              | String
                              | doc "The url to your project's issue tracker."
                              | optional,
                            ..
                          }
                        ],
                  bundleDependencies =
                    std.contract.any_of [ Array String, Bool ],
                  bundledDependencies =
                    std.contract.any_of [ Array String, Bool ],
                  config = {  .. },
                  contributors = Array refs."definitions.person",
                  cpu = Array String,
                  dependencies = refs."definitions.dependency",
                  description = String,
                  devDependencies = refs."definitions.devDependency",
                  devEngines =
                    {
                        cpu
                          | std.contract.any_of
                            [
                              refs."definitions.devEngineDependency",
                              Array refs."definitions.devEngineDependency"
                            ]
                          | doc "Specifies which CPU architectures are supported for development"
                          | optional,
                        libc
                          | std.contract.any_of
                            [
                              refs."definitions.devEngineDependency",
                              Array refs."definitions.devEngineDependency"
                            ]
                          | doc "Specifies which C standard libraries are supported for development"
                          | optional,
                        os
                          | std.contract.any_of
                            [
                              refs."definitions.devEngineDependency",
                              Array refs."definitions.devEngineDependency"
                            ]
                          | doc "Specifies which operating systems are supported for development"
                          | optional,
                        packageManager
                          | std.contract.any_of
                            [
                              refs."definitions.devEngineDependency",
                              Array refs."definitions.devEngineDependency"
                            ]
                          | doc "Specifies which package managers are supported for development"
                          | optional,
                        runtime
                          | std.contract.any_of
                            [
                              refs."definitions.devEngineDependency",
                              Array refs."definitions.devEngineDependency"
                            ]
                          | doc "Specifies which JavaScript runtimes (like Node.js, Deno, Bun) are supported for development. Values should use WinterCG Runtime Keys (see https://runtime-keys.proposal.wintercg.org/)"
                          | optional,
                        ..
                      },
                  directories =
                    {
                        bin
                          | String
                          | doc "If you specify a 'bin' directory, then all the files in that folder will be used as the 'bin' hash."
                          | optional,
                        "doc"
                          | String
                          | doc "Put markdown files in here. Eventually, these will be displayed nicely, maybe, someday."
                          | optional,
                        example
                          | String
                          | doc "Put example scripts in here. Someday, it might be exposed in some clever way."
                          | optional,
                        lib
                          | String
                          | doc "Tell people where the bulk of your library is. Nothing special is done with the lib folder in any way, but it's useful meta info."
                          | optional,
                        man
                          | String
                          | doc "A folder that is full of man pages. Sugar to generate a 'man' array by walking the folder."
                          | optional,
                        test | String | optional,
                        ..
                      },
                  dist =
                    {
                        shasum | String | optional,
                        tarball | String | optional,
                        ..
                      },
                  engineStrict = Bool,
                  engines =
                    js2n.record.Record
                        {
                          additional = 'Some String,
                          patterns = {},
                          properties = { node = String, },
                          required = {},
                        },
                  eslintConfig =
                    {
                        ecmaFeatures
                          | {
                            arrowFunctions | Bool | optional,
                            binaryLiterals | Bool | optional,
                            blockBindings | Bool | optional,
                            classes | Bool | optional,
                            defaultParams | Bool | optional,
                            destructuring | Bool | optional,
                            experimentalObjectRestSpread
                              | Bool
                              | doc "Enables support for the experimental object rest/spread properties (IMPORTANT: This is an experimental feature that may change significantly in the future. It's recommended that you do not write rules relying on this functionality unless you are willing to incur maintenance cost when it changes.)"
                              | optional,
                            forOf | Bool | optional,
                            generators | Bool | optional,
                            globalReturn
                              | Bool
                              | doc "allow return statements in the global scope"
                              | optional,
                            impliedStrict
                              | Bool
                              | doc "enable global strict mode (if ecmaVersion is 5 or greater)"
                              | optional,
                            jsx | Bool | doc "enable JSX" | optional,
                            modules | Bool | optional,
                            objectLiteralComputedProperties | Bool | optional,
                            objectLiteralDuplicateProperties | Bool | optional,
                            objectLiteralShorthandMethods | Bool | optional,
                            objectLiteralShorthandProperties | Bool | optional,
                            octalLiterals | Bool | optional,
                            regexUFlag | Bool | optional,
                            regexYFlag | Bool | optional,
                            restParams | Bool | optional,
                            spread | Bool | optional,
                            superInFunctions | Bool | optional,
                            templateStrings | Bool | optional,
                            unicodeCodePointEscapes | Bool | optional,
                            ..
                          }
                          | doc "By default, ESLint supports only ECMAScript 5 syntax. You can override that setting to enable support for ECMAScript 6 as well as JSX by using configuration settings."
                          | optional,
                        env
                          | {
                            amd
                              | Bool
                              | doc "defines require() and define() as global variables as per the amd spec"
                              | optional,
                            applescript
                              | Bool
                              | doc "AppleScript global variables"
                              | optional,
                            atomtest
                              | Bool
                              | doc "Atom test helper globals"
                              | optional,
                            browser
                              | Bool
                              | doc "browser global variables"
                              | optional,
                            commonjs
                              | Bool
                              | doc "CommonJS global variables and CommonJS scoping (use this for browser-only code that uses Browserify/WebPack)"
                              | optional,
                            embertest
                              | Bool
                              | doc "Ember test helper globals"
                              | optional,
                            es6
                              | Bool
                              | doc "enable all ECMAScript 6 features except for modules"
                              | optional,
                            greasemonkey
                              | Bool
                              | doc "GreaseMonkey globals"
                              | optional,
                            jasmine
                              | Bool
                              | doc "adds all of the Jasmine testing global variables for version 1.3 and 2.0"
                              | optional,
                            jest
                              | Bool
                              | doc "Jest global variables"
                              | optional,
                            jquery
                              | Bool
                              | doc "jQuery global variables"
                              | optional,
                            meteor
                              | Bool
                              | doc "Meteor global variables"
                              | optional,
                            mocha
                              | Bool
                              | doc "adds all of the Mocha test global variables"
                              | optional,
                            mongo
                              | Bool
                              | doc "MongoDB global variables"
                              | optional,
                            nashorn
                              | Bool
                              | doc "Java 8 Nashorn global variables"
                              | optional,
                            node
                              | Bool
                              | doc "Node.js global variables and Node.js scoping"
                              | optional,
                            phantomjs
                              | Bool
                              | doc "PhantomJS global variables"
                              | optional,
                            prototypejs
                              | Bool
                              | doc "Prototype.js global variables"
                              | optional,
                            protractor
                              | Bool
                              | doc "Protractor global variables"
                              | optional,
                            qunit
                              | Bool
                              | doc "QUnit global variables"
                              | optional,
                            serviceworker
                              | Bool
                              | doc "Service Worker global variables"
                              | optional,
                            shared-node-browser
                              | Bool
                              | doc "Globals common to both Node and Browser"
                              | optional,
                            shelljs
                              | Bool
                              | doc "ShellJS global variables"
                              | optional,
                            webextensions
                              | Bool
                              | doc "WebExtensions globals"
                              | optional,
                            worker
                              | Bool
                              | doc "web workers global variables"
                              | optional,
                            ..
                          }
                          | doc "An environment defines global variables that are predefined."
                          | optional,
                        extends
                          | refs."properties.eslintConfig.definitions.stringOrStringArray"
                          | doc "If you want to extend a specific configuration file, you can use the extends property and specify the path to the file. The path can be either relative or absolute."
                          | optional,
                        globals
                          | {
                            _ | std.contract.any_of
                              [
                                std.contract.Sequence
                                  [
                                    std.enum.TagOrString,
                                    [| 'off, 'writable, 'readonly |]
                                  ],
                                Bool
                              ]
                          }
                          | doc "Set each global variable name equal to true to allow the variable to be overwritten or false to disallow overwriting."
                          | optional,
                        ignorePatterns
                          | refs."properties.eslintConfig.definitions.stringOrStringArray"
                          | doc "Tell ESLint to ignore specific files and directories. Each value uses the same pattern as the `.eslintignore` file."
                          | optional,
                        noInlineConfig
                          | Bool
                          | doc "Prevent comments from changing config or rules"
                          | optional,
                        overrides
                          | Array
                            {
                              ecmaFeatures
                                | refs."properties.eslintConfig.properties.ecmaFeatures"
                                | optional,
                              env
                                | refs."properties.eslintConfig.properties.env"
                                | optional,
                              excludedFiles
                                | refs."properties.eslintConfig.definitions.stringOrStringArray"
                                | doc "If a file matches any of the 'excludedFiles' glob patterns, the 'overrides' configuration won't apply"
                                | optional,
                              extends
                                | refs."properties.eslintConfig.definitions.stringOrStringArray"
                                | doc "If you want to extend a specific configuration file, you can use the extends property and specify the path to the file. The path can be either relative or absolute."
                                | optional,
                              files
                                | std.contract.any_of
                                  [
                                    String,
                                    std.contract.Sequence
                                      [ js2n.array.MinItems 1, Array String ]
                                  ]
                                | doc "Glob pattern for files to apply 'overrides' configuration, relative to the directory of the config file",
                              globals
                                | refs."properties.eslintConfig.properties.globals"
                                | optional,
                              overrides
                                | refs."properties.eslintConfig.properties.overrides"
                                | optional,
                              parser
                                | refs."properties.eslintConfig.properties.parser"
                                | optional,
                              parserOptions
                                | refs."properties.eslintConfig.properties.parserOptions"
                                | optional,
                              plugins
                                | refs."properties.eslintConfig.properties.plugins"
                                | optional,
                              processor
                                | String
                                | doc "To specify a processor, specify the plugin name and processor name joined by a forward slash"
                                | optional,
                              rules
                                | refs."properties.eslintConfig.properties.rules"
                                | { _ | Dyn }
                                | optional,
                              settings
                                | refs."properties.eslintConfig.properties.settings"
                                | optional,
                            }
                          | doc "Allows to override configuration for files and folders, specified by glob patterns"
                          | optional,
                        parser | String | optional,
                        parserOptions
                          | {
                            ecmaFeatures
                              | refs."properties.eslintConfig.properties.ecmaFeatures"
                              | optional,
                            ecmaVersion
                              | js2n.Enum
                                [
                                  3,
                                  5,
                                  6,
                                  2015,
                                  7,
                                  2016,
                                  8,
                                  2017,
                                  9,
                                  2018,
                                  10,
                                  2019,
                                  11,
                                  2020,
                                  12,
                                  2021,
                                  13,
                                  2022,
                                  14,
                                  2023,
                                  15,
                                  2024,
                                  "latest"
                                ]
                              | doc "Set to 3, 5 (default), 6, 7, 8, 9, 10, 11, 12, 13, 14, or 15 to specify the version of ECMAScript syntax you want to use. You can also set it to 2015 (same as 6), 2016 (same as 7), 2017 (same as 8), 2018 (same as 9), 2019 (same as 10), 2020 (same as 11), 2021 (same as 12), 2022 (same as 13), 2023 (same as 14), or 2024 (same as 15) to use the year-based naming. You can also set \"latest\" to use the most recently supported version."
                              | optional,
                            sourceType
                              | std.enum.TagOrString
                              | [| 'commonjs, 'module, 'script |]
                              | doc "set to \"script\" (default), \"commonjs\", or \"module\" if your code is in ECMAScript modules"
                              | optional,
                            ..
                          }
                          | doc "The JavaScript language options to be supported"
                          | optional,
                        plugins
                          | Array String
                          | doc "ESLint supports the use of third-party plugins. Before using the plugin, you have to install it using npm."
                          | optional,
                        reportUnusedDisableDirectives
                          | Bool
                          | doc "Report unused eslint-disable comments"
                          | optional,
                        root
                          | Bool
                          | doc "By default, ESLint will look for configuration files in all parent folders up to the root directory. This can be useful if you want all of your projects to follow a certain convention, but can sometimes lead to unexpected results. To limit ESLint to a specific project, set this to `true` in a configuration in the root of your project."
                          | optional,
                        rules
                          | refs."properties.eslintConfig.definitions.possibleErrors"
                          | refs."properties.eslintConfig.definitions.bestPractices"
                          | refs."properties.eslintConfig.definitions.strictMode"
                          | refs."properties.eslintConfig.definitions.variables"
                          | refs."properties.eslintConfig.definitions.nodeAndCommonJs"
                          | refs."properties.eslintConfig.definitions.stylisticIssues"
                          | refs."properties.eslintConfig.definitions.ecmaScript6"
                          | refs."properties.eslintConfig.definitions.legacy"
                          | {
                            "@angular-eslint/component-class-suffix"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            suffixes | Array String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Classes decorated with @Component must have suffix "Component" (or custom) in their name. See more at https://angular.dev/style-guide#style-02-03
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-class-suffix.md
                              "%
                              | optional,
                            "@angular-eslint/component-max-inline-declarations"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            animations
                                              | js2n.number.Minimum 0
                                              | optional,
                                            styles
                                              | js2n.number.Minimum 0
                                              | optional,
                                            template
                                              | js2n.number.Minimum 0
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforces a maximum number of lines in inline template, styles and animations. See more at https://angular.dev/style-guide#style-05-04
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-max-inline-declarations.md
                              "%
                              | optional,
                            "@angular-eslint/component-selector"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            prefix
                                              | std.contract.any_of
                                                [ Array Dyn, String ]
                                              | optional,
                                            style
                                              | std.enum.TagOrString
                                              | [| 'kebab-case, 'camelCase |]
                                              | optional,
                                            type
                                              | std.contract.any_of
                                                [
                                                  String,
                                                  Array (
                                                    std.contract.Sequence
                                                      [
                                                        std.enum.TagOrString,
                                                        [|
                                                          'attribute,
                                                          'element
                                                        |]
                                                      ]
                                                  )
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Component selectors should follow given naming rules. See more at https://angular.dev/style-guide#style-02-07, https://angular.dev/style-guide#style-05-02
                                      and https://angular.dev/style-guide#style-05-03.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-selector.md
                              "%
                              | optional,
                            "@angular-eslint/consistent-component-styles"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensures consistent usage of `styles`/`styleUrls`/`styleUrl` within Component metadata
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/consistent-component-styles.md
                              "%
                              | optional,
                            "@angular-eslint/contextual-decorator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that classes use contextual decorators in its body
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-decorator.md
                              "%
                              | optional,
                            "@angular-eslint/contextual-lifecycle"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that lifecycle methods are used in a correct context
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-lifecycle.md
                              "%
                              | optional,
                            "@angular-eslint/directive-class-suffix"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            suffixes | Array String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Classes decorated with @Directive must have suffix "Directive" (or custom) in their name. See more at https://angular.dev/style-guide#style-02-03
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-class-suffix.md
                              "%
                              | optional,
                            "@angular-eslint/directive-selector"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            prefix
                                              | std.contract.any_of
                                                [ Array Dyn, String ]
                                              | optional,
                                            style
                                              | std.enum.TagOrString
                                              | [| 'kebab-case, 'camelCase |]
                                              | optional,
                                            type
                                              | std.contract.any_of
                                                [
                                                  String,
                                                  Array (
                                                    std.contract.Sequence
                                                      [
                                                        std.enum.TagOrString,
                                                        [|
                                                          'attribute,
                                                          'element
                                                        |]
                                                      ]
                                                  )
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Directive selectors should follow given naming rules. See more at https://angular.dev/style-guide#style-02-06 and https://angular.dev/style-guide#style-02-08.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-selector.md
                              "%
                              | optional,
                            "@angular-eslint/no-async-lifecycle-method"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Angular Lifecycle methods should not be async. Angular does not wait for async lifecycle but the code incorrectly suggests it does.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-async-lifecycle-method.md
                              "%
                              | optional,
                            "@angular-eslint/no-attribute-decorator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                The @Attribute decorator is used to obtain a single value for an attribute. This is a much less common use-case than getting a stream of values (using @Input), so often the @Attribute decorator is mistakenly used when @Input was what was intended. This rule disallows usage of @Attribute decorator altogether in order to prevent these mistakes.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-attribute-decorator.md
                              "%
                              | optional,
                            "@angular-eslint/no-conflicting-lifecycle"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that directives not implement conflicting lifecycle interfaces.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-conflicting-lifecycle.md
                              "%
                              | optional,
                            "@angular-eslint/no-duplicates-in-metadata-arrays"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that metadata arrays do not contain duplicate entries.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-duplicates-in-metadata-arrays.md
                              "%
                              | optional,
                            "@angular-eslint/no-empty-lifecycle-method"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows declaring empty lifecycle methods
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-empty-lifecycle-method.md
                              "%
                              | optional,
                            "@angular-eslint/no-forward-ref"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows usage of `forwardRef` references for DI
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-forward-ref.md
                              "%
                              | optional,
                            "@angular-eslint/no-host-metadata-property"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { allowStatic | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallows usage of the `host` metadata property. NOTE: This used to be recommended by the Angular Team, but now they recommend the exact opposite: https://github.com/angular/angular/issues/54284
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-host-metadata-property.md
                              "%
                              | optional,
                            "@angular-eslint/no-input-prefix"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            prefixes | Array String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensures that input bindings, including aliases, are not named or prefixed by the configured disallowed prefixes
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-input-prefix.md
                              "%
                              | optional,
                            "@angular-eslint/no-input-rename"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowedNames
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | doc "A list with allowed input names"
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensures that input bindings are not aliased
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-input-rename.md
                              "%
                              | optional,
                            "@angular-eslint/no-inputs-metadata-property"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows usage of the `inputs` metadata property. See more at https://angular.dev/style-guide#style-05-12
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-inputs-metadata-property.md
                              "%
                              | optional,
                            "@angular-eslint/no-lifecycle-call"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows explicit calls to lifecycle methods
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-lifecycle-call.md
                              "%
                              | optional,
                            "@angular-eslint/no-output-native"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that output bindings, including aliases, are not named as standard DOM events
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-native.md
                              "%
                              | optional,
                            "@angular-eslint/no-output-on-prefix"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that output bindings, including aliases, are not named "on", nor prefixed with it. See more at https://angular.dev/style-guide#style-05-16
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-on-prefix.md
                              "%
                              | optional,
                            "@angular-eslint/no-output-rename"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that output bindings are not aliased
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-rename.md
                              "%
                              | optional,
                            "@angular-eslint/no-outputs-metadata-property"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows usage of the `outputs` metadata property. See more at https://angular.dev/style-guide#style-05-12
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-outputs-metadata-property.md
                              "%
                              | optional,
                            "@angular-eslint/no-pipe-impure"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows the declaration of impure pipes
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-pipe-impure.md
                              "%
                              | optional,
                            "@angular-eslint/no-queries-metadata-property"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows usage of the `queries` metadata property. See more at https://angular.dev/style-guide#style-05-12.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-queries-metadata-property.md
                              "%
                              | optional,
                            "@angular-eslint/pipe-prefix"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            prefixes
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent prefix for pipes.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/pipe-prefix.md
                              "%
                              | optional,
                            "@angular-eslint/prefer-on-push-component-change-detection"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures component's `changeDetection` is set to `ChangeDetectionStrategy.OnPush`
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-on-push-component-change-detection.md
                              "%
                              | optional,
                            "@angular-eslint/prefer-output-readonly"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer to declare `@Output` as `readonly` since they are not supposed to be reassigned
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-output-readonly.md
                              "%
                              | optional,
                            "@angular-eslint/prefer-standalone"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures component, directive and pipe `standalone` property is set to `true` in the component decorator
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-standalone.md
                              "%
                              | optional,
                            "@angular-eslint/prefer-standalone-component"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures component `standalone` property is set to `true` in the component decorator
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-standalone-component.md
                              "%
                              | optional,
                            "@angular-eslint/relative-url-prefix"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                The ./ and ../ prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix. See more at https://angular.dev/style-guide#style-05-04
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/relative-url-prefix.md
                              "%
                              | optional,
                            "@angular-eslint/require-localize-metadata"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            requireDescription
                                              | Bool
                                              | optional,
                                            requireMeaning | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensures that $localize tagged messages contain helpful metadata to aid with translations.
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/require-localize-metadata.md
                              "%
                              | optional,
                            "@angular-eslint/sort-lifecycle-methods"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that lifecycle methods are declared in order of execution
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/sort-lifecycle-methods.md
                              "%
                              | optional,
                            "@angular-eslint/sort-ngmodule-metadata-arrays"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            locale
                                              | String
                                              | doc "A string with a BCP 47 language tag."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensures ASC alphabetical order for `NgModule` metadata arrays for easy visual scanning
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/sort-ngmodule-metadata-arrays.md
                              "%
                              | optional,
                            "@angular-eslint/use-component-selector"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Component selector must be declared
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-selector.md
                              "%
                              | optional,
                            "@angular-eslint/use-component-view-encapsulation"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallows using `ViewEncapsulation.None`
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-view-encapsulation.md
                              "%
                              | optional,
                            "@angular-eslint/use-injectable-provided-in"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreClassNamePattern
                                              | String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Using the `providedIn` property makes `Injectables` tree-shakable
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-injectable-provided-in.md
                              "%
                              | optional,
                            "@angular-eslint/use-lifecycle-interface"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that classes implement lifecycle interfaces corresponding to the declared lifecycle methods. See more at https://angular.dev/style-guide#style-09-01
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-lifecycle-interface.md
                              "%
                              | optional,
                            "@angular-eslint/use-pipe-transform-interface"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensures that `Pipes` implement `PipeTransform` interface
                                https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-pipe-transform-interface.md
                              "%
                              | optional,
                            "@typescript-eslint/adjacent-overload-signatures"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require that function overload signatures be consecutive
                                https://typescript-eslint.io/rules/adjacent-overload-signatures
                              "%
                              | optional,
                            "@typescript-eslint/array-type"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            "default"
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "The array type expected for mutable cases."
                                              | optional,
                                            readonly
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "The array type expected for readonly cases. If omitted, the value for `default` will be used."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require consistently using either `T[]` or `Array<T>` for arrays
                                https://typescript-eslint.io/rules/array-type
                              "%
                              | optional,
                            "@typescript-eslint/await-thenable"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow awaiting a value that is not a Thenable
                                https://typescript-eslint.io/rules/await-thenable
                              "%
                              | optional,
                            "@typescript-eslint/ban-ts-comment"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            minimumDescriptionLength
                                              | Number
                                              | optional,
                                            ts-check | js2n.Always | optional,
                                            ts-expect-error
                                              | js2n.Always
                                              | optional,
                                            ts-ignore | js2n.Always | optional,
                                            ts-nocheck | js2n.Always | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow `@ts-<directive>` comments or require descriptions after directives
                                https://typescript-eslint.io/rules/ban-ts-comment
                              "%
                              | optional,
                            "@typescript-eslint/ban-tslint-comment"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow `// tslint:<rule-flag>` comments
                                https://typescript-eslint.io/rules/ban-tslint-comment
                              "%
                              | optional,
                            "@typescript-eslint/ban-types"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            extendDefaults | Bool | optional,
                                            types | {  .. } | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow certain types
                                https://typescript-eslint.io/rules/ban-types
                              "%
                              | optional,
                            "@typescript-eslint/block-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow or enforce spaces inside of blocks after opening block and before closing block
                                https://typescript-eslint.io/rules/block-spacing
                              "%
                              | optional,
                            "@typescript-eslint/brace-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent brace style for blocks
                                https://typescript-eslint.io/rules/brace-style
                              "%
                              | optional,
                            "@typescript-eslint/class-literal-property-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce that literals on classes are exposed in a consistent style
                                https://typescript-eslint.io/rules/class-literal-property-style
                              "%
                              | optional,
                            "@typescript-eslint/class-methods-use-this"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            enforceForClassFields
                                              | Bool
                                              | doc "Enforces that functions used as instance field initializers utilize `this`"
                                              | optional,
                                            exceptMethods
                                              | Array String
                                              | doc "Allows specified method names to be ignored with this rule"
                                              | optional,
                                            ignoreClassesThatImplementAnInterface
                                              | std.contract.any_of
                                                [
                                                  Bool,
                                                  std.contract.Sequence
                                                    [
                                                      std.enum.TagOrString,
                                                      [| 'public-fields |]
                                                    ]
                                                ]
                                              | doc "Ignore classes that specifically implement some interface"
                                              | optional,
                                            ignoreOverrideMethods
                                              | Bool
                                              | doc "Ignore members marked with the `override` modifier"
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce that class methods utilize `this`
                                https://typescript-eslint.io/rules/class-methods-use-this
                              "%
                              | optional,
                            "@typescript-eslint/comma-dangle"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow trailing commas
                                https://typescript-eslint.io/rules/comma-dangle
                              "%
                              | optional,
                            "@typescript-eslint/comma-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before and after commas
                                https://typescript-eslint.io/rules/comma-spacing
                              "%
                              | optional,
                            "@typescript-eslint/consistent-generic-constructors"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce specifying generic type arguments on type annotation or constructor name of a constructor call
                                https://typescript-eslint.io/rules/consistent-generic-constructors
                              "%
                              | optional,
                            "@typescript-eslint/consistent-indexed-object-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'index-signature, 'record |]
                                            ]
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require or disallow the `Record` type
                                https://typescript-eslint.io/rules/consistent-indexed-object-style
                              "%
                              | optional,
                            "@typescript-eslint/consistent-return"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            treatUndefinedAsUnspecified
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require `return` statements to either always or never specify values
                                https://typescript-eslint.io/rules/consistent-return
                              "%
                              | optional,
                            "@typescript-eslint/consistent-type-assertions"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent usage of type assertions
                                https://typescript-eslint.io/rules/consistent-type-assertions
                              "%
                              | optional,
                            "@typescript-eslint/consistent-type-definitions"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'type, 'interface |]
                                            ]
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce type definitions to consistently use either `interface` or `type`
                                https://typescript-eslint.io/rules/consistent-type-definitions
                              "%
                              | optional,
                            "@typescript-eslint/consistent-type-exports"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            fixMixedExportsWithInlineTypeSpecifier
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent usage of type exports
                                https://typescript-eslint.io/rules/consistent-type-exports
                              "%
                              | optional,
                            "@typescript-eslint/consistent-type-imports"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            disallowTypeAnnotations
                                              | Bool
                                              | optional,
                                            fixStyle
                                              | std.enum.TagOrString
                                              | [|
                                                'inline-type-imports,
                                                'separate-type-imports
                                              |]
                                              | optional,
                                            prefer
                                              | std.enum.TagOrString
                                              | [|
                                                'no-type-imports,
                                                'type-imports
                                              |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent usage of type imports
                                https://typescript-eslint.io/rules/consistent-type-imports
                              "%
                              | optional,
                            "@typescript-eslint/default-param-last"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce default parameters to be last
                                https://typescript-eslint.io/rules/default-param-last
                              "%
                              | optional,
                            "@typescript-eslint/dot-notation"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowIndexSignaturePropertyAccess
                                              | Bool
                                              | optional,
                                            allowKeywords | Bool | optional,
                                            allowPattern | String | optional,
                                            allowPrivateClassPropertyAccess
                                              | Bool
                                              | optional,
                                            allowProtectedClassPropertyAccess
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce dot notation whenever possible
                                https://typescript-eslint.io/rules/dot-notation
                              "%
                              | optional,
                            "@typescript-eslint/explicit-function-return-type"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowConciseArrowFunctionExpressionsStartingWithVoid
                                              | Bool
                                              | doc "Whether to allow arrow functions that start with the `void` keyword."
                                              | optional,
                                            allowDirectConstAssertionInArrowFunctions
                                              | Bool
                                              | doc "Whether to ignore arrow functions immediately returning a `as const` value."
                                              | optional,
                                            allowExpressions
                                              | Bool
                                              | doc "Whether to ignore function expressions (functions which are not part of a declaration)."
                                              | optional,
                                            allowFunctionsWithoutTypeParameters
                                              | Bool
                                              | doc "Whether to ignore functions that don't have generic type parameters."
                                              | optional,
                                            allowHigherOrderFunctions
                                              | Bool
                                              | doc "Whether to ignore functions immediately returning another function expression."
                                              | optional,
                                            allowIIFEs
                                              | Bool
                                              | doc "Whether to ignore immediately invoked function expressions (IIFEs)."
                                              | optional,
                                            allowTypedFunctionExpressions
                                              | Bool
                                              | doc "Whether to ignore type annotations on the variable of function expressions."
                                              | optional,
                                            allowedNames
                                              | Array String
                                              | doc "An array of function/method names that will not have their arguments or return values checked."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require explicit return types on functions and class methods
                                https://typescript-eslint.io/rules/explicit-function-return-type
                              "%
                              | optional,
                            "@typescript-eslint/explicit-member-accessibility"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            accessibility
                                              | js2n.Always
                                              | optional,
                                            ignoredMethodNames
                                              | Array String
                                              | optional,
                                            overrides
                                              | {
                                                accessors
                                                  | js2n.Always
                                                  | optional,
                                                constructors
                                                  | js2n.Always
                                                  | optional,
                                                methods
                                                  | js2n.Always
                                                  | optional,
                                                parameterProperties
                                                  | js2n.Always
                                                  | optional,
                                                properties
                                                  | js2n.Always
                                                  | optional,
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require explicit accessibility modifiers on class properties and methods
                                https://typescript-eslint.io/rules/explicit-member-accessibility
                              "%
                              | optional,
                            "@typescript-eslint/explicit-module-boundary-types"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowArgumentsExplicitlyTypedAsAny
                                              | Bool
                                              | doc "Whether to ignore arguments that are explicitly typed as `any`."
                                              | optional,
                                            allowDirectConstAssertionInArrowFunctions
                                              | Bool
                                              | doc m%"
                                                Whether to ignore return type annotations on body-less arrow functions that return an `as const` type assertion.
                                                You must still type the parameters of the function.
                                              "%
                                              | optional,
                                            allowHigherOrderFunctions
                                              | Bool
                                              | doc m%"
                                                Whether to ignore return type annotations on functions immediately returning another function expression.
                                                You must still type the parameters of the function.
                                              "%
                                              | optional,
                                            allowTypedFunctionExpressions
                                              | Bool
                                              | doc "Whether to ignore type annotations on the variable of a function expression."
                                              | optional,
                                            allowedNames
                                              | Array String
                                              | doc "An array of function/method names that will not have their arguments or return values checked."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require explicit return and argument types on exported functions' and classes' public class methods
                                https://typescript-eslint.io/rules/explicit-module-boundary-types
                              "%
                              | optional,
                            "@typescript-eslint/func-call-spacing"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow spacing between function identifiers and their invocations
                                https://typescript-eslint.io/rules/func-call-spacing
                              "%
                              | optional,
                            "@typescript-eslint/indent"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent indentation
                                https://typescript-eslint.io/rules/indent
                              "%
                              | optional,
                            "@typescript-eslint/init-declarations"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow initialization in variable declarations
                                https://typescript-eslint.io/rules/init-declarations
                              "%
                              | optional,
                            "@typescript-eslint/key-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing between property names and type annotations in types and interfaces
                                https://typescript-eslint.io/rules/key-spacing
                              "%
                              | optional,
                            "@typescript-eslint/keyword-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            overrides
                                              | {
                                                abstract
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                as
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                async
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                await
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                boolean
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                break
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                byte
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                case
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                catch
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                char
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                class
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                const
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                continue
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                debugger
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "default"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                delete
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                do
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                double
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "else"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                enum
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                export
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                extends
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "false"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                final
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                finally
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                float
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                for
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                from
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                function
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                get
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                goto
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "if"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                implements
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "import"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "in"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                instanceof
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                int
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                interface
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "let"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                long
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                native
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                new
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "null"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                of
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                package
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                private
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                protected
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                public
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                return
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                set
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                short
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                static
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                super
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                switch
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                synchronized
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                this
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                throw
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                throws
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                transient
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "true"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                try
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                type
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                typeof
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                var
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                void
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                volatile
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                while
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                with
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                yield
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before and after keywords
                                https://typescript-eslint.io/rules/keyword-spacing
                              "%
                              | optional,
                            "@typescript-eslint/lines-around-comment"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            afterBlockComment | Bool | optional,
                                            afterLineComment | Bool | optional,
                                            allowArrayEnd | Bool | optional,
                                            allowArrayStart | Bool | optional,
                                            allowBlockEnd | Bool | optional,
                                            allowBlockStart | Bool | optional,
                                            allowClassEnd | Bool | optional,
                                            allowClassStart | Bool | optional,
                                            allowEnumEnd | Bool | optional,
                                            allowEnumStart | Bool | optional,
                                            allowInterfaceEnd | Bool | optional,
                                            allowInterfaceStart
                                              | Bool
                                              | optional,
                                            allowModuleEnd | Bool | optional,
                                            allowModuleStart | Bool | optional,
                                            allowObjectEnd | Bool | optional,
                                            allowObjectStart | Bool | optional,
                                            allowTypeEnd | Bool | optional,
                                            allowTypeStart | Bool | optional,
                                            applyDefaultIgnorePatterns
                                              | Bool
                                              | optional,
                                            beforeBlockComment
                                              | Bool
                                              | optional,
                                            beforeLineComment | Bool | optional,
                                            ignorePattern | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require empty lines around comments
                                https://typescript-eslint.io/rules/lines-around-comment
                              "%
                              | optional,
                            "@typescript-eslint/lines-between-class-members"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require or disallow an empty line between class members
                                https://typescript-eslint.io/rules/lines-between-class-members
                              "%
                              | optional,
                            "@typescript-eslint/max-params"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            countVoidThis | Bool | optional,
                                            max
                                              | std.number.Integer
                                              | js2n.number.Minimum 0
                                              | optional,
                                            maximum
                                              | std.number.Integer
                                              | js2n.number.Minimum 0
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a maximum number of parameters in function definitions
                                https://typescript-eslint.io/rules/max-params
                              "%
                              | optional,
                            "@typescript-eslint/member-delimiter-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            multiline
                                              | {
                                                delimiter
                                                  | js2n.Always
                                                  | optional,
                                                requireLast | Bool | optional,
                                              }
                                              | optional,
                                            multilineDetection
                                              | std.enum.TagOrString
                                              | [| 'last-member, 'brackets |]
                                              | optional,
                                            overrides
                                              | {
                                                interface
                                                  | js2n.Always
                                                  | optional,
                                                typeLiteral
                                                  | js2n.Always
                                                  | optional,
                                              }
                                              | optional,
                                            singleline
                                              | {
                                                delimiter
                                                  | js2n.Always
                                                  | optional,
                                                requireLast | Bool | optional,
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require a specific member delimiter style for interfaces and type literals
                                https://typescript-eslint.io/rules/member-delimiter-style
                              "%
                              | optional,
                            "@typescript-eslint/member-ordering"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            classExpressions
                                              | js2n.Always
                                              | optional,
                                            classes | js2n.Always | optional,
                                            "default" | js2n.Always | optional,
                                            interfaces | js2n.Always | optional,
                                            typeLiterals
                                              | js2n.Always
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require a consistent member declaration order
                                https://typescript-eslint.io/rules/member-ordering
                              "%
                              | optional,
                            "@typescript-eslint/method-signature-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce using a particular method signature syntax
                                https://typescript-eslint.io/rules/method-signature-style
                              "%
                              | optional,
                            "@typescript-eslint/naming-convention"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce naming conventions for everything across a codebase
                                https://typescript-eslint.io/rules/naming-convention
                              "%
                              | optional,
                            "@typescript-eslint/no-array-constructor"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow generic `Array` constructors
                                https://typescript-eslint.io/rules/no-array-constructor
                              "%
                              | optional,
                            "@typescript-eslint/no-array-delete"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow using the `delete` operator on array values
                                https://typescript-eslint.io/rules/no-array-delete
                              "%
                              | optional,
                            "@typescript-eslint/no-base-to-string"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoredTypeNames
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require `.toString()` to only be called on objects which provide useful information when stringified
                                https://typescript-eslint.io/rules/no-base-to-string
                              "%
                              | optional,
                            "@typescript-eslint/no-confusing-non-null-assertion"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow non-null assertion in locations that may be confusing
                                https://typescript-eslint.io/rules/no-confusing-non-null-assertion
                              "%
                              | optional,
                            "@typescript-eslint/no-confusing-void-expression"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreArrowShorthand
                                              | Bool
                                              | optional,
                                            ignoreVoidOperator
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require expressions of type void to appear in statement position
                                https://typescript-eslint.io/rules/no-confusing-void-expression
                              "%
                              | optional,
                            "@typescript-eslint/no-dupe-class-members"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow duplicate class members
                                https://typescript-eslint.io/rules/no-dupe-class-members
                              "%
                              | optional,
                            "@typescript-eslint/no-duplicate-enum-values"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow duplicate enum member values
                                https://typescript-eslint.io/rules/no-duplicate-enum-values
                              "%
                              | optional,
                            "@typescript-eslint/no-duplicate-type-constituents"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreIntersections
                                              | Bool
                                              | optional,
                                            ignoreUnions | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow duplicate constituents of union or intersection types
                                https://typescript-eslint.io/rules/no-duplicate-type-constituents
                              "%
                              | optional,
                            "@typescript-eslint/no-dynamic-delete"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow using the `delete` operator on computed key expressions
                                https://typescript-eslint.io/rules/no-dynamic-delete
                              "%
                              | optional,
                            "@typescript-eslint/no-empty-function"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'overrideMethods,
                                                      'decoratedFunctions,
                                                      'asyncMethods,
                                                      'asyncFunctions,
                                                      'protected-constructors,
                                                      'private-constructors,
                                                      'constructors,
                                                      'setters,
                                                      'getters,
                                                      'generatorMethods,
                                                      'methods,
                                                      'generatorFunctions,
                                                      'arrowFunctions,
                                                      'functions
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow empty functions
                                https://typescript-eslint.io/rules/no-empty-function
                              "%
                              | optional,
                            "@typescript-eslint/no-empty-interface"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowSingleExtends
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the declaration of empty interfaces
                                https://typescript-eslint.io/rules/no-empty-interface
                              "%
                              | optional,
                            "@typescript-eslint/no-explicit-any"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            fixToUnknown
                                              | Bool
                                              | doc "Whether to enable auto-fixing in which the `any` type is converted to the `unknown` type."
                                              | optional,
                                            ignoreRestArgs
                                              | Bool
                                              | doc "Whether to ignore rest parameter arrays."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the `any` type
                                https://typescript-eslint.io/rules/no-explicit-any
                              "%
                              | optional,
                            "@typescript-eslint/no-extra-non-null-assertion"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow extra non-null assertions
                                https://typescript-eslint.io/rules/no-extra-non-null-assertion
                              "%
                              | optional,
                            "@typescript-eslint/no-extra-parens"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary parentheses
                                https://typescript-eslint.io/rules/no-extra-parens
                              "%
                              | optional,
                            "@typescript-eslint/no-extra-semi"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary semicolons
                                https://typescript-eslint.io/rules/no-extra-semi
                              "%
                              | optional,
                            "@typescript-eslint/no-extraneous-class"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowConstructorOnly
                                              | Bool
                                              | doc "Whether to allow extraneous classes that contain only a constructor."
                                              | optional,
                                            allowEmpty
                                              | Bool
                                              | doc "Whether to allow extraneous classes that have no body (i.e. are empty)."
                                              | optional,
                                            allowStaticOnly
                                              | Bool
                                              | doc "Whether to allow extraneous classes that only contain static members."
                                              | optional,
                                            allowWithDecorator
                                              | Bool
                                              | doc "Whether to allow extraneous classes that include a decorator."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow classes used as namespaces
                                https://typescript-eslint.io/rules/no-extraneous-class
                              "%
                              | optional,
                            "@typescript-eslint/no-floating-promises"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowForKnownSafePromises
                                              | Array (
                                                js2n.OneOf
                                                  [
                                                    String,
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [|
                                                                        'file
                                                                      |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                              path = String,
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                            },
                                                      },
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [| 'lib |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                            },
                                                      },
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [|
                                                                        'package
                                                                      |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                              package = String,
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                              package = true,
                                                            },
                                                      }
                                                  ]
                                              )
                                              | optional,
                                            ignoreIIFE
                                              | Bool
                                              | doc "Whether to ignore async IIFEs (Immediately Invoked Function Expressions)."
                                              | optional,
                                            ignoreVoid
                                              | Bool
                                              | doc "Whether to ignore `void` expressions."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require Promise-like statements to be handled appropriately
                                https://typescript-eslint.io/rules/no-floating-promises
                              "%
                              | optional,
                            "@typescript-eslint/no-for-in-array"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow iterating over an array with a for-in loop
                                https://typescript-eslint.io/rules/no-for-in-array
                              "%
                              | optional,
                            "@typescript-eslint/no-implied-eval"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow the use of `eval()`-like methods
                                https://typescript-eslint.io/rules/no-implied-eval
                              "%
                              | optional,
                            "@typescript-eslint/no-import-type-side-effects"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers
                                https://typescript-eslint.io/rules/no-import-type-side-effects
                              "%
                              | optional,
                            "@typescript-eslint/no-inferrable-types"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreParameters | Bool | optional,
                                            ignoreProperties | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean
                                https://typescript-eslint.io/rules/no-inferrable-types
                              "%
                              | optional,
                            "@typescript-eslint/no-invalid-this"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            capIsConstructor | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow `this` keywords outside of classes or class-like objects
                                https://typescript-eslint.io/rules/no-invalid-this
                              "%
                              | optional,
                            "@typescript-eslint/no-invalid-void-type"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAsThisParameter
                                              | Bool
                                              | optional,
                                            allowInGenericTypeArguments
                                              | std.contract.any_of
                                                [
                                                  Bool,
                                                  std.contract.Sequence
                                                    [
                                                      js2n.array.MinItems 1,
                                                      Array String
                                                    ]
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow `void` type outside of generic or return types
                                https://typescript-eslint.io/rules/no-invalid-void-type
                              "%
                              | optional,
                            "@typescript-eslint/no-loop-func"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow function declarations that contain unsafe references inside loop statements
                                https://typescript-eslint.io/rules/no-loop-func
                              "%
                              | optional,
                            "@typescript-eslint/no-loss-of-precision"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow literal numbers that lose precision
                                https://typescript-eslint.io/rules/no-loss-of-precision
                              "%
                              | optional,
                            "@typescript-eslint/no-magic-numbers"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            detectObjects | Bool | optional,
                                            enforceConst | Bool | optional,
                                            ignore
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.any_of
                                                  [
                                                    Number,
                                                    js2n.string.Matches
                                                      "^[+-]?(?:0|[1-9][0-9]*)n$"
                                                  ]
                                              )
                                              | optional,
                                            ignoreArrayIndexes
                                              | Bool
                                              | optional,
                                            ignoreClassFieldInitialValues
                                              | Bool
                                              | optional,
                                            ignoreDefaultValues
                                              | Bool
                                              | optional,
                                            ignoreEnums | Bool | optional,
                                            ignoreNumericLiteralTypes
                                              | Bool
                                              | optional,
                                            ignoreReadonlyClassProperties
                                              | Bool
                                              | optional,
                                            ignoreTypeIndexes | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow magic numbers
                                https://typescript-eslint.io/rules/no-magic-numbers
                              "%
                              | optional,
                            "@typescript-eslint/no-meaningless-void-operator"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { checkNever | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the `void` operator except when used to discard a value
                                https://typescript-eslint.io/rules/no-meaningless-void-operator
                              "%
                              | optional,
                            "@typescript-eslint/no-misused-new"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce valid definition of `new` and `constructor`
                                https://typescript-eslint.io/rules/no-misused-new
                              "%
                              | optional,
                            "@typescript-eslint/no-misused-promises"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checksConditionals
                                              | Bool
                                              | optional,
                                            checksSpreads | Bool | optional,
                                            checksVoidReturn
                                              | std.contract.any_of
                                                [
                                                  Bool,
                                                  {
                                                    arguments | Bool | optional,
                                                    attributes
                                                      | Bool
                                                      | optional,
                                                    properties
                                                      | Bool
                                                      | optional,
                                                    returns | Bool | optional,
                                                    variables | Bool | optional,
                                                  }
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow Promises in places not designed to handle them
                                https://typescript-eslint.io/rules/no-misused-promises
                              "%
                              | optional,
                            "@typescript-eslint/no-mixed-enums"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow enums from having both number and string members
                                https://typescript-eslint.io/rules/no-mixed-enums
                              "%
                              | optional,
                            "@typescript-eslint/no-namespace"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowDeclarations
                                              | Bool
                                              | doc "Whether to allow `declare` with custom TypeScript namespaces."
                                              | optional,
                                            allowDefinitionFiles
                                              | Bool
                                              | doc "Whether to allow `declare` with custom TypeScript namespaces inside definition files."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow TypeScript namespaces
                                https://typescript-eslint.io/rules/no-namespace
                              "%
                              | optional,
                            "@typescript-eslint/no-non-null-asserted-nullish-coalescing"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow non-null assertions in the left operand of a nullish coalescing operator
                                https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing
                              "%
                              | optional,
                            "@typescript-eslint/no-non-null-asserted-optional-chain"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow non-null assertions after an optional chain expression
                                https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain
                              "%
                              | optional,
                            "@typescript-eslint/no-non-null-assertion"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow non-null assertions using the `!` postfix operator
                                https://typescript-eslint.io/rules/no-non-null-assertion
                              "%
                              | optional,
                            "@typescript-eslint/no-redeclare"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            builtinGlobals | Bool | optional,
                                            ignoreDeclarationMerge
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow variable redeclaration
                                https://typescript-eslint.io/rules/no-redeclare
                              "%
                              | optional,
                            "@typescript-eslint/no-redundant-type-constituents"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow members of unions and intersections that do nothing or override type information
                                https://typescript-eslint.io/rules/no-redundant-type-constituents
                              "%
                              | optional,
                            "@typescript-eslint/no-require-imports"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | Array String
                                              | doc "Patterns of import paths to allow requiring from."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow invocation of `require()`
                                https://typescript-eslint.io/rules/no-require-imports
                              "%
                              | optional,
                            "@typescript-eslint/no-restricted-imports"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow specified modules when loaded by `import`
                                https://typescript-eslint.io/rules/no-restricted-imports
                              "%
                              | optional,
                            "@typescript-eslint/no-shadow"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow | Array String | optional,
                                            builtinGlobals | Bool | optional,
                                            hoist
                                              | std.enum.TagOrString
                                              | [| 'never, 'functions, 'all |]
                                              | optional,
                                            ignoreFunctionTypeParameterNameValueShadow
                                              | Bool
                                              | optional,
                                            ignoreOnInitialization
                                              | Bool
                                              | optional,
                                            ignoreTypeValueShadow
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow variable declarations from shadowing variables declared in the outer scope
                                https://typescript-eslint.io/rules/no-shadow
                              "%
                              | optional,
                            "@typescript-eslint/no-this-alias"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowDestructuring
                                              | Bool
                                              | doc "Whether to ignore destructurings, such as `const { props, state } = this`."
                                              | optional,
                                            allowedNames
                                              | Array String
                                              | doc "Names to ignore, such as [\"self\"] for `const self = this;`."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow aliasing `this`
                                https://typescript-eslint.io/rules/no-this-alias
                              "%
                              | optional,
                            "@typescript-eslint/no-throw-literal"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowThrowingAny | Bool | optional,
                                            allowThrowingUnknown
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow throwing literals as exceptions
                                https://typescript-eslint.io/rules/no-throw-literal
                              "%
                              | optional,
                            "@typescript-eslint/no-type-alias"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAliases
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow direct one-to-one type aliases."
                                              | optional,
                                            allowCallbacks
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases for callbacks."
                                              | optional,
                                            allowConditionalTypes
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases for conditional types."
                                              | optional,
                                            allowConstructors
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases with constructors."
                                              | optional,
                                            allowGenerics
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases with generic types."
                                              | optional,
                                            allowLiterals
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases with object literal types."
                                              | optional,
                                            allowMappedTypes
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases with mapped types."
                                              | optional,
                                            allowTupleTypes
                                              | std.contract.any_of
                                                [
                                                  js2n.Null,
                                                  Bool,
                                                  Number,
                                                  String,
                                                  { _ | Dyn },
                                                  Array Dyn
                                                ]
                                              | doc "Whether to allow type aliases with tuple types."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow type aliases
                                https://typescript-eslint.io/rules/no-type-alias
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-boolean-literal-compare"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowComparingNullableBooleansToFalse
                                              | Bool
                                              | doc "Whether to allow comparisons between nullable boolean variables and `false`."
                                              | optional,
                                            allowComparingNullableBooleansToTrue
                                              | Bool
                                              | doc "Whether to allow comparisons between nullable boolean variables and `true`."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow unnecessary equality comparisons against boolean literals
                                https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-condition"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowConstantLoopConditions
                                              | Bool
                                              | doc "Whether to ignore constant loop conditions, such as `while (true)`."
                                              | optional,
                                            allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                              | Bool
                                              | doc "Whether to not error when running with a tsconfig that has strictNullChecks turned."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow conditionals where the type is always truthy or always falsy
                                https://typescript-eslint.io/rules/no-unnecessary-condition
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-qualifier"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary namespace qualifiers
                                https://typescript-eslint.io/rules/no-unnecessary-qualifier
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-template-expression"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary template expressions
                                https://typescript-eslint.io/rules/no-unnecessary-template-expression
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-type-arguments"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow type arguments that are equal to the default
                                https://typescript-eslint.io/rules/no-unnecessary-type-arguments
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-type-assertion"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            typesToIgnore
                                              | Array String
                                              | doc "A list of type names to ignore."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow type assertions that do not change the type of an expression
                                https://typescript-eslint.io/rules/no-unnecessary-type-assertion
                              "%
                              | optional,
                            "@typescript-eslint/no-unnecessary-type-constraint"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary constraints on generic types
                                https://typescript-eslint.io/rules/no-unnecessary-type-constraint
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-argument"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow calling a function with a value with type `any`
                                https://typescript-eslint.io/rules/no-unsafe-argument
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-assignment"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow assigning a value with type `any` to variables and properties
                                https://typescript-eslint.io/rules/no-unsafe-assignment
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-call"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow calling a value with type `any`
                                https://typescript-eslint.io/rules/no-unsafe-call
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-declaration-merging"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unsafe declaration merging
                                https://typescript-eslint.io/rules/no-unsafe-declaration-merging
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-enum-comparison"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow comparing an enum value with a non-enum value
                                https://typescript-eslint.io/rules/no-unsafe-enum-comparison
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-member-access"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow member access on a value with type `any`
                                https://typescript-eslint.io/rules/no-unsafe-member-access
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-return"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow returning a value with type `any` from a function
                                https://typescript-eslint.io/rules/no-unsafe-return
                              "%
                              | optional,
                            "@typescript-eslint/no-unsafe-unary-minus"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require unary negation to take a number
                                https://typescript-eslint.io/rules/no-unsafe-unary-minus
                              "%
                              | optional,
                            "@typescript-eslint/no-unused-expressions"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowShortCircuit | Bool | optional,
                                            allowTaggedTemplates
                                              | Bool
                                              | optional,
                                            allowTernary | Bool | optional,
                                            enforceForJSX | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow unused expressions
                                https://typescript-eslint.io/rules/no-unused-expressions
                              "%
                              | optional,
                            "@typescript-eslint/no-unused-vars"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow unused variables
                                https://typescript-eslint.io/rules/no-unused-vars
                              "%
                              | optional,
                            "@typescript-eslint/no-use-before-define"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the use of variables before they are defined
                                https://typescript-eslint.io/rules/no-use-before-define
                              "%
                              | optional,
                            "@typescript-eslint/no-useless-constructor"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary constructors
                                https://typescript-eslint.io/rules/no-useless-constructor
                              "%
                              | optional,
                            "@typescript-eslint/no-useless-empty-export"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow empty exports that don't change anything in a module file
                                https://typescript-eslint.io/rules/no-useless-empty-export
                              "%
                              | optional,
                            "@typescript-eslint/no-useless-template-literals"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary template expressions
                                https://typescript-eslint.io/rules/no-useless-template-literals
                              "%
                              | optional,
                            "@typescript-eslint/no-var-requires"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | Array String
                                              | doc "Patterns of import paths to allow requiring from."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow `require` statements except in import statements
                                https://typescript-eslint.io/rules/no-var-requires
                              "%
                              | optional,
                            "@typescript-eslint/non-nullable-type-assertion-style"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce non-null assertions over explicit type casts
                                https://typescript-eslint.io/rules/non-nullable-type-assertion-style
                              "%
                              | optional,
                            "@typescript-eslint/object-curly-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing inside braces
                                https://typescript-eslint.io/rules/object-curly-spacing
                              "%
                              | optional,
                            "@typescript-eslint/only-throw-error"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowThrowingAny | Bool | optional,
                                            allowThrowingUnknown
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow throwing non-`Error` values as exceptions
                                https://typescript-eslint.io/rules/only-throw-error
                              "%
                              | optional,
                            "@typescript-eslint/padding-line-between-statements"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow padding lines between statements
                                https://typescript-eslint.io/rules/padding-line-between-statements
                              "%
                              | optional,
                            "@typescript-eslint/parameter-properties"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | Array js2n.Always
                                              | optional,
                                            prefer
                                              | std.enum.TagOrString
                                              | [|
                                                'parameter-property,
                                                'class-property
                                              |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require or disallow parameter properties in class constructors
                                https://typescript-eslint.io/rules/parameter-properties
                              "%
                              | optional,
                            "@typescript-eslint/prefer-as-const"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of `as const` over literal type
                                https://typescript-eslint.io/rules/prefer-as-const
                              "%
                              | optional,
                            "@typescript-eslint/prefer-destructuring"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require destructuring from arrays and/or objects
                                https://typescript-eslint.io/rules/prefer-destructuring
                              "%
                              | optional,
                            "@typescript-eslint/prefer-enum-initializers"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require each enum member value to be explicitly initialized
                                https://typescript-eslint.io/rules/prefer-enum-initializers
                              "%
                              | optional,
                            "@typescript-eslint/prefer-find"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result
                                https://typescript-eslint.io/rules/prefer-find
                              "%
                              | optional,
                            "@typescript-eslint/prefer-for-of"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of `for-of` loop over the standard `for` loop where possible
                                https://typescript-eslint.io/rules/prefer-for-of
                              "%
                              | optional,
                            "@typescript-eslint/prefer-function-type"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using function types instead of interfaces with call signatures
                                https://typescript-eslint.io/rules/prefer-function-type
                              "%
                              | optional,
                            "@typescript-eslint/prefer-includes"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce `includes` method over `indexOf` method
                                https://typescript-eslint.io/rules/prefer-includes
                              "%
                              | optional,
                            "@typescript-eslint/prefer-literal-enum-member"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowBitwiseExpressions
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require all enum members to be literal values
                                https://typescript-eslint.io/rules/prefer-literal-enum-member
                              "%
                              | optional,
                            "@typescript-eslint/prefer-namespace-keyword"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules
                                https://typescript-eslint.io/rules/prefer-namespace-keyword
                              "%
                              | optional,
                            "@typescript-eslint/prefer-nullish-coalescing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                              | Bool
                                              | optional,
                                            ignoreConditionalTests
                                              | Bool
                                              | optional,
                                            ignoreMixedLogicalExpressions
                                              | Bool
                                              | optional,
                                            ignorePrimitives
                                              | std.contract.any_of
                                                [
                                                  {
                                                    bigint | Bool | optional,
                                                    boolean | Bool | optional,
                                                    number | Bool | optional,
                                                    string | Bool | optional,
                                                    ..
                                                  },
                                                  js2n.Enum [ true ]
                                                ]
                                              | optional,
                                            ignoreTernaryTests
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce using the nullish coalescing operator instead of logical assignments or chaining
                                https://typescript-eslint.io/rules/prefer-nullish-coalescing
                              "%
                              | optional,
                            "@typescript-eslint/prefer-optional-chain"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowPotentiallyUnsafeFixesThatModifyTheReturnTypeIKnowWhatImDoing
                                              | Bool
                                              | doc "Allow autofixers that will change the return type of the expression. This option is considered unsafe as it may break the build."
                                              | optional,
                                            checkAny
                                              | Bool
                                              | doc "Check operands that are typed as `any` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            checkBigInt
                                              | Bool
                                              | doc "Check operands that are typed as `bigint` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            checkBoolean
                                              | Bool
                                              | doc "Check operands that are typed as `boolean` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            checkNumber
                                              | Bool
                                              | doc "Check operands that are typed as `number` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            checkString
                                              | Bool
                                              | doc "Check operands that are typed as `string` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            checkUnknown
                                              | Bool
                                              | doc "Check operands that are typed as `unknown` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            requireNullish
                                              | Bool
                                              | doc "Skip operands that are not typed with `null` and/or `undefined` when inspecting \"loose boolean\" operands."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects
                                https://typescript-eslint.io/rules/prefer-optional-chain
                              "%
                              | optional,
                            "@typescript-eslint/prefer-promise-reject-errors"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowEmptyReject | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require using Error objects as Promise rejection reasons
                                https://typescript-eslint.io/rules/prefer-promise-reject-errors
                              "%
                              | optional,
                            "@typescript-eslint/prefer-readonly"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            onlyInlineLambdas | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require private members to be marked as `readonly` if they're never modified outside of the constructor
                                https://typescript-eslint.io/rules/prefer-readonly
                              "%
                              | optional,
                            "@typescript-eslint/prefer-readonly-parameter-types"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | Array (
                                                js2n.OneOf
                                                  [
                                                    String,
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [|
                                                                        'file
                                                                      |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                              path = String,
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                            },
                                                      },
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [| 'lib |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                            },
                                                      },
                                                    js2n.record.Record
                                                      {
                                                        additional = 'None,
                                                        patterns = {},
                                                        properties =
                                                          {
                                                              from =
                                                                std.contract.Sequence
                                                                    [
                                                                      std.enum.TagOrString,
                                                                      [|
                                                                        'package
                                                                      |]
                                                                    ],
                                                              name =
                                                                std.contract.any_of
                                                                    [
                                                                      String,
                                                                      std.contract.Sequence
                                                                        [
                                                                          js2n.array.MinItems
                                                                            1,
                                                                          js2n.array.UniqueItems,
                                                                          js2n.array.ArrayOf
                                                                            String
                                                                        ]
                                                                    ],
                                                              package = String,
                                                            },
                                                        required =
                                                          {
                                                              from = true,
                                                              name = true,
                                                              package = true,
                                                            },
                                                      }
                                                  ]
                                              )
                                              | optional,
                                            checkParameterProperties
                                              | Bool
                                              | optional,
                                            ignoreInferredTypes
                                              | Bool
                                              | optional,
                                            treatMethodsAsReadonly
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs
                                https://typescript-eslint.io/rules/prefer-readonly-parameter-types
                              "%
                              | optional,
                            "@typescript-eslint/prefer-reduce-type-parameter"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using type parameter when calling `Array#reduce` instead of casting
                                https://typescript-eslint.io/rules/prefer-reduce-type-parameter
                              "%
                              | optional,
                            "@typescript-eslint/prefer-regexp-exec"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce `RegExp#exec` over `String#match` if no global flag is provided
                                https://typescript-eslint.io/rules/prefer-regexp-exec
                              "%
                              | optional,
                            "@typescript-eslint/prefer-return-this-type"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce that `this` is used when only `this` type is returned
                                https://typescript-eslint.io/rules/prefer-return-this-type
                              "%
                              | optional,
                            "@typescript-eslint/prefer-string-starts-ends-with"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowSingleElementEquality
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | doc "Whether to allow equality checks against the first or last element of a string."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings
                                https://typescript-eslint.io/rules/prefer-string-starts-ends-with
                              "%
                              | optional,
                            "@typescript-eslint/prefer-ts-expect-error"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using `@ts-expect-error` over `@ts-ignore`
                                https://typescript-eslint.io/rules/prefer-ts-expect-error
                              "%
                              | optional,
                            "@typescript-eslint/promise-function-async"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAny
                                              | Bool
                                              | doc "Whether to consider `any` and `unknown` to be Promises."
                                              | optional,
                                            allowedPromiseNames
                                              | Array String
                                              | doc "Any extra names of classes or interfaces to be considered Promises."
                                              | optional,
                                            checkArrowFunctions
                                              | Bool
                                              | optional,
                                            checkFunctionDeclarations
                                              | Bool
                                              | optional,
                                            checkFunctionExpressions
                                              | Bool
                                              | optional,
                                            checkMethodDeclarations
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require any function or method that returns a Promise to be marked async
                                https://typescript-eslint.io/rules/promise-function-async
                              "%
                              | optional,
                            "@typescript-eslint/quotes"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 3,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          std.contract.Sequence
                                            [
                                              std.enum.TagOrString,
                                              [| 'backtick, 'single, 'double |]
                                            ],
                                          {
                                            allowTemplateLiterals
                                              | Bool
                                              | doc "allows strings to use backticks"
                                              | optional,
                                            avoid-escape
                                              | Bool
                                              | doc "Deprecated: The object property avoid-escape is deprecated; please use the object property avoidEscape instead."
                                              | optional,
                                            avoidEscape
                                              | Bool
                                              | doc "allows strings to use single-quotes or double-quotes so long as the string contains a quote that would have to be escaped otherwise"
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce the consistent use of either backticks, double, or single quotes
                                https://typescript-eslint.io/rules/quotes
                              "%
                              | optional,
                            "@typescript-eslint/require-array-sort-compare"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreStringArrays
                                              | Bool
                                              | doc "Whether to ignore arrays in which all elements are strings."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require `Array#sort` and `Array#toSorted` calls to always provide a `compareFunction`
                                https://typescript-eslint.io/rules/require-array-sort-compare
                              "%
                              | optional,
                            "@typescript-eslint/require-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow async functions which do not return promises and have no `await` expression
                                https://typescript-eslint.io/rules/require-await
                              "%
                              | optional,
                            "@typescript-eslint/restrict-plus-operands"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAny
                                              | Bool
                                              | doc "Whether to allow `any` typed values."
                                              | optional,
                                            allowBoolean
                                              | Bool
                                              | doc "Whether to allow `boolean` typed values."
                                              | optional,
                                            allowNullish
                                              | Bool
                                              | doc "Whether to allow potentially `null` or `undefined` typed values."
                                              | optional,
                                            allowNumberAndString
                                              | Bool
                                              | doc "Whether to allow `bigint`/`number` typed values and `string` typed values to be added together."
                                              | optional,
                                            allowRegExp
                                              | Bool
                                              | doc "Whether to allow `regexp` typed values."
                                              | optional,
                                            skipCompoundAssignments
                                              | Bool
                                              | doc "Whether to skip compound assignments such as `+=`."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require both operands of addition to be the same type and be `bigint`, `number`, or `string`
                                https://typescript-eslint.io/rules/restrict-plus-operands
                              "%
                              | optional,
                            "@typescript-eslint/restrict-template-expressions"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAny
                                              | Bool
                                              | doc "Whether to allow `any` typed values in template expressions."
                                              | optional,
                                            allowArray
                                              | Bool
                                              | doc "Whether to allow `array` typed values in template expressions."
                                              | optional,
                                            allowBoolean
                                              | Bool
                                              | doc "Whether to allow `boolean` typed values in template expressions."
                                              | optional,
                                            allowNever
                                              | Bool
                                              | doc "Whether to allow `never` typed values in template expressions."
                                              | optional,
                                            allowNullish
                                              | Bool
                                              | doc "Whether to allow `nullish` typed values in template expressions."
                                              | optional,
                                            allowNumber
                                              | Bool
                                              | doc "Whether to allow `number` typed values in template expressions."
                                              | optional,
                                            allowRegExp
                                              | Bool
                                              | doc "Whether to allow `regexp` typed values in template expressions."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce template literal expressions to be of `string` type
                                https://typescript-eslint.io/rules/restrict-template-expressions
                              "%
                              | optional,
                            "@typescript-eslint/return-await"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          js2n.OneOf
                                            [
                                              js2n.Const "never",
                                              js2n.Const
                                                "error-handling-correctness-only",
                                              js2n.Const "in-try-catch",
                                              js2n.Const "always"
                                            ]
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent awaiting of returned promises
                                https://typescript-eslint.io/rules/return-await
                              "%
                              | optional,
                            "@typescript-eslint/semi"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow semicolons instead of ASI
                                https://typescript-eslint.io/rules/semi
                              "%
                              | optional,
                            "@typescript-eslint/sort-type-constituents"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            caseSensitive
                                              | Bool
                                              | doc "Whether to sort using case sensitive sorting."
                                              | optional,
                                            checkIntersections
                                              | Bool
                                              | doc "Whether to check intersection types."
                                              | optional,
                                            checkUnions
                                              | Bool
                                              | doc "Whether to check union types."
                                              | optional,
                                            groupOrder
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'union,
                                                      'tuple,
                                                      'operator,
                                                      'object,
                                                      'named,
                                                      'literal,
                                                      'nullish,
                                                      'keyword,
                                                      'intersection,
                                                      '"import",
                                                      'function,
                                                      'conditional
                                                    |]
                                                  ]
                                              )
                                              | doc "Ordering of the groups."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce constituents of a type union/intersection to be sorted alphabetically
                                https://typescript-eslint.io/rules/sort-type-constituents
                              "%
                              | optional,
                            "@typescript-eslint/space-before-blocks"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before blocks
                                https://typescript-eslint.io/rules/space-before-blocks
                              "%
                              | optional,
                            "@typescript-eslint/space-before-function-paren"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before function parenthesis
                                https://typescript-eslint.io/rules/space-before-function-paren
                              "%
                              | optional,
                            "@typescript-eslint/space-infix-ops"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { int32Hint | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require spacing around infix operators
                                https://typescript-eslint.io/rules/space-infix-ops
                              "%
                              | optional,
                            "@typescript-eslint/strict-boolean-expressions"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAny | Bool | optional,
                                            allowNullableBoolean
                                              | Bool
                                              | optional,
                                            allowNullableEnum | Bool | optional,
                                            allowNullableNumber
                                              | Bool
                                              | optional,
                                            allowNullableObject
                                              | Bool
                                              | optional,
                                            allowNullableString
                                              | Bool
                                              | optional,
                                            allowNumber | Bool | optional,
                                            allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing
                                              | Bool
                                              | optional,
                                            allowString | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow certain types in boolean expressions
                                https://typescript-eslint.io/rules/strict-boolean-expressions
                              "%
                              | optional,
                            "@typescript-eslint/switch-exhaustiveness-check"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowDefaultCaseForExhaustiveSwitch
                                              | Bool
                                              | doc "If 'true', allow 'default' cases on switch statements with exhaustive cases."
                                              | optional,
                                            requireDefaultForNonUnion
                                              | Bool
                                              | doc "If 'true', require a 'default' clause for switches on non-union types."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require switch-case statements to be exhaustive
                                https://typescript-eslint.io/rules/switch-exhaustiveness-check
                              "%
                              | optional,
                            "@typescript-eslint/triple-slash-reference"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            lib
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            path
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            types
                                              | std.enum.TagOrString
                                              | [|
                                                'prefer-import,
                                                'never,
                                                'always
                                              |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow certain triple slash directives in favor of ES6-style import declarations
                                https://typescript-eslint.io/rules/triple-slash-reference
                              "%
                              | optional,
                            "@typescript-eslint/type-annotation-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            overrides
                                              | {
                                                arrow | js2n.Always | optional,
                                                colon | js2n.Always | optional,
                                                parameter
                                                  | js2n.Always
                                                  | optional,
                                                property
                                                  | js2n.Always
                                                  | optional,
                                                returnType
                                                  | js2n.Always
                                                  | optional,
                                                variable
                                                  | js2n.Always
                                                  | optional,
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require consistent spacing around type annotations
                                https://typescript-eslint.io/rules/type-annotation-spacing
                              "%
                              | optional,
                            "@typescript-eslint/typedef"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            arrayDestructuring
                                              | Bool
                                              | optional,
                                            arrowParameter | Bool | optional,
                                            memberVariableDeclaration
                                              | Bool
                                              | optional,
                                            objectDestructuring
                                              | Bool
                                              | optional,
                                            parameter | Bool | optional,
                                            propertyDeclaration
                                              | Bool
                                              | optional,
                                            variableDeclaration
                                              | Bool
                                              | optional,
                                            variableDeclarationIgnoreFunction
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require type annotations in certain places
                                https://typescript-eslint.io/rules/typedef
                              "%
                              | optional,
                            "@typescript-eslint/unbound-method"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreStatic
                                              | Bool
                                              | doc "Whether to skip checking whether `static` methods are correctly bound."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce unbound methods are called with their expected scope
                                https://typescript-eslint.io/rules/unbound-method
                              "%
                              | optional,
                            "@typescript-eslint/unified-signatures"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreDifferentlyNamedParameters
                                              | Bool
                                              | doc "Whether two parameters with different names at the same index should be considered different even if their types are the same."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow two overloads that could be unified into one with a union or an optional/rest parameter
                                https://typescript-eslint.io/rules/unified-signatures
                              "%
                              | optional,
                            "@typescript-eslint/use-unknown-in-catch-callback-variable"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce typing arguments in `.catch()` callbacks as `unknown`
                                https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable
                              "%
                              | optional,
                            "eslint-plugin-import/consistent-type-specifier-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce or ban the use of inline type-only markers for named imports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/consistent-type-specifier-style.md
                              "%
                              | optional,
                            "eslint-plugin-import/default"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensure a default export is present, given a default import.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/default.md
                              "%
                              | optional,
                            "eslint-plugin-import/dynamic-import-chunkname"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            importFunctions
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            webpackChunknameFormat
                                              | String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a leading comment with the webpackChunkName for dynamic imports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/dynamic-import-chunkname.md
                              "%
                              | optional,
                            "eslint-plugin-import/export"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid any invalid exports, i.e. re-export of the same name.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/export.md
                              "%
                              | optional,
                            "eslint-plugin-import/exports-last"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensure all exports appear after other statements.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/exports-last.md
                              "%
                              | optional,
                            "eslint-plugin-import/extensions"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Ensure consistent use of file extension within the import path.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/extensions.md
                              "%
                              | optional,
                            "eslint-plugin-import/first"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensure all imports appear before other statements.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/first.md
                              "%
                              | optional,
                            "eslint-plugin-import/group-exports"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer named exports to be grouped together in a single export declaration
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/group-exports.md
                              "%
                              | optional,
                            "eslint-plugin-import/imports-first"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Replaced by `import/first`.
                                https://github.com/import-js/eslint-plugin-import/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md
                              "%
                              | optional,
                            "eslint-plugin-import/max-dependencies"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreTypeImports | Bool | optional,
                                            max | Number | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce the maximum number of dependencies a module can have.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/max-dependencies.md
                              "%
                              | optional,
                            "eslint-plugin-import/named"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { commonjs | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensure named imports correspond to a named export in the remote file.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/named.md
                              "%
                              | optional,
                            "eslint-plugin-import/namespace"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowComputed
                                              | Bool
                                              | doc "If `false`, will report computed (and thus, un-lintable) references to namespace members."
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensure imported namespaces contain dereferenced properties as they are dereferenced.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/namespace.md
                              "%
                              | optional,
                            "eslint-plugin-import/newline-after-import"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            considerComments | Bool | optional,
                                            count
                                              | std.number.Integer
                                              | js2n.number.Minimum 1
                                              | optional,
                                            exactCount | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a newline after import statements.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/newline-after-import.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-absolute-path"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            amd | Bool | optional,
                                            commonjs | Bool | optional,
                                            esmodule | Bool | optional,
                                            ignore
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid import of modules using absolute paths.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-absolute-path.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-amd"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid AMD `require` and `define` calls.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-amd.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-anonymous-default-export"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAnonymousClass
                                              | Bool
                                              | doc "If `false`, will report default export of an anonymous class"
                                              | optional,
                                            allowAnonymousFunction
                                              | Bool
                                              | doc "If `false`, will report default export of an anonymous function"
                                              | optional,
                                            allowArray
                                              | Bool
                                              | doc "If `false`, will report default export of an array"
                                              | optional,
                                            allowArrowFunction
                                              | Bool
                                              | doc "If `false`, will report default export of an arrow function"
                                              | optional,
                                            allowCallExpression
                                              | Bool
                                              | doc "If `false`, will report default export of a function call"
                                              | optional,
                                            allowLiteral
                                              | Bool
                                              | doc "If `false`, will report default export of a literal"
                                              | optional,
                                            allowNew
                                              | Bool
                                              | doc "If `false`, will report default export of a class instantiation"
                                              | optional,
                                            allowObject
                                              | Bool
                                              | doc "If `false`, will report default export of an object expression"
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid anonymous values as default exports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-anonymous-default-export.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-commonjs"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid CommonJS `require` calls and `module.exports` or `exports.*`.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-commonjs.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-cycle"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowUnsafeDynamicCyclicDependency
                                              | Bool
                                              | doc "Allow cyclic dependency if there is at least one dynamic import in the chain"
                                              | optional,
                                            amd | Bool | optional,
                                            commonjs | Bool | optional,
                                            esmodule | Bool | optional,
                                            ignore
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ignoreExternal
                                              | Bool
                                              | doc "ignore external modules"
                                              | optional,
                                            maxDepth
                                              | std.contract.any_of
                                                [
                                                  std.contract.Sequence
                                                    [
                                                      std.number.Integer,
                                                      js2n.number.Minimum 1
                                                    ],
                                                  std.contract.Sequence
                                                    [
                                                      std.enum.TagOrString,
                                                      [| '"∞" |]
                                                    ]
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid a module from importing a module with a dependency path back to itself.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-cycle.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-default-export"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid default exports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-default-export.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-deprecated"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid imported names marked with `@deprecated` documentation tag.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-deprecated.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-duplicates"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            considerQueryString
                                              | Bool
                                              | optional,
                                            prefer-inline | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid repeated import of the same module in multiple places.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-duplicates.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-dynamic-require"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { esmodule | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid `require()` calls with expressions.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-dynamic-require.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-empty-named-blocks"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid empty named import blocks.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-empty-named-blocks.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-extraneous-dependencies"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            bundledDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            devDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            includeInternal | Bool | optional,
                                            includeTypes | Bool | optional,
                                            optionalDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            packageDir
                                              | std.contract.any_of
                                                [ String, Array js2n.Always ]
                                              | optional,
                                            peerDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid the use of extraneous packages.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-extraneous-dependencies.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-import-module-exports"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            exceptions | Array Dyn | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid import statements with CommonJS module.exports.
                                
                              "%
                              | optional,
                            "eslint-plugin-import/no-internal-modules"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid importing the submodules of other modules.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-internal-modules.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-mutable-exports"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid the use of mutable exports with `var` or `let`.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-mutable-exports.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-named-as-default"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid use of exported name as identifier of default export.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-named-as-default-member"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid use of exported name as property of default export.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default-member.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-named-default"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid named default exports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-default.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-named-export"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid named exports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-export.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-namespace"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignore
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid namespace (a.k.a. "wildcard" `*`) imports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-namespace.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-nodejs-modules"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid Node.js builtin modules.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-nodejs-modules.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-relative-packages"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            amd | Bool | optional,
                                            commonjs | Bool | optional,
                                            esmodule | Bool | optional,
                                            ignore
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid importing packages through relative paths.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-relative-packages.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-relative-parent-imports"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            amd | Bool | optional,
                                            commonjs | Bool | optional,
                                            esmodule | Bool | optional,
                                            ignore
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid importing modules from parent directories.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-relative-parent-imports.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-restricted-paths"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            basePath | String | optional,
                                            zones
                                              | js2n.array.MinItems 1
                                              | Array
                                                {
                                                  except
                                                    | js2n.array.UniqueItems
                                                    | Array String
                                                    | optional,
                                                  from
                                                    | std.contract.any_of
                                                      [
                                                        String,
                                                        std.contract.Sequence
                                                          [
                                                            js2n.array.MinItems
                                                              1,
                                                            js2n.array.UniqueItems,
                                                            Array String
                                                          ]
                                                      ]
                                                    | optional,
                                                  message | String | optional,
                                                  target
                                                    | std.contract.any_of
                                                      [
                                                        String,
                                                        std.contract.Sequence
                                                          [
                                                            js2n.array.MinItems
                                                              1,
                                                            js2n.array.UniqueItems,
                                                            Array String
                                                          ]
                                                      ]
                                                    | optional,
                                                }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce which files can be imported in a given folder.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-restricted-paths.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-self-import"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid a module from importing itself.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-self-import.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-unassigned-import"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow | Array String | optional,
                                            devDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            optionalDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            peerDependencies
                                              | std.contract.any_of
                                                [ Bool, Array js2n.Always ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid unassigned imports
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unassigned-import.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-unresolved"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            amd | Bool | optional,
                                            caseSensitive | Bool | optional,
                                            caseSensitiveStrict
                                              | Bool
                                              | optional,
                                            commonjs | Bool | optional,
                                            esmodule | Bool | optional,
                                            ignore
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Ensure imports point to a file/module that can be resolved.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unresolved.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-unused-modules"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreExports
                                              | js2n.array.UniqueItems
                                              | Array (js2n.string.MinLength 1)
                                              | doc "files/paths for which unused exports will not be reported (e.g module entry points)"
                                              | optional,
                                            missingExports
                                              | Bool
                                              | doc "report modules without any exports"
                                              | optional,
                                            src
                                              | js2n.array.UniqueItems
                                              | Array (js2n.string.MinLength 1)
                                              | doc "files/paths to be analyzed (only for unused exports)"
                                              | optional,
                                            unusedExports
                                              | Bool
                                              | doc "report exports without any usage"
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid modules without exports, or exports without matching import in another module.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-unused-modules.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-useless-path-segments"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            commonjs | Bool | optional,
                                            noUselessIndex | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Forbid unnecessary path segments in import and require statements.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-useless-path-segments.md
                              "%
                              | optional,
                            "eslint-plugin-import/no-webpack-loader-syntax"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid webpack loader syntax in imports.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-webpack-loader-syntax.md
                              "%
                              | optional,
                            "eslint-plugin-import/order"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            alphabetize
                                              | {
                                                caseInsensitive
                                                  | Bool
                                                  | optional,
                                                order
                                                  | std.enum.TagOrString
                                                  | [| 'desc, 'asc, 'ignore |]
                                                  | optional,
                                                orderImportKind
                                                  | std.enum.TagOrString
                                                  | [| 'desc, 'asc, 'ignore |]
                                                  | optional,
                                              }
                                              | optional,
                                            distinctGroup | Bool | optional,
                                            groups | Array Dyn | optional,
                                            newlines-between
                                              | std.enum.TagOrString
                                              | [|
                                                'never,
                                                'always-and-inside-groups,
                                                'always,
                                                'ignore
                                              |]
                                              | optional,
                                            pathGroups
                                              | Array
                                                {
                                                  group
                                                    | std.enum.TagOrString
                                                    | [|
                                                      'type,
                                                      'object,
                                                      'index,
                                                      'sibling,
                                                      'parent,
                                                      'unknown,
                                                      'internal,
                                                      'external,
                                                      'builtin
                                                    |],
                                                  pattern | String,
                                                  patternOptions
                                                    | { _ | Dyn }
                                                    | optional,
                                                  position
                                                    | std.enum.TagOrString
                                                    | [| 'before, 'after |]
                                                    | optional,
                                                }
                                              | optional,
                                            pathGroupsExcludedImportTypes
                                              | Array Dyn
                                              | optional,
                                            warnOnUnassignedImports
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a convention in module import order.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/order.md
                              "%
                              | optional,
                            "eslint-plugin-import/prefer-default-export"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            target
                                              | std.enum.TagOrString
                                              | [| 'any, 'single |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer a default export if module exports a single name or multiple names.
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/prefer-default-export.md
                              "%
                              | optional,
                            "eslint-plugin-import/unambiguous"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Forbid potentially ambiguous parse goal (`script` vs. `module`).
                                https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/unambiguous.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/better-regex"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            sortCharacterClasses
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Improve regexes by making them shorter, consistent, and safer.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/better-regex.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/catch-error-name"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignore
                                              | js2n.array.UniqueItems
                                              | optional,
                                            name | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a specific parameter name in catch clauses.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/catch-error-name.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/consistent-destructuring"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Use destructured variables over properties.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-destructuring.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/consistent-empty-array-spread"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer consistent types when spreading a ternary in an array literal.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-empty-array-spread.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/consistent-function-scoping"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkArrowFunctions
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Move function definitions to the highest possible scope.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/consistent-function-scoping.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/custom-error-definition"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce correct `Error` subclassing.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/custom-error-definition.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/empty-brace-spaces"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce no spaces between braces.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/empty-brace-spaces.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/error-message"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce passing a `message` value when creating a built-in error.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/error-message.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/escape-case"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require escape sequences to use uppercase values.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/escape-case.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/expiring-todo-comments"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowWarningComments
                                              | Bool
                                              | optional,
                                            date | String | optional,
                                            ignore
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ignoreDatesOnPullRequests
                                              | Bool
                                              | optional,
                                            terms | Array String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Add expiration conditions to TODO comments.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/expiring-todo-comments.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/explicit-length-check"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            non-zero
                                              | std.enum.TagOrString
                                              | [| 'not-equal, 'greater-than |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce explicitly comparing the `length` or `size` property of a value.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/explicit-length-check.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/filename-case"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce a case style for filenames.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/filename-case.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/import-index"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#import-index
                              "%
                              | optional,
                            "eslint-plugin-unicorn/import-style"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce specific import styles per module.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/import-style.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/new-for-builtins"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/new-for-builtins.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-abusive-eslint-disable"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce specifying rules to disable in `eslint-disable` comments.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-abusive-eslint-disable.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-anonymous-default-export"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow anonymous functions and classes as the default export.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-anonymous-default-export.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-callback-reference"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prevent passing a function reference directly to iterator methods.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-callback-reference.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-for-each"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `for…of` over the `forEach` method.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-for-each.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-instanceof"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-array-instanceof
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-method-this-argument"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow using the `this` argument in array methods.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-method-this-argument.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-push-push"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignore
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce combining multiple `Array#push()` into one call.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-push-push.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-array-reduce"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowSimpleOperations
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow `Array#reduce()` and `Array#reduceRight()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-array-reduce.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-await-expression-member"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow member access from await expression.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-await-expression-member.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-await-in-promise-methods"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow using `await` in `Promise` method parameters.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-await-in-promise-methods.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-console-spaces"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Do not use leading/trailing space between `console.log` parameters.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-console-spaces.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-document-cookie"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Do not use `document.cookie` directly.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-document-cookie.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-empty-file"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow empty files.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-empty-file.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-fn-reference-in-iterator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-fn-reference-in-iterator
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-for-loop"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Do not use a `for` loop that can be replaced with a `for-of` loop.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-for-loop.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-hex-escape"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of Unicode escapes instead of hexadecimal escapes.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-hex-escape.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-instanceof-array"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require `Array.isArray()` instead of `instanceof Array`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-instanceof-array.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-invalid-fetch-options"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow invalid options in `fetch()` and `new Request()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-invalid-fetch-options.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-invalid-remove-event-listener"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prevent calling `EventTarget#removeEventListener()` with the result of an expression.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-invalid-remove-event-listener.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-keyword-prefix"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkProperties | Bool | optional,
                                            disallowedPrefixes
                                              | js2n.array.MaxItems 1
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | js2n.array.Items [ String ]
                                                js2n.Always
                                              | optional,
                                            onlyCamelCase | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow identifiers starting with `new` or `class`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-keyword-prefix.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-lonely-if"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow `if` statements as the only statement in `if` blocks without `else`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-lonely-if.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-magic-array-flat-depth"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow a magic number as the `depth` argument in `Array#flat(…).`
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-magic-array-flat-depth.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-negated-condition"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow negated conditions.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-negated-condition.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-negation-in-equality-check"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow negated expression in equality check.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-negation-in-equality-check.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-nested-ternary"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow nested ternary expressions.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-nested-ternary.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-new-array"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow `new Array()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-new-array.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-new-buffer"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-new-buffer.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-null"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkStrictEquality
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the use of the `null` literal.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-null.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-object-as-default-parameter"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow the use of objects as default parameters.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-object-as-default-parameter.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-process-exit"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow `process.exit()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-process-exit.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-reduce"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-reduce
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-single-promise-in-promise-methods"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow passing single-element arrays to `Promise` methods.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-single-promise-in-promise-methods.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-static-only-class"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow classes that only have static members.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-static-only-class.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-thenable"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow `then` property.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-thenable.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-this-assignment"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow assigning `this` to a variable.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-this-assignment.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-typeof-undefined"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkGlobalVariables
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow comparing `undefined` using `typeof`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-typeof-undefined.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unnecessary-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow awaiting non-promise values.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unnecessary-await.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unnecessary-polyfills"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            targets
                                              | std.contract.any_of
                                                [
                                                  { _ | Dyn },
                                                  Array Dyn,
                                                  String
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce the use of built-in methods instead of unnecessary polyfills.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unnecessary-polyfills.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unreadable-array-destructuring"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unreadable array destructuring.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unreadable-array-destructuring.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unreadable-iife"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unreadable IIFEs.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unreadable-iife.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unsafe-regex"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#no-unsafe-regex
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-unused-properties"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unused object properties.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-unused-properties.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-fallback-in-spread"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow useless fallback when spreading in object literals.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-fallback-in-spread.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-length-check"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow useless array length check.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-length-check.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-promise-resolve-reject"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-promise-resolve-reject.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-spread"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary spread.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-spread.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-switch-case"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow useless case in switch statements.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-switch-case.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-useless-undefined"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkArguments | Bool | optional,
                                            checkArrowFunctionBody
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow useless `undefined`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-useless-undefined.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/no-zero-fractions"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow number literals with zero fractions or dangling dots.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/no-zero-fractions.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/number-literal-case"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce proper case for numeric literals.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/number-literal-case.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/numeric-separators-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            binary
                                              | {
                                                groupLength
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 1
                                                  | optional,
                                                minimumDigits
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 0
                                                  | optional,
                                                onlyIfContainsSeparator
                                                  | Bool
                                                  | optional,
                                              }
                                              | optional,
                                            hexadecimal
                                              | {
                                                groupLength
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 1
                                                  | optional,
                                                minimumDigits
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 0
                                                  | optional,
                                                onlyIfContainsSeparator
                                                  | Bool
                                                  | optional,
                                              }
                                              | optional,
                                            number
                                              | {
                                                groupLength
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 1
                                                  | optional,
                                                minimumDigits
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 0
                                                  | optional,
                                                onlyIfContainsSeparator
                                                  | Bool
                                                  | optional,
                                              }
                                              | optional,
                                            octal
                                              | {
                                                groupLength
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 1
                                                  | optional,
                                                minimumDigits
                                                  | std.number.Integer
                                                  | js2n.number.Minimum 0
                                                  | optional,
                                                onlyIfContainsSeparator
                                                  | Bool
                                                  | optional,
                                              }
                                              | optional,
                                            onlyIfContainsSeparator
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce the style of numeric separators by correctly grouping digits.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/numeric-separators-style.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-add-event-listener"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            excludedPackages
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-add-event-listener.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-array-find"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkFromLast | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `.find(…)` and `.findLast(…)` over the first or last element from `.filter(…)`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-find.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-array-flat"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            functions
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `Array#flat()` over legacy techniques to flatten arrays.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-flat.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-array-flat-map"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.flatMap(…)` over `.map(…).flat()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-flat-map.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-array-index-of"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()` when looking for the index of an item.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-index-of.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-array-some"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.some(…)` over `.filter(…).length` check and `.{find,findLast,findIndex,findLastIndex}(…)`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-array-some.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-at"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkAllIndexAccess
                                              | Bool
                                              | optional,
                                            getLastElementFunctions
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `.at()` method for index access and `String#charAt()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-at.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-blob-reading-methods"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Blob#arrayBuffer()` over `FileReader#readAsArrayBuffer(…)` and `Blob#text()` over `FileReader#readAsText(…)`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-blob-reading-methods.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-code-point"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-code-point.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-dataset"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-dataset
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-date-now"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-date-now.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-default-parameters"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer default parameters over reassignment.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-default-parameters.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-dom-node-append"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Node#append()` over `Node#appendChild()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-append.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-dom-node-dataset"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using `.dataset` on DOM elements over calling attribute methods.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-dataset.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-dom-node-remove"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-remove.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-dom-node-text-content"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.textContent` over `.innerText`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-dom-node-text-content.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-event-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-event-key
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-event-target"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `EventTarget` over `EventEmitter`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-event-target.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-exponentiation-operator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-exponentiation-operator
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-export-from"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreUsedVariables
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `export…from` when re-exporting.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-export-from.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-flat-map"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-flat-map
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-includes"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.includes()` over `.indexOf()`, `.lastIndexOf()`, and `Array#some()` when checking for existence or non-existence.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-includes.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-json-parse-buffer"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer reading a JSON file as a buffer.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-json-parse-buffer.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-keyboard-event-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-keyboard-event-key.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-logical-operator-over-ternary"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using a logical operator over a ternary.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-logical-operator-over-ternary.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-math-trunc"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce the use of `Math.trunc` instead of bitwise operators.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-math-trunc.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-modern-dom-apis"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-modern-dom-apis.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-modern-math-apis"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer modern `Math` APIs over legacy patterns.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-modern-math-apis.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-module"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer JavaScript modules (ESM) over CommonJS.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-module.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-native-coercion-functions"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-native-coercion-functions.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-negative-index"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer negative index over `.length - index` when possible.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-negative-index.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-node-append"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-node-append
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-node-protocol"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using the `node:` protocol when importing Node.js builtin modules.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-node-protocol.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-node-remove"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-node-remove
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-number-properties"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            checkInfinity | Bool | optional,
                                            checkNaN | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `Number` static properties over global ones.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-number-properties.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-object-from-entries"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            functions
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer using `Object.fromEntries(…)` to transform a list of key-value pairs into an object.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-object-from-entries.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-object-has-own"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-object-has-own
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-optional-catch-binding"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer omitting the `catch` binding parameter.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-optional-catch-binding.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-prototype-methods"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer borrowing methods from the prototype instead of the instance.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-prototype-methods.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-query-selector"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-query-selector.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-reflect-apply"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Reflect.apply()` over `Function#apply()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-reflect-apply.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-regexp-test"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-regexp-test.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-replace-all"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-replace-all
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-set-has"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-set-has.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-set-size"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using `Set#size` instead of `Array#length`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-set-size.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-spread"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer the spread operator over `Array.from(…)`, `Array#concat(…)`, `Array#{slice,toSpliced}()` and `String#split('')`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-spread.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-starts-ends-with"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-starts-ends-with
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-string-raw"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer using the `String.raw` tag to avoid escaping `\`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-raw.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-string-replace-all"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `String#replaceAll()` over regex searches with the global flag.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-replace-all.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-string-slice"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `String#slice()` over `String#substr()` and `String#substring()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-slice.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-string-starts-ends-with"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-starts-ends-with.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-string-trim-start-end"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-string-trim-start-end.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-structured-clone"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            functions
                                              | js2n.array.UniqueItems
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer using `structuredClone` to create a deep clone.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-structured-clone.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-switch"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            emptyDefaultCase
                                              | std.enum.TagOrString
                                              | [|
                                                'no-default-case,
                                                'do-nothing-comment,
                                                'no-default-comment
                                              |]
                                              | optional,
                                            minimumCases
                                              | std.number.Integer
                                              | js2n.number.Minimum 2
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer `switch` over multiple `else-if`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-switch.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-ternary"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Prefer ternary expressions over simple `if-else` statements.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-ternary.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-text-content"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-text-content
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-top-level-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prefer top-level await over top-level promises and async function calls.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-top-level-await.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-trim-start-end"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#prefer-trim-start-end
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prefer-type-error"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce throwing `TypeError` in type checking conditions.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prefer-type-error.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/prevent-abbreviations"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Prevent abbreviations.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/prevent-abbreviations.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/regex-shorthand"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/deprecated-rules.md#regex-shorthand
                              "%
                              | optional,
                            "eslint-plugin-unicorn/relative-url-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent relative URL style.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/relative-url-style.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/require-array-join-separator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using the separator argument with `Array#join()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-array-join-separator.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/require-number-to-fixed-digits-argument"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using the digits argument with `Number#toFixed()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-number-to-fixed-digits-argument.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/require-post-message-target-origin"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce using the `targetOrigin` argument with `window.postMessage()`.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/require-post-message-target-origin.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/string-content"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            patterns
                                              | {
                                                _ | std.contract.any_of
                                                  [
                                                    String,
                                                    {
                                                      fix | Bool | optional,
                                                      message
                                                        | String
                                                        | optional,
                                                      suggest | String,
                                                    }
                                                  ]
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce better string content.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/string-content.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/switch-case-braces"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent brace style for `case` clauses.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/switch-case-braces.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/template-indent"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            comments
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            functions
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            indent
                                              | std.contract.any_of
                                                [
                                                  js2n.string.Matches "^\\s+$",
                                                  std.contract.Sequence
                                                    [
                                                      std.number.Integer,
                                                      js2n.number.Minimum 1
                                                    ]
                                                ]
                                              | optional,
                                            selectors
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            tags
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Fix whitespace-insensitive template indentation.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/template-indent.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/text-encoding-identifier-case"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce consistent case for text encoding identifiers.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/text-encoding-identifier-case.md
                              "%
                              | optional,
                            "eslint-plugin-unicorn/throw-new-error"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require `new` when creating an error.
                                https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v54.0.0/docs/rules/throw-new-error.md
                              "%
                              | optional,
                            "eslint-plugin-vue/array-bracket-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce linebreaks after opening and before closing array brackets in `<template>`
                                https://eslint.vuejs.org/rules/array-bracket-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/array-bracket-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing inside array brackets in `<template>`
                                https://eslint.vuejs.org/rules/array-bracket-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/array-element-newline"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Enforce line breaks after each array element in `<template>`
                                https://eslint.vuejs.org/rules/array-element-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/arrow-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before and after the arrow in arrow functions in `<template>`
                                https://eslint.vuejs.org/rules/arrow-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/attribute-hyphenation"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce attribute naming style on custom components in template
                                https://eslint.vuejs.org/rules/attribute-hyphenation.html
                              "%
                              | optional,
                            "eslint-plugin-vue/attributes-order"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            alphabetical | Bool | optional,
                                            order
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.any_of
                                                  [
                                                    std.contract.Sequence
                                                      [
                                                        std.enum.TagOrString,
                                                        [|
                                                          'CONTENT,
                                                          'EVENTS,
                                                          'ATTR_SHORTHAND_BOOL,
                                                          'ATTR_DYNAMIC,
                                                          'ATTR_STATIC,
                                                          'OTHER_ATTR,
                                                          'OTHER_DIRECTIVES,
                                                          'TWO_WAY_BINDING,
                                                          'SLOT,
                                                          'UNIQUE,
                                                          'GLOBAL,
                                                          'RENDER_MODIFIERS,
                                                          'CONDITIONALS,
                                                          'LIST_RENDERING,
                                                          'DEFINITION
                                                        |]
                                                      ],
                                                    Array (
                                                      std.contract.Sequence
                                                        [
                                                          std.enum.TagOrString,
                                                          [|
                                                            'CONTENT,
                                                            'EVENTS,
                                                            'ATTR_SHORTHAND_BOOL,
                                                            'ATTR_DYNAMIC,
                                                            'ATTR_STATIC,
                                                            'OTHER_ATTR,
                                                            'OTHER_DIRECTIVES,
                                                            'TWO_WAY_BINDING,
                                                            'SLOT,
                                                            'UNIQUE,
                                                            'GLOBAL,
                                                            'RENDER_MODIFIERS,
                                                            'CONDITIONALS,
                                                            'LIST_RENDERING,
                                                            'DEFINITION
                                                          |]
                                                        ]
                                                    )
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce order of attributes
                                https://eslint.vuejs.org/rules/attributes-order.html
                              "%
                              | optional,
                            "eslint-plugin-vue/block-lang"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow use other than available `lang`
                                https://eslint.vuejs.org/rules/block-lang.html
                              "%
                              | optional,
                            "eslint-plugin-vue/block-order"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            order
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.any_of
                                                  [
                                                    String,
                                                    std.contract.Sequence
                                                      [
                                                        js2n.array.UniqueItems,
                                                        Array String
                                                      ]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce order of component top-level elements
                                https://eslint.vuejs.org/rules/block-order.html
                              "%
                              | optional,
                            "eslint-plugin-vue/block-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow or enforce spaces inside of blocks after opening block and before closing block in `<template>`
                                https://eslint.vuejs.org/rules/block-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/block-tag-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            blocks
                                              | {
                                                _ | {
                                                  maxEmptyLines
                                                    | js2n.number.Minimum 0
                                                    | optional,
                                                  multiline
                                                    | std.enum.TagOrString
                                                    | [|
                                                      'ignore,
                                                      'consistent,
                                                      'never,
                                                      'always
                                                    |]
                                                    | optional,
                                                  singleline
                                                    | std.enum.TagOrString
                                                    | [|
                                                      'ignore,
                                                      'consistent,
                                                      'never,
                                                      'always
                                                    |]
                                                    | optional,
                                                }
                                              }
                                              | js2n.record.FieldsMatch
                                                "^(?:\\S+)$"
                                              | optional,
                                            maxEmptyLines
                                              | js2n.number.Minimum 0
                                              | optional,
                                            multiline
                                              | std.enum.TagOrString
                                              | [|
                                                'ignore,
                                                'consistent,
                                                'never,
                                                'always
                                              |]
                                              | optional,
                                            singleline
                                              | std.enum.TagOrString
                                              | [|
                                                'ignore,
                                                'consistent,
                                                'never,
                                                'always
                                              |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce line breaks after opening and before closing block-level tags
                                https://eslint.vuejs.org/rules/block-tag-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/brace-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent brace style for blocks in `<template>`
                                https://eslint.vuejs.org/rules/brace-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/camelcase"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.MinItems 0
                                              | js2n.array.UniqueItems
                                              | js2n.array.Items [ String ]
                                                js2n.Always
                                              | optional,
                                            ignoreDestructuring
                                              | Bool
                                              | optional,
                                            ignoreGlobals | Bool | optional,
                                            ignoreImports | Bool | optional,
                                            properties
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce camelcase naming convention in `<template>`
                                https://eslint.vuejs.org/rules/camelcase.html
                              "%
                              | optional,
                            "eslint-plugin-vue/comma-dangle"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow trailing commas in `<template>`
                                https://eslint.vuejs.org/rules/comma-dangle.html
                              "%
                              | optional,
                            "eslint-plugin-vue/comma-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before and after commas in `<template>`
                                https://eslint.vuejs.org/rules/comma-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/comma-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent comma style in `<template>`
                                https://eslint.vuejs.org/rules/comma-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/comment-directive"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            reportUnusedDisableDirectives
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                support comment-directives in `<template>`
                                https://eslint.vuejs.org/rules/comment-directive.html
                              "%
                              | optional,
                            "eslint-plugin-vue/component-api-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce component API style
                                https://eslint.vuejs.org/rules/component-api-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/component-definition-name-casing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce specific casing for component definition name
                                https://eslint.vuejs.org/rules/component-definition-name-casing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/component-name-in-template-casing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce specific casing for the component naming style in template
                                https://eslint.vuejs.org/rules/component-name-in-template-casing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/component-options-name-casing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce the casing of component name in `components` options
                                https://eslint.vuejs.org/rules/component-options-name-casing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/component-tags-order"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            order
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.any_of
                                                  [
                                                    String,
                                                    std.contract.Sequence
                                                      [
                                                        js2n.array.UniqueItems,
                                                        Array String
                                                      ]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce order of component top-level elements
                                https://eslint.vuejs.org/rules/component-tags-order.html
                              "%
                              | optional,
                            "eslint-plugin-vue/custom-event-name-casing"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce specific casing for custom event name
                                https://eslint.vuejs.org/rules/custom-event-name-casing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/define-emits-declaration"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce declaration style of `defineEmits`
                                https://eslint.vuejs.org/rules/define-emits-declaration.html
                              "%
                              | optional,
                            "eslint-plugin-vue/define-macros-order"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            defineExposeLast | Bool | optional,
                                            order
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'defineModel,
                                                      'defineSlots,
                                                      'defineOptions,
                                                      'defineProps,
                                                      'defineEmits
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce order of `defineEmits` and `defineProps` compiler macros
                                https://eslint.vuejs.org/rules/define-macros-order.html
                              "%
                              | optional,
                            "eslint-plugin-vue/define-props-declaration"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce declaration style of `defineProps`
                                https://eslint.vuejs.org/rules/define-props-declaration.html
                              "%
                              | optional,
                            "eslint-plugin-vue/dot-location"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent newlines before and after dots in `<template>`
                                https://eslint.vuejs.org/rules/dot-location.html
                              "%
                              | optional,
                            "eslint-plugin-vue/dot-notation"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowKeywords | Bool | optional,
                                            allowPattern | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce dot notation whenever possible in `<template>`
                                https://eslint.vuejs.org/rules/dot-notation.html
                              "%
                              | optional,
                            "eslint-plugin-vue/enforce-style-attribute"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'module,
                                                      'scoped,
                                                      'plain
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce or forbid the use of the `scoped` and `module` attributes in SFC top level style tags
                                https://eslint.vuejs.org/rules/enforce-style-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/eqeqeq"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require the use of `===` and `!==` in `<template>`
                                https://eslint.vuejs.org/rules/eqeqeq.html
                              "%
                              | optional,
                            "eslint-plugin-vue/first-attribute-linebreak"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            multiline
                                              | std.enum.TagOrString
                                              | [| 'ignore, 'beside, 'below |]
                                              | optional,
                                            singleline
                                              | std.enum.TagOrString
                                              | [| 'ignore, 'beside, 'below |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce the location of first attribute
                                https://eslint.vuejs.org/rules/first-attribute-linebreak.html
                              "%
                              | optional,
                            "eslint-plugin-vue/func-call-spacing"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow spacing between function identifiers and their invocations in `<template>`
                                https://eslint.vuejs.org/rules/func-call-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-button-has-type"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            button | Bool | optional,
                                            reset | Bool | optional,
                                            submit | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow usage of button without an explicit type attribute
                                https://eslint.vuejs.org/rules/html-button-has-type.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-closing-bracket-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            multiline
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            selfClosingTag
                                              | js2n.record.MinProperties 1
                                              | {
                                                multiline
                                                  | std.enum.TagOrString
                                                  | [| 'never, 'always |]
                                                  | optional,
                                                singleline
                                                  | std.enum.TagOrString
                                                  | [| 'never, 'always |]
                                                  | optional,
                                              }
                                              | optional,
                                            singleline
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require or disallow a line break before tag's closing brackets
                                https://eslint.vuejs.org/rules/html-closing-bracket-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-closing-bracket-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            endTag
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            selfClosingTag
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            startTag
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require or disallow a space before tag's closing brackets
                                https://eslint.vuejs.org/rules/html-closing-bracket-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-comment-content-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce unified line brake in HTML comments
                                https://eslint.vuejs.org/rules/html-comment-content-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-comment-content-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce unified spacing in HTML comments
                                https://eslint.vuejs.org/rules/html-comment-content-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-comment-indent"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce consistent indentation in HTML comments
                                https://eslint.vuejs.org/rules/html-comment-indent.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-end-tags"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce end tag style
                                https://eslint.vuejs.org/rules/html-end-tags.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-indent"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce consistent indentation in `<template>`
                                https://eslint.vuejs.org/rules/html-indent.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-quotes"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce quotes style of HTML attributes
                                https://eslint.vuejs.org/rules/html-quotes.html
                              "%
                              | optional,
                            "eslint-plugin-vue/html-self-closing"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce self-closing style
                                https://eslint.vuejs.org/rules/html-self-closing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/jsx-uses-vars"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                prevent variables used in JSX to be marked as unused
                                https://eslint.vuejs.org/rules/jsx-uses-vars.html
                              "%
                              | optional,
                            "eslint-plugin-vue/key-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing between keys and values in object literal properties in `<template>`
                                https://eslint.vuejs.org/rules/key-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/keyword-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            after | Bool | optional,
                                            before | Bool | optional,
                                            overrides
                                              | {
                                                abstract
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                as
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                async
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                await
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                boolean
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                break
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                byte
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                case
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                catch
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                char
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                class
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                const
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                continue
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                debugger
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "default"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                delete
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                do
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                double
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "else"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                enum
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                export
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                extends
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "false"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                final
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                finally
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                float
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                for
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                from
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                function
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                get
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                goto
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "if"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                implements
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "import"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "in"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                instanceof
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                int
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                interface
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "let"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                long
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                native
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                new
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "null"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                of
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                package
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                private
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                protected
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                public
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                return
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                set
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                short
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                static
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                super
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                switch
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                synchronized
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                this
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                throw
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                throws
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                transient
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                "true"
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                try
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                typeof
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                var
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                void
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                volatile
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                while
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                with
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                                yield
                                                  | {
                                                    after | Bool | optional,
                                                    before | Bool | optional,
                                                  }
                                                  | optional,
                                              }
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before and after keywords in `<template>`
                                https://eslint.vuejs.org/rules/keyword-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/match-component-file-name"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            extensions
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            shouldMatchCase | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require component name property to match its file name
                                https://eslint.vuejs.org/rules/match-component-file-name.html
                              "%
                              | optional,
                            "eslint-plugin-vue/match-component-import-name"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require the registered component name to match the imported component name
                                https://eslint.vuejs.org/rules/match-component-import-name.html
                              "%
                              | optional,
                            "eslint-plugin-vue/max-attributes-per-line"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            multiline
                                              | std.contract.any_of
                                                [
                                                  js2n.number.Minimum 1,
                                                  {
                                                    max
                                                      | js2n.number.Minimum 1
                                                      | optional,
                                                  }
                                                ]
                                              | optional,
                                            singleline
                                              | std.contract.any_of
                                                [
                                                  js2n.number.Minimum 1,
                                                  {
                                                    max
                                                      | js2n.number.Minimum 1
                                                      | optional,
                                                  }
                                                ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce the maximum number of attributes per line
                                https://eslint.vuejs.org/rules/max-attributes-per-line.html
                              "%
                              | optional,
                            "eslint-plugin-vue/max-len"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce a maximum line length in `.vue` files
                                https://eslint.vuejs.org/rules/max-len.html
                              "%
                              | optional,
                            "eslint-plugin-vue/max-lines-per-block"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            script
                                              | std.number.Integer
                                              | js2n.number.Minimum 1
                                              | optional,
                                            skipBlankLines | Bool | optional,
                                            style
                                              | std.number.Integer
                                              | js2n.number.Minimum 1
                                              | optional,
                                            template
                                              | std.number.Integer
                                              | js2n.number.Minimum 1
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce maximum number of lines in Vue SFC blocks
                                https://eslint.vuejs.org/rules/max-lines-per-block.html
                              "%
                              | optional,
                            "eslint-plugin-vue/multi-word-component-names"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignores
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require component names to be always multi-word
                                https://eslint.vuejs.org/rules/multi-word-component-names.html
                              "%
                              | optional,
                            "eslint-plugin-vue/multiline-html-element-content-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowEmptyLines | Bool | optional,
                                            ignoreWhenEmpty | Bool | optional,
                                            ignores
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require a line break before and after the contents of a multiline element
                                https://eslint.vuejs.org/rules/multiline-html-element-content-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/multiline-ternary"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce newlines between operands of ternary expressions in `<template>`
                                https://eslint.vuejs.org/rules/multiline-ternary.html
                              "%
                              | optional,
                            "eslint-plugin-vue/mustache-interpolation-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce unified spacing in mustache interpolations
                                https://eslint.vuejs.org/rules/mustache-interpolation-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/new-line-between-multi-line-property"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            minLineOfMultilineProperty
                                              | js2n.number.Minimum 2
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce new lines between multi-line properties in Vue components
                                https://eslint.vuejs.org/rules/new-line-between-multi-line-property.html
                              "%
                              | optional,
                            "eslint-plugin-vue/next-tick-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce Promise or callback style in `nextTick`
                                https://eslint.vuejs.org/rules/next-tick-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-arrow-functions-in-watch"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using arrow functions to define watcher
                                https://eslint.vuejs.org/rules/no-arrow-functions-in-watch.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-async-in-computed-properties"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow asynchronous actions in computed properties
                                https://eslint.vuejs.org/rules/no-async-in-computed-properties.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-bare-strings-in-template"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowlist
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            attributes
                                              | {
                                                _ | std.contract.Sequence
                                                  [
                                                    js2n.array.UniqueItems,
                                                    Array String
                                                  ]
                                              }
                                              | js2n.record.FieldsMatch
                                                "^(?:\\S+|/.*/[a-z]*)$"
                                              | optional,
                                            directives
                                              | js2n.array.UniqueItems
                                              | Array (
                                                js2n.string.Matches "^v-"
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow the use of bare strings in `<template>`
                                https://eslint.vuejs.org/rules/no-bare-strings-in-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-boolean-default"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow boolean defaults
                                https://eslint.vuejs.org/rules/no-boolean-default.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-child-content"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            additionalDirectives
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow element's child contents which would be overwritten by a directive like `v-html` or `v-text`
                                https://eslint.vuejs.org/rules/no-child-content.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-computed-properties-in-data"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow accessing computed properties in `data`.
                                https://eslint.vuejs.org/rules/no-computed-properties-in-data.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-console"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow the use of `console` in `<template>`
                                https://eslint.vuejs.org/rules/no-console.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-constant-condition"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { checkLoops | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow constant expressions in conditions in `<template>`
                                https://eslint.vuejs.org/rules/no-constant-condition.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-custom-modifiers-on-v-model"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow custom modifiers on v-model used on the component
                                https://eslint.vuejs.org/rules/no-custom-modifiers-on-v-model.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-data-object-declaration"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated object declaration on data (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-data-object-declaration.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-destroyed-lifecycle"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `destroyed` and `beforeDestroy` lifecycle hooks (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-destroyed-lifecycle.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-dollar-listeners-api"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `$listeners` (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-dollar-listeners-api.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-dollar-scopedslots-api"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `$scopedSlots` (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-dollar-scopedslots-api.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-events-api"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated events api (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-events-api.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-filter"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated filters syntax (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-filter.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-functional-template"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated the `functional` template (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-functional-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-html-element-is"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated the `is` attribute on HTML elements (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-html-element-is.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-inline-template"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `inline-template` attribute (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-inline-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-model-definition"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowVue3Compat | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow deprecated `model` definition (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-model-definition.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-props-default-this"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow deprecated `this` access in props default function (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-props-default-this.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-router-link-tag-prop"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            components
                                              | js2n.array.MinItems 1
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow using deprecated `tag` property on `RouterLink` (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-router-link-tag-prop.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-scope-attribute"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow deprecated `scope` attribute (in Vue.js 2.5.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-scope-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-slot-attribute"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignore
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow deprecated `slot` attribute (in Vue.js 2.6.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-slot-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-slot-scope-attribute"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow deprecated `slot-scope` attribute (in Vue.js 2.6.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-slot-scope-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-v-bind-sync"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow use of deprecated `.sync` modifier on `v-bind` directive (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-v-bind-sync.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-v-is"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow deprecated `v-is` directive (in Vue.js 3.1.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-v-is.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-v-on-native-modifier"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `.native` modifiers (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-v-on-native-modifier.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-v-on-number-modifiers"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated number (keycode) modifiers (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-v-on-number-modifiers.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-deprecated-vue-config-keycodes"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using deprecated `Vue.config.keyCodes` (in Vue.js 3.0.0+)
                                https://eslint.vuejs.org/rules/no-deprecated-vue-config-keycodes.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-dupe-keys"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { groups | Array Dyn | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow duplication of field names
                                https://eslint.vuejs.org/rules/no-dupe-keys.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-dupe-v-else-if"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow duplicate conditions in `v-if` / `v-else-if` chains
                                https://eslint.vuejs.org/rules/no-dupe-v-else-if.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-duplicate-attr-inheritance"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce `inheritAttrs` to be set to `false` when using `v-bind="$attrs"`
                                https://eslint.vuejs.org/rules/no-duplicate-attr-inheritance.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-duplicate-attributes"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowCoexistClass | Bool | optional,
                                            allowCoexistStyle | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow duplication of attributes
                                https://eslint.vuejs.org/rules/no-duplicate-attributes.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-empty-component-block"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow the `<template>` `<script>` `<style>` block to be empty
                                https://eslint.vuejs.org/rules/no-empty-component-block.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-empty-pattern"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowObjectPatternsAsParameters
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Disallow empty destructuring patterns in `<template>`
                                https://eslint.vuejs.org/rules/no-empty-pattern.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-export-in-script-setup"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow `export` in `<script setup>`
                                https://eslint.vuejs.org/rules/no-export-in-script-setup.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-expose-after-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow asynchronously registered `expose`
                                https://eslint.vuejs.org/rules/no-expose-after-await.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-extra-parens"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary parentheses in `<template>`
                                https://eslint.vuejs.org/rules/no-extra-parens.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-invalid-model-keys"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require valid keys in model option
                                https://eslint.vuejs.org/rules/no-invalid-model-keys.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-irregular-whitespace"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            skipComments | Bool | optional,
                                            skipHTMLAttributeValues
                                              | Bool
                                              | optional,
                                            skipHTMLTextContents
                                              | Bool
                                              | optional,
                                            skipRegExps | Bool | optional,
                                            skipStrings | Bool | optional,
                                            skipTemplates | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow irregular whitespace in `.vue` files
                                https://eslint.vuejs.org/rules/no-irregular-whitespace.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-lifecycle-after-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow asynchronously registered lifecycle hooks
                                https://eslint.vuejs.org/rules/no-lifecycle-after-await.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-lone-template"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreAccessible | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unnecessary `<template>`
                                https://eslint.vuejs.org/rules/no-lone-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-loss-of-precision"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow literal numbers that lose precision in `<template>`
                                https://eslint.vuejs.org/rules/no-loss-of-precision.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-multi-spaces"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreProperties | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow multiple spaces
                                https://eslint.vuejs.org/rules/no-multi-spaces.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-multiple-objects-in-class"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow to pass multiple objects into array to class
                                https://eslint.vuejs.org/rules/no-multiple-objects-in-class.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-multiple-slot-args"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow to pass multiple arguments to scoped slots
                                https://eslint.vuejs.org/rules/no-multiple-slot-args.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-multiple-template-root"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow adding multiple root nodes to the template
                                https://eslint.vuejs.org/rules/no-multiple-template-root.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-mutating-props"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { shallowOnly | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow mutation of component props
                                https://eslint.vuejs.org/rules/no-mutating-props.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-parsing-error"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            abrupt-closing-of-empty-comment
                                              | Bool
                                              | optional,
                                            absence-of-digits-in-numeric-character-reference
                                              | Bool
                                              | optional,
                                            cdata-in-html-content
                                              | Bool
                                              | optional,
                                            character-reference-outside-unicode-range
                                              | Bool
                                              | optional,
                                            control-character-in-input-stream
                                              | Bool
                                              | optional,
                                            control-character-reference
                                              | Bool
                                              | optional,
                                            duplicate-attribute
                                              | Bool
                                              | optional,
                                            end-tag-with-attributes
                                              | Bool
                                              | optional,
                                            end-tag-with-trailing-solidus
                                              | Bool
                                              | optional,
                                            eof-before-tag-name
                                              | Bool
                                              | optional,
                                            eof-in-cdata | Bool | optional,
                                            eof-in-comment | Bool | optional,
                                            eof-in-tag | Bool | optional,
                                            incorrectly-closed-comment
                                              | Bool
                                              | optional,
                                            incorrectly-opened-comment
                                              | Bool
                                              | optional,
                                            invalid-first-character-of-tag-name
                                              | Bool
                                              | optional,
                                            missing-attribute-value
                                              | Bool
                                              | optional,
                                            missing-end-tag-name
                                              | Bool
                                              | optional,
                                            missing-semicolon-after-character-reference
                                              | Bool
                                              | optional,
                                            missing-whitespace-between-attributes
                                              | Bool
                                              | optional,
                                            nested-comment | Bool | optional,
                                            non-void-html-element-start-tag-with-trailing-solidus
                                              | Bool
                                              | optional,
                                            noncharacter-character-reference
                                              | Bool
                                              | optional,
                                            noncharacter-in-input-stream
                                              | Bool
                                              | optional,
                                            null-character-reference
                                              | Bool
                                              | optional,
                                            surrogate-character-reference
                                              | Bool
                                              | optional,
                                            surrogate-in-input-stream
                                              | Bool
                                              | optional,
                                            unexpected-character-in-attribute-name
                                              | Bool
                                              | optional,
                                            unexpected-character-in-unquoted-attribute-value
                                              | Bool
                                              | optional,
                                            unexpected-equals-sign-before-attribute-name
                                              | Bool
                                              | optional,
                                            unexpected-null-character
                                              | Bool
                                              | optional,
                                            unexpected-question-mark-instead-of-tag-name
                                              | Bool
                                              | optional,
                                            unexpected-solidus-in-tag
                                              | Bool
                                              | optional,
                                            unknown-named-character-reference
                                              | Bool
                                              | optional,
                                            x-invalid-end-tag | Bool | optional,
                                            x-invalid-namespace
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow parsing errors in `<template>`
                                https://eslint.vuejs.org/rules/no-parsing-error.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-potential-component-option-typo"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            custom
                                              | js2n.array.MinItems 0
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            presets
                                              | js2n.array.MinItems 0
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'nuxt,
                                                      'vue-router,
                                                      'vue,
                                                      'all
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            threshold
                                              | js2n.number.Minimum 1
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow a potential typo in your component property
                                https://eslint.vuejs.org/rules/no-potential-component-option-typo.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-ref-as-operand"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow use of value wrapped by `ref()` (Composition API) as an operand
                                https://eslint.vuejs.org/rules/no-ref-as-operand.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-ref-object-destructure"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow usages of ref objects that can lead to loss of reactivity
                                https://eslint.vuejs.org/rules/no-ref-object-destructure.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-ref-object-reactivity-loss"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow usages of ref objects that can lead to loss of reactivity
                                https://eslint.vuejs.org/rules/no-ref-object-reactivity-loss.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-required-prop-with-default"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { autofix | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce props with default values to be optional
                                https://eslint.vuejs.org/rules/no-required-prop-with-default.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-reserved-component-names"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            disallowVue3BuiltInComponents
                                              | Bool
                                              | optional,
                                            disallowVueBuiltInComponents
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow the use of reserved names in component definitions
                                https://eslint.vuejs.org/rules/no-reserved-component-names.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-reserved-keys"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            groups | Array Dyn | optional,
                                            reserved | Array Dyn | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow overwriting reserved keys
                                https://eslint.vuejs.org/rules/no-reserved-keys.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-reserved-props"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            vueVersion
                                              | js2n.Enum [ 2, 3 ]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow reserved names in props
                                https://eslint.vuejs.org/rules/no-reserved-props.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-block"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific block
                                https://eslint.vuejs.org/rules/no-restricted-block.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-call-after-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow asynchronously called restricted methods
                                https://eslint.vuejs.org/rules/no-restricted-call-after-await.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-class"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific classes in Vue components
                                https://eslint.vuejs.org/rules/no-restricted-class.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-component-names"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific component names
                                https://eslint.vuejs.org/rules/no-restricted-component-names.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-component-options"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific component option
                                https://eslint.vuejs.org/rules/no-restricted-component-options.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-custom-event"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific custom event
                                https://eslint.vuejs.org/rules/no-restricted-custom-event.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-html-elements"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific HTML elements
                                https://eslint.vuejs.org/rules/no-restricted-html-elements.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-props"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific props
                                https://eslint.vuejs.org/rules/no-restricted-props.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-static-attribute"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific attribute
                                https://eslint.vuejs.org/rules/no-restricted-static-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-syntax"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow specified syntax in `<template>`
                                https://eslint.vuejs.org/rules/no-restricted-syntax.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-v-bind"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific argument in `v-bind`
                                https://eslint.vuejs.org/rules/no-restricted-v-bind.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-restricted-v-on"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow specific argument in `v-on`
                                https://eslint.vuejs.org/rules/no-restricted-v-on.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-root-v-if"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow `v-if` directives on root element
                                https://eslint.vuejs.org/rules/no-root-v-if.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-setup-props-destructure"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow usages that lose the reactivity of `props` passed to `setup`
                                https://eslint.vuejs.org/rules/no-setup-props-destructure.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-setup-props-reactivity-loss"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow usages that lose the reactivity of `props` passed to `setup`
                                https://eslint.vuejs.org/rules/no-setup-props-reactivity-loss.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-shared-component-data"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce component's data property to be a function
                                https://eslint.vuejs.org/rules/no-shared-component-data.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-side-effects-in-computed-properties"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow side effects in computed properties
                                https://eslint.vuejs.org/rules/no-side-effects-in-computed-properties.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-spaces-around-equal-signs-in-attribute"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow spaces around equal signs in attribute
                                https://eslint.vuejs.org/rules/no-spaces-around-equal-signs-in-attribute.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-sparse-arrays"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow sparse arrays in `<template>`
                                https://eslint.vuejs.org/rules/no-sparse-arrays.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-static-inline-styles"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { allowBinding | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow static inline `style` attributes
                                https://eslint.vuejs.org/rules/no-static-inline-styles.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-template-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow `key` attribute on `<template>`
                                https://eslint.vuejs.org/rules/no-template-key.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-template-shadow"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow variable declarations from shadowing variables declared in the outer scope
                                https://eslint.vuejs.org/rules/no-template-shadow.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-template-target-blank"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowReferrer | Bool | optional,
                                            enforceDynamicLinks
                                              | std.enum.TagOrString
                                              | [| 'never, 'always |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow target="_blank" attribute without rel="noopener noreferrer"
                                https://eslint.vuejs.org/rules/no-template-target-blank.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-textarea-mustache"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow mustaches in `<textarea>`
                                https://eslint.vuejs.org/rules/no-textarea-mustache.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-this-in-before-route-enter"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow `this` usage in a `beforeRouteEnter` method
                                https://eslint.vuejs.org/rules/no-this-in-before-route-enter.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-undef-components"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignorePatterns
                                              | Array Dyn
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow use of undefined components in `<template>`
                                https://eslint.vuejs.org/rules/no-undef-components.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-undef-properties"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignores
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow undefined properties
                                https://eslint.vuejs.org/rules/no-undef-properties.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unsupported-features"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignores
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'v-bind-same-name-shorthand,
                                                      'define-model,
                                                      'define-slots,
                                                      'define-options,
                                                      'v-bind-attr-modifier,
                                                      'v-bind-prop-modifier-shorthand,
                                                      'v-memo,
                                                      'is-attribute-with-vue-prefix,
                                                      'v-is,
                                                      'v-model-custom-modifiers,
                                                      'v-model-argument,
                                                      'style-css-vars-injection,
                                                      'script-setup,
                                                      'v-slot,
                                                      'dynamic-directive-arguments,
                                                      'slot-scope-attribute
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            version | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unsupported Vue.js syntax on the specified version
                                https://eslint.vuejs.org/rules/no-unsupported-features.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unused-components"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreWhenBindingPresent
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow registering components that are not used inside templates
                                https://eslint.vuejs.org/rules/no-unused-components.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unused-emit-declarations"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow unused emit declarations
                                https://eslint.vuejs.org/rules/no-unused-emit-declarations.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unused-properties"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            deepData | Bool | optional,
                                            groups
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'setup,
                                                      'methods,
                                                      'computed,
                                                      'asyncData,
                                                      'data,
                                                      'props
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            ignorePublicMembers
                                              | Bool
                                              | optional,
                                            unreferencedOptions
                                              | js2n.array.UniqueItems
                                              | Array (
                                                std.contract.Sequence
                                                  [
                                                    std.enum.TagOrString,
                                                    [|
                                                      'returnAsUnreferenced,
                                                      'unknownMemberAsUnreferenced
                                                    |]
                                                  ]
                                              )
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unused properties
                                https://eslint.vuejs.org/rules/no-unused-properties.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unused-refs"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow unused refs
                                https://eslint.vuejs.org/rules/no-unused-refs.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-unused-vars"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignorePattern | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unused variable definitions of v-for directives or scope attributes
                                https://eslint.vuejs.org/rules/no-unused-vars.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-use-computed-property-like-method"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow use computed property like method
                                https://eslint.vuejs.org/rules/no-use-computed-property-like-method.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-use-v-else-with-v-for"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow using `v-else-if`/`v-else` on the same element as `v-for`
                                https://eslint.vuejs.org/rules/no-use-v-else-with-v-for.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-use-v-if-with-v-for"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowUsingIterationVar
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow using `v-if` on the same element as `v-for`
                                https://eslint.vuejs.org/rules/no-use-v-if-with-v-for.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-useless-concat"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Disallow unnecessary concatenation of literals or template literals in `<template>`
                                https://eslint.vuejs.org/rules/no-useless-concat.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-useless-mustaches"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreIncludesComment
                                              | Bool
                                              | optional,
                                            ignoreStringEscape
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unnecessary mustache interpolations
                                https://eslint.vuejs.org/rules/no-useless-mustaches.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-useless-template-attributes"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow useless attribute on `<template>`
                                https://eslint.vuejs.org/rules/no-useless-template-attributes.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-useless-v-bind"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            ignoreIncludesComment
                                              | Bool
                                              | optional,
                                            ignoreStringEscape
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow unnecessary `v-bind` directives
                                https://eslint.vuejs.org/rules/no-useless-v-bind.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-for-template-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow `key` attribute on `<template v-for>`
                                https://eslint.vuejs.org/rules/no-v-for-template-key.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-for-template-key-on-child"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow key of `<template v-for>` placed on child elements
                                https://eslint.vuejs.org/rules/no-v-for-template-key-on-child.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-html"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow use of v-html to prevent XSS attack
                                https://eslint.vuejs.org/rules/no-v-html.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-model-argument"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow adding an argument to `v-model` used in custom component
                                https://eslint.vuejs.org/rules/no-v-model-argument.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-text"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow use of v-text
                                https://eslint.vuejs.org/rules/no-v-text.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-v-text-v-html-on-component"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allow
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow v-text / v-html on component
                                https://eslint.vuejs.org/rules/no-v-text-v-html-on-component.html
                              "%
                              | optional,
                            "eslint-plugin-vue/no-watch-after-await"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                disallow asynchronously registered `watch`
                                https://eslint.vuejs.org/rules/no-watch-after-await.html
                              "%
                              | optional,
                            "eslint-plugin-vue/object-curly-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent line breaks after opening and before closing braces in `<template>`
                                https://eslint.vuejs.org/rules/object-curly-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/object-curly-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing inside braces in `<template>`
                                https://eslint.vuejs.org/rules/object-curly-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/object-property-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowAllPropertiesOnSameLine
                                              | Bool
                                              | optional,
                                            allowMultiplePropertiesPerLine
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce placing object properties on separate lines in `<template>`
                                https://eslint.vuejs.org/rules/object-property-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/object-shorthand"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require or disallow method and property shorthand syntax for object literals in `<template>`
                                https://eslint.vuejs.org/rules/object-shorthand.html
                              "%
                              | optional,
                            "eslint-plugin-vue/one-component-per-file"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce that each component should be in its own file
                                https://eslint.vuejs.org/rules/one-component-per-file.html
                              "%
                              | optional,
                            "eslint-plugin-vue/operator-linebreak"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent linebreak style for operators in `<template>`
                                https://eslint.vuejs.org/rules/operator-linebreak.html
                              "%
                              | optional,
                            "eslint-plugin-vue/order-in-components"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { order | Array Dyn | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce order of properties in components
                                https://eslint.vuejs.org/rules/order-in-components.html
                              "%
                              | optional,
                            "eslint-plugin-vue/padding-line-between-blocks"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require or disallow padding lines between blocks
                                https://eslint.vuejs.org/rules/padding-line-between-blocks.html
                              "%
                              | optional,
                            "eslint-plugin-vue/padding-line-between-tags"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require or disallow newlines between sibling tags in template
                                https://eslint.vuejs.org/rules/padding-line-between-tags.html
                              "%
                              | optional,
                            "eslint-plugin-vue/padding-lines-in-component-definition"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require or disallow padding lines in component definition
                                https://eslint.vuejs.org/rules/padding-lines-in-component-definition.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-define-options"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce use of `defineOptions` instead of default export.
                                https://eslint.vuejs.org/rules/prefer-define-options.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-import-from-vue"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce import from 'vue' instead of import from '@vue/*'
                                https://eslint.vuejs.org/rules/prefer-import-from-vue.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-prop-type-boolean-first"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce `Boolean` comes first in component prop types
                                https://eslint.vuejs.org/rules/prefer-prop-type-boolean-first.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-separate-static-class"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require static class names in template to be in a separate `class` attribute
                                https://eslint.vuejs.org/rules/prefer-separate-static-class.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-template"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require template literals instead of string concatenation in `<template>`
                                https://eslint.vuejs.org/rules/prefer-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prefer-true-attribute-shorthand"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require shorthand form attribute when `v-bind` value is `true`
                                https://eslint.vuejs.org/rules/prefer-true-attribute-shorthand.html
                              "%
                              | optional,
                            "eslint-plugin-vue/prop-name-casing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce specific casing for the Prop name in Vue components
                                https://eslint.vuejs.org/rules/prop-name-casing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/quote-props"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                Require quotes around object literal property names in `<template>`
                                https://eslint.vuejs.org/rules/quote-props.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-component-is"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require `v-bind:is` of `<component>` elements
                                https://eslint.vuejs.org/rules/require-component-is.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-default-prop"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require default value for props
                                https://eslint.vuejs.org/rules/require-default-prop.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-direct-export"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            disallowFunctionalComponentFunction
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require the component to be directly exported
                                https://eslint.vuejs.org/rules/require-direct-export.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-emit-validator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require type definitions in emits
                                https://eslint.vuejs.org/rules/require-emit-validator.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-explicit-emits"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { allowProps | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require `emits` option with name triggered by `$emit()`
                                https://eslint.vuejs.org/rules/require-explicit-emits.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-explicit-slots"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require slots to be explicitly defined
                                https://eslint.vuejs.org/rules/require-explicit-slots.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-expose"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require declare public properties using `expose`
                                https://eslint.vuejs.org/rules/require-expose.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-macro-variable-name"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            defineEmits | String | optional,
                                            defineProps | String | optional,
                                            defineSlots | String | optional,
                                            useAttrs | String | optional,
                                            useSlots | String | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require a certain macro variable name
                                https://eslint.vuejs.org/rules/require-macro-variable-name.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-name-property"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require a name property in Vue components
                                https://eslint.vuejs.org/rules/require-name-property.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-prop-comment"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            type
                                              | std.enum.TagOrString
                                              | [|
                                                'any,
                                                'block,
                                                'line,
                                                'JSDoc
                                              |]
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require props to have a comment
                                https://eslint.vuejs.org/rules/require-prop-comment.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-prop-type-constructor"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require prop type to be a constructor
                                https://eslint.vuejs.org/rules/require-prop-type-constructor.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-prop-types"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require type definitions in props
                                https://eslint.vuejs.org/rules/require-prop-types.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-render-return"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce render function to always return value
                                https://eslint.vuejs.org/rules/require-render-return.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-slots-as-functions"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce properties of `$slots` to be used as a function
                                https://eslint.vuejs.org/rules/require-slots-as-functions.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-toggle-inside-transition"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require control the display of the content inside `<transition>`
                                https://eslint.vuejs.org/rules/require-toggle-inside-transition.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-typed-object-prop"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce adding type declarations to object props
                                https://eslint.vuejs.org/rules/require-typed-object-prop.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-typed-ref"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require `ref` and `shallowRef` functions to be strongly typed
                                https://eslint.vuejs.org/rules/require-typed-ref.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-v-for-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require `v-bind:key` with `v-for` directives
                                https://eslint.vuejs.org/rules/require-v-for-key.html
                              "%
                              | optional,
                            "eslint-plugin-vue/require-valid-default-prop"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce props default values to be valid
                                https://eslint.vuejs.org/rules/require-valid-default-prop.html
                              "%
                              | optional,
                            "eslint-plugin-vue/return-in-computed-property"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            treatUndefinedAsUnspecified
                                              | Bool
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce that a return statement is present in computed property
                                https://eslint.vuejs.org/rules/return-in-computed-property.html
                              "%
                              | optional,
                            "eslint-plugin-vue/return-in-emits-validator"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce that a return statement is present in emits validator
                                https://eslint.vuejs.org/rules/return-in-emits-validator.html
                              "%
                              | optional,
                            "eslint-plugin-vue/script-indent"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce consistent indentation in `<script>`
                                https://eslint.vuejs.org/rules/script-indent.html
                              "%
                              | optional,
                            "eslint-plugin-vue/script-setup-uses-vars"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                prevent `<script setup>` variables used in `<template>` to be marked as unused
                                https://eslint.vuejs.org/rules/script-setup-uses-vars.html
                              "%
                              | optional,
                            "eslint-plugin-vue/singleline-html-element-content-newline"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            externalIgnores
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ignoreWhenEmpty | Bool | optional,
                                            ignoreWhenNoAttributes
                                              | Bool
                                              | optional,
                                            ignores
                                              | js2n.array.UniqueItems
                                              | Array String
                                              | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                require a line break before and after the contents of a singleline element
                                https://eslint.vuejs.org/rules/singleline-html-element-content-newline.html
                              "%
                              | optional,
                            "eslint-plugin-vue/sort-keys"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce sort-keys in a manner that is compatible with order-in-components
                                https://eslint.vuejs.org/rules/sort-keys.html
                              "%
                              | optional,
                            "eslint-plugin-vue/space-in-parens"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing inside parentheses in `<template>`
                                https://eslint.vuejs.org/rules/space-in-parens.html
                              "%
                              | optional,
                            "eslint-plugin-vue/space-infix-ops"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          { int32Hint | Bool | optional, .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require spacing around infix operators in `<template>`
                                https://eslint.vuejs.org/rules/space-infix-ops.html
                              "%
                              | optional,
                            "eslint-plugin-vue/space-unary-ops"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            nonwords | Bool | optional,
                                            overrides | { _ | Bool } | optional,
                                            words | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Enforce consistent spacing before or after unary operators in `<template>`
                                https://eslint.vuejs.org/rules/space-unary-ops.html
                              "%
                              | optional,
                            "eslint-plugin-vue/static-class-names-order"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce static class names order
                                https://eslint.vuejs.org/rules/static-class-names-order.html
                              "%
                              | optional,
                            "eslint-plugin-vue/template-curly-spacing"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                Require or disallow spacing around embedded expressions of template strings in `<template>`
                                https://eslint.vuejs.org/rules/template-curly-spacing.html
                              "%
                              | optional,
                            "eslint-plugin-vue/this-in-template"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                disallow usage of `this` in template
                                https://eslint.vuejs.org/rules/this-in-template.html
                              "%
                              | optional,
                            "eslint-plugin-vue/use-v-on-exact"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce usage of `exact` modifier on `v-on`
                                https://eslint.vuejs.org/rules/use-v-on-exact.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-bind-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce `v-bind` directive style
                                https://eslint.vuejs.org/rules/v-bind-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-for-delimiter-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce `v-for` directive's delimiter style
                                https://eslint.vuejs.org/rules/v-for-delimiter-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-if-else-key"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require key attribute for conditionally rendered repeated components
                                https://eslint.vuejs.org/rules/v-if-else-key.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-on-event-hyphenation"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce v-on event naming style on custom components in template
                                https://eslint.vuejs.org/rules/v-on-event-hyphenation.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-on-function-call"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce or forbid parentheses after method calls without arguments in `v-on` directives
                                https://eslint.vuejs.org/rules/v-on-function-call.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-on-handler-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce writing style for handlers in `v-on` directives
                                https://eslint.vuejs.org/rules/v-on-handler-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-on-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce `v-on` directive style
                                https://eslint.vuejs.org/rules/v-on-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/v-slot-style"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {  .. }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce `v-slot` directive style
                                https://eslint.vuejs.org/rules/v-slot-style.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-attribute-name"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require valid attribute names
                                https://eslint.vuejs.org/rules/valid-attribute-name.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-define-emits"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `defineEmits` compiler macro
                                https://eslint.vuejs.org/rules/valid-define-emits.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-define-options"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `defineOptions` compiler macro
                                https://eslint.vuejs.org/rules/valid-define-options.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-define-props"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `defineProps` compiler macro
                                https://eslint.vuejs.org/rules/valid-define-props.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-model-definition"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                require valid keys in model option
                                https://eslint.vuejs.org/rules/valid-model-definition.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-next-tick"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `nextTick` function calls
                                https://eslint.vuejs.org/rules/valid-next-tick.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-template-root"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid template root
                                https://eslint.vuejs.org/rules/valid-template-root.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-bind"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-bind` directives
                                https://eslint.vuejs.org/rules/valid-v-bind.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-bind-sync"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `.sync` modifier on `v-bind` directives
                                https://eslint.vuejs.org/rules/valid-v-bind-sync.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-cloak"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-cloak` directives
                                https://eslint.vuejs.org/rules/valid-v-cloak.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-else"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-else` directives
                                https://eslint.vuejs.org/rules/valid-v-else.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-else-if"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-else-if` directives
                                https://eslint.vuejs.org/rules/valid-v-else-if.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-for"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-for` directives
                                https://eslint.vuejs.org/rules/valid-v-for.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-html"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-html` directives
                                https://eslint.vuejs.org/rules/valid-v-html.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-if"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-if` directives
                                https://eslint.vuejs.org/rules/valid-v-if.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-is"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-is` directives
                                https://eslint.vuejs.org/rules/valid-v-is.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-memo"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-memo` directives
                                https://eslint.vuejs.org/rules/valid-v-memo.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-model"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-model` directives
                                https://eslint.vuejs.org/rules/valid-v-model.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-on"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            modifiers | Array Dyn | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce valid `v-on` directives
                                https://eslint.vuejs.org/rules/valid-v-on.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-once"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-once` directives
                                https://eslint.vuejs.org/rules/valid-v-once.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-pre"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-pre` directives
                                https://eslint.vuejs.org/rules/valid-v-pre.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-show"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-show` directives
                                https://eslint.vuejs.org/rules/valid-v-show.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-slot"
                              | std.contract.any_of
                                [
                                  std.contract.Sequence
                                    [
                                      refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                      Number
                                    ],
                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString",
                                  std.contract.Sequence
                                    [
                                      js2n.array.MaxItems 2,
                                      js2n.array.MinItems 2,
                                      js2n.array.Items
                                        [
                                          std.contract.any_of
                                            [
                                              std.contract.Sequence
                                                [
                                                  refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleNumber",
                                                  Number
                                                ],
                                              refs."properties.eslintConfig.properties.rules.allOf.8.definitions.ruleString"
                                            ],
                                          {
                                            allowModifiers | Bool | optional,
                                            ..
                                          }
                                        ] js2n.Always
                                    ]
                                ]
                              | doc m%"
                                enforce valid `v-slot` directives
                                https://eslint.vuejs.org/rules/valid-v-slot.html
                              "%
                              | optional,
                            "eslint-plugin-vue/valid-v-text"
                              | std.contract.any_of
                                [
                                  js2n.Null,
                                  Bool,
                                  Number,
                                  String,
                                  { _ | Dyn },
                                  Array Dyn
                                ]
                              | doc m%"
                                enforce valid `v-text` directives
                                https://eslint.vuejs.org/rules/valid-v-text.html
                              "%
                              | optional,
                            ..
                          }
                          | doc "ESLint comes with a large number of rules. You can modify which rules your project uses either using configuration comments or configuration files."
                          | optional,
                        settings
                          | { _ | Dyn }
                          | doc "ESLint supports adding shared settings into configuration file. You can add settings object to ESLint configuration file and it will be supplied to every rule that will be executed. This may be useful if you are adding custom rules and want them to have access to the same information and be easily configurable."
                          | optional,
                        ..
                      },
                  esnext =
                    std.contract.any_of
                        [
                          String,
                          js2n.record.Record
                            {
                              additional = 'Some String,
                              patterns = {},
                              properties = { browser = String, main = String, },
                              required = {},
                            }
                        ],
                  exports =
                    js2n.OneOf
                        [
                          refs."definitions.packageExportsEntryPath",
                          js2n.record.Record
                            {
                              additional = 'None,
                              patterns =
                                {
                                    "^\\./.+" =
                                      refs."definitions.packageExportsEntryOrFallback",
                                  },
                              properties =
                                {
                                    "." =
                                      refs."definitions.packageExportsEntryOrFallback",
                                  },
                              required = {},
                            },
                          refs."definitions.packageExportsEntryObject",
                          refs."definitions.packageExportsFallback"
                        ],
                  files = Array String,
                  funding =
                    std.contract.any_of
                        [
                          refs."definitions.fundingUrl",
                          refs."definitions.fundingWay",
                          std.contract.Sequence
                            [
                              js2n.array.MinItems 1,
                              js2n.array.UniqueItems,
                              Array (
                                std.contract.any_of
                                  [
                                    refs."definitions.fundingUrl",
                                    refs."definitions.fundingWay"
                                  ]
                              )
                            ]
                        ],
                  homepage = String,
                  imports =
                    std.contract.Sequence
                        [
                          {
                            _ | refs."definitions.packageImportsEntryOrFallback"
                          },
                          js2n.record.FieldsMatch "^#.+$"
                        ],
                  jscpd =
                    {
                        absolute
                          | Bool
                          | doc "use absolute paths in reports"
                          | optional,
                        blame
                          | Bool
                          | doc "get information about authors and dates of duplicated blocks from Git"
                          | optional,
                        exitCode
                          | std.number.Integer
                          | doc "exit code to use when at least one duplicate code block is detected but threshold is not exceeded"
                          | optional,
                        format
                          | Array refs."properties.jscpd.definitions.format"
                          | doc "list of formats for which to detect duplication (default: all); see https://github.com/kucherenko/jscpd/blob/master/supported_formats.md"
                          | optional,
                        formatsExts
                          | { _ | Array String }
                          | doc "custom mapping from formats to file extensions (default: https://github.com/kucherenko/jscpd/blob/master/packages/tokenizer/src/formats.ts); see https://github.com/kucherenko/jscpd/blob/master/supported_formats.md"
                          | optional,
                        gitignore
                          | Bool
                          | doc "ignore all files from .gitignore file"
                          | optional,
                        ignore
                          | Array String
                          | doc "glob pattern for files that should be excluded from duplicate detection"
                          | optional,
                        ignoreCase
                          | Bool
                          | doc "ignore case of symbols in code (experimental)"
                          | optional,
                        ignorePattern
                          | Array String
                          | doc "ignore code blocks matching these regular expressions"
                          | optional,
                        maxLines
                          | std.number.Integer
                          | doc "maximum size of source file in lines to check for duplication"
                          | optional,
                        maxSize
                          | std.contract.any_of
                            [
                              js2n.string.Matches
                                "^\\+?[0-9]+(\\.[0-9]+)? *[kKmMgGtTpP][bB]$",
                              std.number.Integer
                            ]
                          | doc "maximum size of source file in bytes to check for duplication (e.g.,: 1kb, 1mb, 120kb)"
                          | optional,
                        minLines
                          | std.number.Integer
                          | doc "minimum size of code block in lines to check for duplication"
                          | optional,
                        minTokens
                          | std.number.Integer
                          | doc "minimum size of code block in tokens to check for duplication"
                          | optional,
                        mode
                          | std.enum.TagOrString
                          | [| 'weak, 'strict, 'mild |]
                          | doc "mode of detection quality; see https://github.com/kucherenko/jscpd/blob/master/packages/jscpd/README.md#mode"
                          | optional,
                        noSymlinks
                          | Bool
                          | doc "do not follow symlinks"
                          | optional,
                        output
                          | String
                          | doc "path to directory for non-console reports"
                          | optional,
                        path
                          | Array String
                          | doc "paths that should be included in duplicate detection (default: [process.cwd()])"
                          | optional,
                        pattern
                          | String
                          | doc "glob pattern for files that should be included in duplicate detection (e.g., **/*.txt); only used to filter directories configured via path option"
                          | optional,
                        reporters
                          | Array (
                            std.contract.Sequence
                              [
                                std.enum.TagOrString,
                                [|
                                  'xcode,
                                  'threshold,
                                  'silent,
                                  'console,
                                  'html,
                                  'consoleFull,
                                  'markdown,
                                  'csv,
                                  'json,
                                  'xml
                                |]
                              ]
                          )
                          | doc "a list of reporters to use to output information about duplication; see https://github.com/kucherenko/jscpd/blob/master/packages/jscpd/README.md#reporters"
                          | optional,
                        reportersOptions
                          | {
                            badge
                              | {
                                color
                                  | refs."properties.jscpd.definitions.color"
                                  | doc "badge color (name or RGB code without #, default: green if beneath threshold, red if above threshold, grey if threshold not set); see https://github.com/badgen/badgen/blob/master/src/color-presets.ts"
                                  | optional,
                                icon
                                  | String
                                  | doc "URL for icon to display in front of badge subject text (e.g., data:image/svg+xml;base64,...)"
                                  | optional,
                                iconWidth
                                  | Number
                                  | doc "SVG width of icon to display in front of badge subject text; set this if icon is not square"
                                  | optional,
                                label
                                  | String
                                  | doc "badge subject text (URL-encoding needed for spaces or special characters)"
                                  | optional,
                                labelColor
                                  | refs."properties.jscpd.definitions.color"
                                  | doc "badge label color (name or RGB code without #); see https://github.com/badgen/badgen/blob/master/src/color-presets.ts"
                                  | optional,
                                path
                                  | String
                                  | doc "output path for duplication level badge (default: path.join(output, 'jscpd-badge.svg'))"
                                  | optional,
                                scale
                                  | Number
                                  | doc "size of badge relative to default of 1"
                                  | optional,
                                status
                                  | String
                                  | doc "badge value text (URL-encoding needed for spaces or special characters, default: duplication %)"
                                  | optional,
                                style
                                  | std.enum.TagOrString
                                  | [| 'classic, 'flat |]
                                  | doc "badge look: flat or classic"
                                  | optional,
                              }
                              | optional,
                          }
                          | optional,
                        silent
                          | Bool
                          | doc "do not write duplicate detection progress and result to console"
                          | optional,
                        skipLocal
                          | Bool
                          | doc "skip duplicates within folders; just detect cross-folder duplicates"
                          | optional,
                        store
                          | std.enum.TagOrString
                          | [| 'redis, 'leveldb |]
                          | doc "store used to collect information about code (default: in-memory store); install @jscpd/leveldb-store and use leveldb for big repositories"
                          | optional,
                        threshold
                          | Number
                          | doc "maximum allowed duplicate lines expressed as a percentage; exit with error and exit code 1 when threshold exceeded"
                          | optional,
                        verbose
                          | Bool
                          | doc "show full information during duplicate detection"
                          | optional,
                      },
                  jspm =
                    std.contract.any_of
                        [
                          js2n.Null,
                          Bool,
                          { _ | Dyn },
                          Array Dyn,
                          Number,
                          String
                        ],
                  keywords = Array String,
                  license = refs."definitions.license",
                  licenses =
                    Array
                        {
                          type | refs."definitions.license" | optional,
                          url | String | optional,
                          ..
                        },
                  main = String,
                  maintainers = Array refs."definitions.person",
                  man = std.contract.any_of [ String, Array String ],
                  module = String,
                  name =
                    std.contract.Sequence
                        [
                          js2n.string.MaxLength 214,
                          js2n.string.MinLength 1,
                          js2n.string.Matches
                            "^(?:(?:@(?:[a-z0-9-*~][a-z0-9-*._~]*)?/[a-z0-9-._~])|[a-z0-9-~])[a-z0-9-._~]*$"
                        ],
                  optionalDependencies = refs."definitions.optionalDependency",
                  os = Array String,
                  overrides = { _ | Dyn },
                  packageManager =
                    js2n.string.Matches
                        "(npm|pnpm|yarn|bun)@\\d+\\.\\d+\\.\\d+(-.+)?",
                  peerDependencies = refs."definitions.peerDependency",
                  peerDependenciesMeta = refs."definitions.peerDependencyMeta",
                  pnpm =
                    {
                        allowNonAppliedPatches
                          | Bool
                          | doc "When true, installation won't fail if some of the patches from the \"patchedDependencies\" field were not applied."
                          | optional,
                        allowedDeprecatedVersions
                          | { _ | Dyn }
                          | doc "A list of deprecated versions that the warnings are suppressed."
                          | optional,
                        auditConfig
                          | {
                            ignoreCves
                              | Array (
                                js2n.string.Matches "^CVE-\\d{4}-\\d{4,7}$"
                              )
                              | doc "A list of CVE IDs that will be ignored by \"pnpm audit\"."
                              | optional,
                            ignoreGhsas
                              | Array (
                                js2n.string.Matches
                                  "^GHSA(-[23456789cfghjmpqrvwx]{4}){3}$"
                              )
                              | doc "A list of GHSA Codes that will be ignored by \"pnpm audit\"."
                              | optional,
                          }
                          | optional,
                        configDependencies
                          | { _ | Dyn }
                          | doc "Configurational dependencies are installed before all the other types of dependencies (before 'dependencies', 'devDependencies', 'optionalDependencies')."
                          | optional,
                        executionEnv
                          | {
                            nodeVersion
                              | String
                              | doc "Specifies which exact Node.js version should be used for the project's runtime."
                              | optional,
                          }
                          | optional,
                        ignoredBuiltDependencies
                          | Array String
                          | doc "A list of package names that should not be built during installation."
                          | optional,
                        ignoredOptionalDependencies
                          | Array String
                          | doc "A list of optional dependencies that the install should be skipped."
                          | optional,
                        neverBuiltDependencies
                          | Array String
                          | doc "A list of dependencies to run builds for."
                          | optional,
                        onlyBuiltDependencies
                          | Array String
                          | doc "A list of package names that are allowed to be executed during installation."
                          | optional,
                        onlyBuiltDependenciesFile
                          | String
                          | doc "Specifies a JSON file that lists the only packages permitted to run installation scripts during the pnpm install process."
                          | optional,
                        overrides
                          | { _ | Dyn }
                          | doc "Used to override any dependency in the dependency graph."
                          | optional,
                        packageExtensions
                          | {
                            _ | {
                              dependencies
                                | refs."definitions.dependency"
                                | optional,
                              optionalDependencies
                                | refs."definitions.optionalDependency"
                                | optional,
                              peerDependencies
                                | refs."definitions.peerDependency"
                                | optional,
                              peerDependenciesMeta
                                | refs."definitions.peerDependencyMeta"
                                | optional,
                            }
                          }
                          | js2n.record.FieldsMatch "^.+$"
                          | doc "Used to extend the existing package definitions with additional information."
                          | optional,
                        patchedDependencies
                          | { _ | Dyn }
                          | doc "A list of dependencies that are patched."
                          | optional,
                        peerDependencyRules
                          | {
                            allowAny
                              | Array String
                              | doc "Any peer dependency matching the pattern will be resolved from any version, regardless of the range specified in \"peerDependencies\"."
                              | optional,
                            allowedVersions
                              | { _ | Dyn }
                              | doc "Unmet peer dependency warnings will not be printed for peer dependencies of the specified range."
                              | optional,
                            ignoreMissing
                              | Array String
                              | doc "pnpm will not print warnings about missing peer dependencies from this list."
                              | optional,
                          }
                          | optional,
                        requiredScripts
                          | Array String
                          | doc "A list of scripts that must exist in each project."
                          | optional,
                        supportedArchitectures
                          | {
                            cpu | Array String | optional,
                            libc | Array String | optional,
                            os | Array String | optional,
                          }
                          | doc "Specifies architectures for which you'd like to install optional dependencies, even if they don't match the architecture of the system running the install."
                          | optional,
                        updateConfig
                          | {
                            ignoreDependencies
                              | Array String
                              | doc "A list of packages that should be ignored when running \"pnpm outdated\" or \"pnpm update --latest\"."
                              | optional,
                          }
                          | optional,
                      },
                  preferGlobal = Bool,
                  prettier =
                    std.contract.any_of
                        [
                          std.contract.Sequence
                            [
                              refs."properties.prettier.definitions.optionsDefinition",
                              refs."properties.prettier.definitions.overridesDefinition"
                            ],
                          String
                        ],
                  private =
                    std.contract.any_of
                        [
                          Bool,
                          std.contract.Sequence
                            [ std.enum.TagOrString, [| '"true", '"false" |] ]
                        ],
                  publishConfig =
                    {
                        access
                          | std.enum.TagOrString
                          | [| 'restricted, 'public |]
                          | optional,
                        provenance | Bool | optional,
                        registry | String | optional,
                        tag | String | optional,
                        ..
                      },
                  readme = String,
                  release =
                    {
                        branches
                          | std.contract.any_of
                            [
                              String,
                              refs."properties.release.definitions.branch-object",
                              Array (
                                std.contract.any_of
                                  [
                                    String,
                                    refs."properties.release.definitions.branch-object"
                                  ]
                              )
                            ]
                          | doc "The branches on which releases should happen."
                          | optional,
                        ci
                          | Bool
                          | doc "Set to false to skip Continuous Integration environment verifications. This allows for making releases from a local machine"
                          | optional,
                        dryRun
                          | Bool
                          | doc "The objective of the dry-run mode is to get a preview of the pending release. Dry-run mode skips the following steps: prepare, publish, success and fail. In addition to this it prints the next version and release notes to the console"
                          | optional,
                        extends
                          | std.contract.any_of [ String, Array String ]
                          | doc "List of modules or file paths containing a shareable configuration. If multiple shareable configurations are set, they will be imported in the order defined with each configuration option taking precedence over the options defined in a previous shareable configuration"
                          | optional,
                        plugins
                          | Array (std.contract.any_of [ Array Dyn, String ])
                          | doc "Define the list of plugins to use. Plugins will run in series, in the order defined"
                          | optional,
                        repositoryUrl
                          | String
                          | doc "The git repository URL"
                          | optional,
                        tagFormat
                          | String
                          | doc "The Git tag format used by semantic-release to identify releases. The tag name is generated with Lodash template and will be compiled with the version variable."
                          | optional,
                        ..
                      },
                  repository =
                    std.contract.any_of
                        [
                          String,
                          {
                            directory | String | optional,
                            type | String | optional,
                            url | String | optional,
                            ..
                          }
                        ],
                  resolutions = { _ | Dyn },
                  scripts =
                    js2n.record.Record
                        {
                          additional = 'Some String,
                          patterns = {},
                          properties =
                            {
                                install =
                                  refs."definitions.scriptsInstallAfter",
                                lint = String,
                                postinstall =
                                  refs."definitions.scriptsInstallAfter",
                                postpack = String,
                                postpublish =
                                  refs."definitions.scriptsPublishAfter",
                                postrestart = refs."definitions.scriptsRestart",
                                poststart = refs."definitions.scriptsStart",
                                poststop = refs."definitions.scriptsStop",
                                posttest = refs."definitions.scriptsTest",
                                postuninstall = String,
                                postversion = String,
                                preinstall = String,
                                prepack = String,
                                prepare = String,
                                prepublish = String,
                                prepublishOnly = String,
                                prerestart = refs."definitions.scriptsRestart",
                                prestart = refs."definitions.scriptsStart",
                                prestop = refs."definitions.scriptsStop",
                                pretest = refs."definitions.scriptsTest",
                                preuninstall =
                                  refs."definitions.scriptsUninstallBefore",
                                preversion =
                                  refs."definitions.scriptsVersionBefore",
                                publish = String,
                                restart = refs."definitions.scriptsRestart",
                                serve = String,
                                start = refs."definitions.scriptsStart",
                                stop = refs."definitions.scriptsStop",
                                test = refs."definitions.scriptsTest",
                                uninstall =
                                  refs."definitions.scriptsUninstallBefore",
                                version =
                                  refs."definitions.scriptsVersionBefore",
                              },
                          required = {},
                        },
                  stackblitz =
                    {
                        compileTrigger
                          | std.enum.TagOrString
                          | [| 'save, 'keystroke, 'auto |]
                          | doc "The compileTrigger option controls how file changes in the editor are written to the WebContainers in-memory filesystem. "
                          | optional,
                        env
                          | { _ | Dyn }
                          | doc "A map of default environment variables that will be set in each top-level shell process."
                          | optional,
                        installDependencies
                          | Bool
                          | doc "StackBlitz automatically installs npm dependencies when opening a project."
                          | optional,
                        startCommand
                          | std.contract.any_of [ Bool, String ]
                          | doc "A terminal command to be executed when opening the project, after installing npm dependencies."
                          | optional,
                      },
                  stylelint =
                    {
                        customSyntax
                          | String
                          | doc "Specify a custom syntax to use on your code."
                          | optional,
                        defaultSeverity
                          | std.enum.TagOrString
                          | [| 'error, 'warning |]
                          | doc "The default severity level for all rules that do not have a severity specified in their secondary options"
                          | optional,
                        extends
                          | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                          | doc "Your configuration can extend an existing configuration(s) (whether your own or a third-party config)"
                          | optional,
                        ignoreDisables
                          | Bool
                          | doc "Ignore stylelint-disable (e.g. /* stylelint-disable block-no-empty */) comments."
                          | optional,
                        ignoreFiles
                          | refs."properties.stylelint.definitions.simpleStringOrArrayStringRule"
                          | doc "Provide a glob or array of globs to ignore specific files"
                          | optional,
                        overrides
                          | Array
                            {
                              customSyntax | String | optional,
                              files | Array String | optional,
                              rules
                                | refs."properties.stylelint.definitions.allRules"
                                | { _ | Dyn }
                                | optional,
                              ..
                            }
                          | doc "Provide rule and behavior overrides for files that match particular glob patterns."
                          | optional,
                        plugins
                          | refs."properties.stylelint.definitions.simpleArrayStringRule"
                          | Array Dyn
                          | doc "Plugins are rules or sets of rules built by the community that support methodologies, toolsets, non-standard CSS features, or very specific use cases"
                          | optional,
                        processors
                          | Array (
                            std.contract.any_of
                              [
                                String,
                                js2n.array.Items [ String ] ({ _ | Dyn })
                              ]
                          )
                          | doc "Processors are functions that hook into stylelint's pipeline, modifying code on its way into stylelint and modifying results on their way out"
                          | optional,
                        reportDescriptionlessDisables
                          | refs."properties.stylelint.definitions.booleanRule"
                          | doc "Report stylelint-disable comments without a description."
                          | optional,
                        reportInvalidScopeDisables
                          | refs."properties.stylelint.definitions.booleanRule"
                          | doc "Report stylelint-disable comments that don't match rules that are specified in the configuration object."
                          | optional,
                        reportNeedlessDisables
                          | refs."properties.stylelint.definitions.booleanRule"
                          | doc "Report stylelint-disable comments that don't actually match any lints that need to be disabled"
                          | optional,
                        rules
                          | refs."properties.stylelint.definitions.allRules"
                          | { _ | Dyn }
                          | optional,
                        ..
                      },
                  type =
                    std.contract.Sequence
                        [ std.enum.TagOrString, [| 'module, 'commonjs |] ],
                  types = String,
                  typesVersions =
                    {
                        _ | js2n.record.Record
                          {
                            additional = 'None,
                            patterns =
                              {
                                  "^[^*]*\\*[^*]*$" =
                                    Array (
                                        js2n.string.Matches
                                          "^[^*]*(?:\\*[^*]*)?$"
                                      ),
                                  "^[^*]+$" = Array String,
                                },
                            properties =
                              {
                                  "*" =
                                    Array (
                                        js2n.string.Matches
                                          "^[^*]*(?:\\*[^*]*)?$"
                                      ),
                                },
                            required = {},
                          }
                      },
                  typings = String,
                  version = String,
                  volta =
                    js2n.record.Record
                        {
                          additional = 'Some Dyn,
                          patterns = { "(node|npm|pnpm|yarn)" = String, },
                          properties = { extends = String, },
                          required = {},
                        },
                  workspaces =
                    std.contract.any_of
                        [
                          Array String,
                          {
                            nohoist
                              | Array String
                              | doc "Packages to block from hoisting to the workspace root. Currently only supported in Yarn only."
                              | optional,
                            packages
                              | Array String
                              | doc "Workspace package paths. Glob patterns are supported."
                              | optional,
                            ..
                          }
                        ],
                },
            required = {},
          }
      ]